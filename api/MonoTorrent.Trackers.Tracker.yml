### YamlMime:ManagedReference
items:
- uid: MonoTorrent.Trackers.Tracker
  commentId: T:MonoTorrent.Trackers.Tracker
  id: Tracker
  parent: MonoTorrent.Trackers
  children:
  - MonoTorrent.Trackers.Tracker.#ctor(MonoTorrent.Connections.Tracker.ITrackerConnection)
  - MonoTorrent.Trackers.Tracker.#ctor(MonoTorrent.Connections.Tracker.ITrackerConnection[])
  - MonoTorrent.Trackers.Tracker.AnnounceAsync(MonoTorrent.Trackers.AnnounceRequest,System.Threading.CancellationToken)
  - MonoTorrent.Trackers.Tracker.AnnounceKey
  - MonoTorrent.Trackers.Tracker.CanAnnounce
  - MonoTorrent.Trackers.Tracker.CanScrape
  - MonoTorrent.Trackers.Tracker.FailureMessage
  - MonoTorrent.Trackers.Tracker.MinUpdateInterval
  - MonoTorrent.Trackers.Tracker.ScrapeAsync(MonoTorrent.Trackers.ScrapeRequest,System.Threading.CancellationToken)
  - MonoTorrent.Trackers.Tracker.ScrapeInfo
  - MonoTorrent.Trackers.Tracker.Status
  - MonoTorrent.Trackers.Tracker.TimeSinceLastAnnounce
  - MonoTorrent.Trackers.Tracker.UpdateInterval
  - MonoTorrent.Trackers.Tracker.Uri
  - MonoTorrent.Trackers.Tracker.WarningMessage
  langs:
  - csharp
  - vb
  name: Tracker
  nameWithType: Tracker
  fullName: MonoTorrent.Trackers.Tracker
  type: Class
  source:
    remote:
      path: MonoTorrent/src/Connections/Tracker/Tracker.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: Tracker
    path: src/Connections/Tracker/Tracker.cs
    startLine: 42
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.Trackers
  syntax:
    content: 'public class Tracker : ITracker'
    content.vb: Public Class Tracker Implements ITracker
  inheritance:
  - System.Object
  implements:
  - MonoTorrent.Trackers.ITracker
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: MonoTorrent.Trackers.Tracker.AnnounceKey
  commentId: P:MonoTorrent.Trackers.Tracker.AnnounceKey
  id: AnnounceKey
  parent: MonoTorrent.Trackers.Tracker
  langs:
  - csharp
  - vb
  name: AnnounceKey
  nameWithType: Tracker.AnnounceKey
  fullName: MonoTorrent.Trackers.Tracker.AnnounceKey
  type: Property
  source:
    remote:
      path: MonoTorrent/src/Connections/Tracker/Tracker.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: AnnounceKey
    path: src/Connections/Tracker/Tracker.cs
    startLine: 52
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.Trackers
  syntax:
    content: public int AnnounceKey { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property AnnounceKey As Integer
  overload: MonoTorrent.Trackers.Tracker.AnnounceKey*
- uid: MonoTorrent.Trackers.Tracker.CanAnnounce
  commentId: P:MonoTorrent.Trackers.Tracker.CanAnnounce
  id: CanAnnounce
  parent: MonoTorrent.Trackers.Tracker
  langs:
  - csharp
  - vb
  name: CanAnnounce
  nameWithType: Tracker.CanAnnounce
  fullName: MonoTorrent.Trackers.Tracker.CanAnnounce
  type: Property
  source:
    remote:
      path: MonoTorrent/src/Connections/Tracker/Tracker.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: CanAnnounce
    path: src/Connections/Tracker/Tracker.cs
    startLine: 54
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.Trackers
  syntax:
    content: public bool CanAnnounce { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property CanAnnounce As Boolean
  overload: MonoTorrent.Trackers.Tracker.CanAnnounce*
- uid: MonoTorrent.Trackers.Tracker.CanScrape
  commentId: P:MonoTorrent.Trackers.Tracker.CanScrape
  id: CanScrape
  parent: MonoTorrent.Trackers.Tracker
  langs:
  - csharp
  - vb
  name: CanScrape
  nameWithType: Tracker.CanScrape
  fullName: MonoTorrent.Trackers.Tracker.CanScrape
  type: Property
  source:
    remote:
      path: MonoTorrent/src/Connections/Tracker/Tracker.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: CanScrape
    path: src/Connections/Tracker/Tracker.cs
    startLine: 55
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.Trackers
  summary: True if the tracker supports Scrape requests.
  example: []
  syntax:
    content: public bool CanScrape { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property CanScrape As Boolean
  overload: MonoTorrent.Trackers.Tracker.CanScrape*
  implements:
  - MonoTorrent.Trackers.ITracker.CanScrape
- uid: MonoTorrent.Trackers.Tracker.ScrapeInfo
  commentId: P:MonoTorrent.Trackers.Tracker.ScrapeInfo
  id: ScrapeInfo
  parent: MonoTorrent.Trackers.Tracker
  langs:
  - csharp
  - vb
  name: ScrapeInfo
  nameWithType: Tracker.ScrapeInfo
  fullName: MonoTorrent.Trackers.Tracker.ScrapeInfo
  type: Property
  source:
    remote:
      path: MonoTorrent/src/Connections/Tracker/Tracker.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: ScrapeInfo
    path: src/Connections/Tracker/Tracker.cs
    startLine: 57
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.Trackers
  syntax:
    content: public Dictionary<InfoHash, ScrapeInfo> ScrapeInfo { get; }
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{MonoTorrent.InfoHash,MonoTorrent.Trackers.ScrapeInfo}
    content.vb: Public ReadOnly Property ScrapeInfo As Dictionary(Of InfoHash, ScrapeInfo)
  overload: MonoTorrent.Trackers.Tracker.ScrapeInfo*
- uid: MonoTorrent.Trackers.Tracker.FailureMessage
  commentId: P:MonoTorrent.Trackers.Tracker.FailureMessage
  id: FailureMessage
  parent: MonoTorrent.Trackers.Tracker
  langs:
  - csharp
  - vb
  name: FailureMessage
  nameWithType: Tracker.FailureMessage
  fullName: MonoTorrent.Trackers.Tracker.FailureMessage
  type: Property
  source:
    remote:
      path: MonoTorrent/src/Connections/Tracker/Tracker.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: FailureMessage
    path: src/Connections/Tracker/Tracker.cs
    startLine: 59
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.Trackers
  summary: The failure message sent with the most recent announce request.
  example: []
  syntax:
    content: public string FailureMessage { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property FailureMessage As String
  overload: MonoTorrent.Trackers.Tracker.FailureMessage*
  implements:
  - MonoTorrent.Trackers.ITracker.FailureMessage
- uid: MonoTorrent.Trackers.Tracker.WarningMessage
  commentId: P:MonoTorrent.Trackers.Tracker.WarningMessage
  id: WarningMessage
  parent: MonoTorrent.Trackers.Tracker
  langs:
  - csharp
  - vb
  name: WarningMessage
  nameWithType: Tracker.WarningMessage
  fullName: MonoTorrent.Trackers.Tracker.WarningMessage
  type: Property
  source:
    remote:
      path: MonoTorrent/src/Connections/Tracker/Tracker.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: WarningMessage
    path: src/Connections/Tracker/Tracker.cs
    startLine: 60
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.Trackers
  summary: The warning message sent with the most recent announce request.
  example: []
  syntax:
    content: public string WarningMessage { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property WarningMessage As String
  overload: MonoTorrent.Trackers.Tracker.WarningMessage*
  implements:
  - MonoTorrent.Trackers.ITracker.WarningMessage
- uid: MonoTorrent.Trackers.Tracker.MinUpdateInterval
  commentId: P:MonoTorrent.Trackers.Tracker.MinUpdateInterval
  id: MinUpdateInterval
  parent: MonoTorrent.Trackers.Tracker
  langs:
  - csharp
  - vb
  name: MinUpdateInterval
  nameWithType: Tracker.MinUpdateInterval
  fullName: MonoTorrent.Trackers.Tracker.MinUpdateInterval
  type: Property
  source:
    remote:
      path: MonoTorrent/src/Connections/Tracker/Tracker.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: MinUpdateInterval
    path: src/Connections/Tracker/Tracker.cs
    startLine: 63
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.Trackers
  summary: The minimum interval between announce requests.
  example: []
  syntax:
    content: public TimeSpan MinUpdateInterval { get; }
    parameters: []
    return:
      type: System.TimeSpan
    content.vb: Public ReadOnly Property MinUpdateInterval As TimeSpan
  overload: MonoTorrent.Trackers.Tracker.MinUpdateInterval*
  implements:
  - MonoTorrent.Trackers.ITracker.MinUpdateInterval
- uid: MonoTorrent.Trackers.Tracker.UpdateInterval
  commentId: P:MonoTorrent.Trackers.Tracker.UpdateInterval
  id: UpdateInterval
  parent: MonoTorrent.Trackers.Tracker
  langs:
  - csharp
  - vb
  name: UpdateInterval
  nameWithType: Tracker.UpdateInterval
  fullName: MonoTorrent.Trackers.Tracker.UpdateInterval
  type: Property
  source:
    remote:
      path: MonoTorrent/src/Connections/Tracker/Tracker.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: UpdateInterval
    path: src/Connections/Tracker/Tracker.cs
    startLine: 64
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.Trackers
  summary: The recommended interval between announce requests.
  example: []
  syntax:
    content: public TimeSpan UpdateInterval { get; }
    parameters: []
    return:
      type: System.TimeSpan
    content.vb: Public ReadOnly Property UpdateInterval As TimeSpan
  overload: MonoTorrent.Trackers.Tracker.UpdateInterval*
  implements:
  - MonoTorrent.Trackers.ITracker.UpdateInterval
- uid: MonoTorrent.Trackers.Tracker.Status
  commentId: P:MonoTorrent.Trackers.Tracker.Status
  id: Status
  parent: MonoTorrent.Trackers.Tracker
  langs:
  - csharp
  - vb
  name: Status
  nameWithType: Tracker.Status
  fullName: MonoTorrent.Trackers.Tracker.Status
  type: Property
  source:
    remote:
      path: MonoTorrent/src/Connections/Tracker/Tracker.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: Status
    path: src/Connections/Tracker/Tracker.cs
    startLine: 67
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.Trackers
  summary: The status of the tracker after the most recent announce request.
  example: []
  syntax:
    content: public TrackerState Status { get; }
    parameters: []
    return:
      type: MonoTorrent.Trackers.TrackerState
    content.vb: Public ReadOnly Property Status As TrackerState
  overload: MonoTorrent.Trackers.Tracker.Status*
  implements:
  - MonoTorrent.Trackers.ITracker.Status
- uid: MonoTorrent.Trackers.Tracker.TimeSinceLastAnnounce
  commentId: P:MonoTorrent.Trackers.Tracker.TimeSinceLastAnnounce
  id: TimeSinceLastAnnounce
  parent: MonoTorrent.Trackers.Tracker
  langs:
  - csharp
  - vb
  name: TimeSinceLastAnnounce
  nameWithType: Tracker.TimeSinceLastAnnounce
  fullName: MonoTorrent.Trackers.Tracker.TimeSinceLastAnnounce
  type: Property
  source:
    remote:
      path: MonoTorrent/src/Connections/Tracker/Tracker.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: TimeSinceLastAnnounce
    path: src/Connections/Tracker/Tracker.cs
    startLine: 68
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.Trackers
  summary: The time since the last announce request was sent.
  example: []
  syntax:
    content: public TimeSpan TimeSinceLastAnnounce { get; }
    parameters: []
    return:
      type: System.TimeSpan
    content.vb: Public ReadOnly Property TimeSinceLastAnnounce As TimeSpan
  overload: MonoTorrent.Trackers.Tracker.TimeSinceLastAnnounce*
  implements:
  - MonoTorrent.Trackers.ITracker.TimeSinceLastAnnounce
- uid: MonoTorrent.Trackers.Tracker.Uri
  commentId: P:MonoTorrent.Trackers.Tracker.Uri
  id: Uri
  parent: MonoTorrent.Trackers.Tracker
  langs:
  - csharp
  - vb
  name: Uri
  nameWithType: Tracker.Uri
  fullName: MonoTorrent.Trackers.Tracker.Uri
  type: Property
  source:
    remote:
      path: MonoTorrent/src/Connections/Tracker/Tracker.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: Uri
    path: src/Connections/Tracker/Tracker.cs
    startLine: 69
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.Trackers
  summary: The uri for the tracker
  example: []
  syntax:
    content: public Uri Uri { get; }
    parameters: []
    return:
      type: System.Uri
    content.vb: Public ReadOnly Property Uri As Uri
  overload: MonoTorrent.Trackers.Tracker.Uri*
  implements:
  - MonoTorrent.Trackers.ITracker.Uri
- uid: MonoTorrent.Trackers.Tracker.#ctor(MonoTorrent.Connections.Tracker.ITrackerConnection)
  commentId: M:MonoTorrent.Trackers.Tracker.#ctor(MonoTorrent.Connections.Tracker.ITrackerConnection)
  id: '#ctor(MonoTorrent.Connections.Tracker.ITrackerConnection)'
  parent: MonoTorrent.Trackers.Tracker
  langs:
  - csharp
  - vb
  name: Tracker(ITrackerConnection)
  nameWithType: Tracker.Tracker(ITrackerConnection)
  fullName: MonoTorrent.Trackers.Tracker.Tracker(MonoTorrent.Connections.Tracker.ITrackerConnection)
  type: Constructor
  source:
    remote:
      path: MonoTorrent/src/Connections/Tracker/Tracker.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: .ctor
    path: src/Connections/Tracker/Tracker.cs
    startLine: 73
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.Trackers
  syntax:
    content: public Tracker(ITrackerConnection connection)
    parameters:
    - id: connection
      type: MonoTorrent.Connections.Tracker.ITrackerConnection
    content.vb: Public Sub New(connection As ITrackerConnection)
  overload: MonoTorrent.Trackers.Tracker.#ctor*
  nameWithType.vb: Tracker.New(ITrackerConnection)
  fullName.vb: MonoTorrent.Trackers.Tracker.New(MonoTorrent.Connections.Tracker.ITrackerConnection)
  name.vb: New(ITrackerConnection)
- uid: MonoTorrent.Trackers.Tracker.#ctor(MonoTorrent.Connections.Tracker.ITrackerConnection[])
  commentId: M:MonoTorrent.Trackers.Tracker.#ctor(MonoTorrent.Connections.Tracker.ITrackerConnection[])
  id: '#ctor(MonoTorrent.Connections.Tracker.ITrackerConnection[])'
  parent: MonoTorrent.Trackers.Tracker
  langs:
  - csharp
  - vb
  name: Tracker(params ITrackerConnection[])
  nameWithType: Tracker.Tracker(params ITrackerConnection[])
  fullName: MonoTorrent.Trackers.Tracker.Tracker(params MonoTorrent.Connections.Tracker.ITrackerConnection[])
  type: Constructor
  source:
    remote:
      path: MonoTorrent/src/Connections/Tracker/Tracker.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: .ctor
    path: src/Connections/Tracker/Tracker.cs
    startLine: 78
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.Trackers
  syntax:
    content: public Tracker(params ITrackerConnection[] connections)
    parameters:
    - id: connections
      type: MonoTorrent.Connections.Tracker.ITrackerConnection[]
    content.vb: Public Sub New(ParamArray connections As ITrackerConnection())
  overload: MonoTorrent.Trackers.Tracker.#ctor*
  nameWithType.vb: Tracker.New(ParamArray ITrackerConnection())
  fullName.vb: MonoTorrent.Trackers.Tracker.New(ParamArray MonoTorrent.Connections.Tracker.ITrackerConnection())
  name.vb: New(ParamArray ITrackerConnection())
- uid: MonoTorrent.Trackers.Tracker.AnnounceAsync(MonoTorrent.Trackers.AnnounceRequest,System.Threading.CancellationToken)
  commentId: M:MonoTorrent.Trackers.Tracker.AnnounceAsync(MonoTorrent.Trackers.AnnounceRequest,System.Threading.CancellationToken)
  id: AnnounceAsync(MonoTorrent.Trackers.AnnounceRequest,System.Threading.CancellationToken)
  parent: MonoTorrent.Trackers.Tracker
  langs:
  - csharp
  - vb
  name: AnnounceAsync(AnnounceRequest, CancellationToken)
  nameWithType: Tracker.AnnounceAsync(AnnounceRequest, CancellationToken)
  fullName: MonoTorrent.Trackers.Tracker.AnnounceAsync(MonoTorrent.Trackers.AnnounceRequest, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: MonoTorrent/src/Connections/Tracker/Tracker.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: AnnounceAsync
    path: src/Connections/Tracker/Tracker.cs
    startLine: 90
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.Trackers
  summary: Send an announce request to the tracker.
  example: []
  syntax:
    content: public ReusableTask<AnnounceResponse> AnnounceAsync(AnnounceRequest parameters, CancellationToken token)
    parameters:
    - id: parameters
      type: MonoTorrent.Trackers.AnnounceRequest
    - id: token
      type: System.Threading.CancellationToken
      description: The token used to cancel the request.
    return:
      type: ReusableTasks.ReusableTask{MonoTorrent.Trackers.AnnounceResponse}
      description: ''
    content.vb: Public Function AnnounceAsync(parameters As AnnounceRequest, token As CancellationToken) As ReusableTask(Of AnnounceResponse)
  overload: MonoTorrent.Trackers.Tracker.AnnounceAsync*
  implements:
  - MonoTorrent.Trackers.ITracker.AnnounceAsync(MonoTorrent.Trackers.AnnounceRequest,System.Threading.CancellationToken)
- uid: MonoTorrent.Trackers.Tracker.ScrapeAsync(MonoTorrent.Trackers.ScrapeRequest,System.Threading.CancellationToken)
  commentId: M:MonoTorrent.Trackers.Tracker.ScrapeAsync(MonoTorrent.Trackers.ScrapeRequest,System.Threading.CancellationToken)
  id: ScrapeAsync(MonoTorrent.Trackers.ScrapeRequest,System.Threading.CancellationToken)
  parent: MonoTorrent.Trackers.Tracker
  langs:
  - csharp
  - vb
  name: ScrapeAsync(ScrapeRequest, CancellationToken)
  nameWithType: Tracker.ScrapeAsync(ScrapeRequest, CancellationToken)
  fullName: MonoTorrent.Trackers.Tracker.ScrapeAsync(MonoTorrent.Trackers.ScrapeRequest, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: MonoTorrent/src/Connections/Tracker/Tracker.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: ScrapeAsync
    path: src/Connections/Tracker/Tracker.cs
    startLine: 114
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.Trackers
  summary: Send a scrape request to the tracker.
  example: []
  syntax:
    content: public ReusableTask<ScrapeResponse> ScrapeAsync(ScrapeRequest parameters, CancellationToken token)
    parameters:
    - id: parameters
      type: MonoTorrent.Trackers.ScrapeRequest
    - id: token
      type: System.Threading.CancellationToken
      description: The token used to cancel the request.
    return:
      type: ReusableTasks.ReusableTask{MonoTorrent.Trackers.ScrapeResponse}
      description: ''
    content.vb: Public Function ScrapeAsync(parameters As ScrapeRequest, token As CancellationToken) As ReusableTask(Of ScrapeResponse)
  overload: MonoTorrent.Trackers.Tracker.ScrapeAsync*
  implements:
  - MonoTorrent.Trackers.ITracker.ScrapeAsync(MonoTorrent.Trackers.ScrapeRequest,System.Threading.CancellationToken)
references:
- uid: MonoTorrent.Trackers
  commentId: N:MonoTorrent.Trackers
  href: MonoTorrent.html
  name: MonoTorrent.Trackers
  nameWithType: MonoTorrent.Trackers
  fullName: MonoTorrent.Trackers
  spec.csharp:
  - uid: MonoTorrent
    name: MonoTorrent
    href: MonoTorrent.html
  - name: .
  - uid: MonoTorrent.Trackers
    name: Trackers
    href: MonoTorrent.Trackers.html
  spec.vb:
  - uid: MonoTorrent
    name: MonoTorrent
    href: MonoTorrent.html
  - name: .
  - uid: MonoTorrent.Trackers
    name: Trackers
    href: MonoTorrent.Trackers.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: MonoTorrent.Trackers.ITracker
  commentId: T:MonoTorrent.Trackers.ITracker
  parent: MonoTorrent.Trackers
  href: MonoTorrent.Trackers.ITracker.html
  name: ITracker
  nameWithType: ITracker
  fullName: MonoTorrent.Trackers.ITracker
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: MonoTorrent.Trackers.Tracker.AnnounceKey*
  commentId: Overload:MonoTorrent.Trackers.Tracker.AnnounceKey
  href: MonoTorrent.Trackers.Tracker.html#MonoTorrent_Trackers_Tracker_AnnounceKey
  name: AnnounceKey
  nameWithType: Tracker.AnnounceKey
  fullName: MonoTorrent.Trackers.Tracker.AnnounceKey
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: MonoTorrent.Trackers.Tracker.CanAnnounce*
  commentId: Overload:MonoTorrent.Trackers.Tracker.CanAnnounce
  href: MonoTorrent.Trackers.Tracker.html#MonoTorrent_Trackers_Tracker_CanAnnounce
  name: CanAnnounce
  nameWithType: Tracker.CanAnnounce
  fullName: MonoTorrent.Trackers.Tracker.CanAnnounce
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: MonoTorrent.Trackers.Tracker.CanScrape*
  commentId: Overload:MonoTorrent.Trackers.Tracker.CanScrape
  href: MonoTorrent.Trackers.Tracker.html#MonoTorrent_Trackers_Tracker_CanScrape
  name: CanScrape
  nameWithType: Tracker.CanScrape
  fullName: MonoTorrent.Trackers.Tracker.CanScrape
- uid: MonoTorrent.Trackers.ITracker.CanScrape
  commentId: P:MonoTorrent.Trackers.ITracker.CanScrape
  parent: MonoTorrent.Trackers.ITracker
  href: MonoTorrent.Trackers.ITracker.html#MonoTorrent_Trackers_ITracker_CanScrape
  name: CanScrape
  nameWithType: ITracker.CanScrape
  fullName: MonoTorrent.Trackers.ITracker.CanScrape
- uid: MonoTorrent.Trackers.Tracker.ScrapeInfo*
  commentId: Overload:MonoTorrent.Trackers.Tracker.ScrapeInfo
  href: MonoTorrent.Trackers.Tracker.html#MonoTorrent_Trackers_Tracker_ScrapeInfo
  name: ScrapeInfo
  nameWithType: Tracker.ScrapeInfo
  fullName: MonoTorrent.Trackers.Tracker.ScrapeInfo
- uid: System.Collections.Generic.Dictionary{MonoTorrent.InfoHash,MonoTorrent.Trackers.ScrapeInfo}
  commentId: T:System.Collections.Generic.Dictionary{MonoTorrent.InfoHash,MonoTorrent.Trackers.ScrapeInfo}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<InfoHash, ScrapeInfo>
  nameWithType: Dictionary<InfoHash, ScrapeInfo>
  fullName: System.Collections.Generic.Dictionary<MonoTorrent.InfoHash, MonoTorrent.Trackers.ScrapeInfo>
  nameWithType.vb: Dictionary(Of InfoHash, ScrapeInfo)
  fullName.vb: System.Collections.Generic.Dictionary(Of MonoTorrent.InfoHash, MonoTorrent.Trackers.ScrapeInfo)
  name.vb: Dictionary(Of InfoHash, ScrapeInfo)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: MonoTorrent.InfoHash
    name: InfoHash
    href: MonoTorrent.InfoHash.html
  - name: ','
  - name: " "
  - uid: MonoTorrent.Trackers.ScrapeInfo
    name: ScrapeInfo
    href: MonoTorrent.Trackers.ScrapeInfo.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: MonoTorrent.InfoHash
    name: InfoHash
    href: MonoTorrent.InfoHash.html
  - name: ','
  - name: " "
  - uid: MonoTorrent.Trackers.ScrapeInfo
    name: ScrapeInfo
    href: MonoTorrent.Trackers.ScrapeInfo.html
  - name: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: MonoTorrent.Trackers.Tracker.FailureMessage*
  commentId: Overload:MonoTorrent.Trackers.Tracker.FailureMessage
  href: MonoTorrent.Trackers.Tracker.html#MonoTorrent_Trackers_Tracker_FailureMessage
  name: FailureMessage
  nameWithType: Tracker.FailureMessage
  fullName: MonoTorrent.Trackers.Tracker.FailureMessage
- uid: MonoTorrent.Trackers.ITracker.FailureMessage
  commentId: P:MonoTorrent.Trackers.ITracker.FailureMessage
  parent: MonoTorrent.Trackers.ITracker
  href: MonoTorrent.Trackers.ITracker.html#MonoTorrent_Trackers_ITracker_FailureMessage
  name: FailureMessage
  nameWithType: ITracker.FailureMessage
  fullName: MonoTorrent.Trackers.ITracker.FailureMessage
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: MonoTorrent.Trackers.Tracker.WarningMessage*
  commentId: Overload:MonoTorrent.Trackers.Tracker.WarningMessage
  href: MonoTorrent.Trackers.Tracker.html#MonoTorrent_Trackers_Tracker_WarningMessage
  name: WarningMessage
  nameWithType: Tracker.WarningMessage
  fullName: MonoTorrent.Trackers.Tracker.WarningMessage
- uid: MonoTorrent.Trackers.ITracker.WarningMessage
  commentId: P:MonoTorrent.Trackers.ITracker.WarningMessage
  parent: MonoTorrent.Trackers.ITracker
  href: MonoTorrent.Trackers.ITracker.html#MonoTorrent_Trackers_ITracker_WarningMessage
  name: WarningMessage
  nameWithType: ITracker.WarningMessage
  fullName: MonoTorrent.Trackers.ITracker.WarningMessage
- uid: MonoTorrent.Trackers.Tracker.MinUpdateInterval*
  commentId: Overload:MonoTorrent.Trackers.Tracker.MinUpdateInterval
  href: MonoTorrent.Trackers.Tracker.html#MonoTorrent_Trackers_Tracker_MinUpdateInterval
  name: MinUpdateInterval
  nameWithType: Tracker.MinUpdateInterval
  fullName: MonoTorrent.Trackers.Tracker.MinUpdateInterval
- uid: MonoTorrent.Trackers.ITracker.MinUpdateInterval
  commentId: P:MonoTorrent.Trackers.ITracker.MinUpdateInterval
  parent: MonoTorrent.Trackers.ITracker
  href: MonoTorrent.Trackers.ITracker.html#MonoTorrent_Trackers_ITracker_MinUpdateInterval
  name: MinUpdateInterval
  nameWithType: ITracker.MinUpdateInterval
  fullName: MonoTorrent.Trackers.ITracker.MinUpdateInterval
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.timespan
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: MonoTorrent.Trackers.Tracker.UpdateInterval*
  commentId: Overload:MonoTorrent.Trackers.Tracker.UpdateInterval
  href: MonoTorrent.Trackers.Tracker.html#MonoTorrent_Trackers_Tracker_UpdateInterval
  name: UpdateInterval
  nameWithType: Tracker.UpdateInterval
  fullName: MonoTorrent.Trackers.Tracker.UpdateInterval
- uid: MonoTorrent.Trackers.ITracker.UpdateInterval
  commentId: P:MonoTorrent.Trackers.ITracker.UpdateInterval
  parent: MonoTorrent.Trackers.ITracker
  href: MonoTorrent.Trackers.ITracker.html#MonoTorrent_Trackers_ITracker_UpdateInterval
  name: UpdateInterval
  nameWithType: ITracker.UpdateInterval
  fullName: MonoTorrent.Trackers.ITracker.UpdateInterval
- uid: MonoTorrent.Trackers.Tracker.Status*
  commentId: Overload:MonoTorrent.Trackers.Tracker.Status
  href: MonoTorrent.Trackers.Tracker.html#MonoTorrent_Trackers_Tracker_Status
  name: Status
  nameWithType: Tracker.Status
  fullName: MonoTorrent.Trackers.Tracker.Status
- uid: MonoTorrent.Trackers.ITracker.Status
  commentId: P:MonoTorrent.Trackers.ITracker.Status
  parent: MonoTorrent.Trackers.ITracker
  href: MonoTorrent.Trackers.ITracker.html#MonoTorrent_Trackers_ITracker_Status
  name: Status
  nameWithType: ITracker.Status
  fullName: MonoTorrent.Trackers.ITracker.Status
- uid: MonoTorrent.Trackers.TrackerState
  commentId: T:MonoTorrent.Trackers.TrackerState
  parent: MonoTorrent.Trackers
  href: MonoTorrent.Trackers.TrackerState.html
  name: TrackerState
  nameWithType: TrackerState
  fullName: MonoTorrent.Trackers.TrackerState
- uid: MonoTorrent.Trackers.Tracker.TimeSinceLastAnnounce*
  commentId: Overload:MonoTorrent.Trackers.Tracker.TimeSinceLastAnnounce
  href: MonoTorrent.Trackers.Tracker.html#MonoTorrent_Trackers_Tracker_TimeSinceLastAnnounce
  name: TimeSinceLastAnnounce
  nameWithType: Tracker.TimeSinceLastAnnounce
  fullName: MonoTorrent.Trackers.Tracker.TimeSinceLastAnnounce
- uid: MonoTorrent.Trackers.ITracker.TimeSinceLastAnnounce
  commentId: P:MonoTorrent.Trackers.ITracker.TimeSinceLastAnnounce
  parent: MonoTorrent.Trackers.ITracker
  href: MonoTorrent.Trackers.ITracker.html#MonoTorrent_Trackers_ITracker_TimeSinceLastAnnounce
  name: TimeSinceLastAnnounce
  nameWithType: ITracker.TimeSinceLastAnnounce
  fullName: MonoTorrent.Trackers.ITracker.TimeSinceLastAnnounce
- uid: MonoTorrent.Trackers.Tracker.Uri*
  commentId: Overload:MonoTorrent.Trackers.Tracker.Uri
  href: MonoTorrent.Trackers.Tracker.html#MonoTorrent_Trackers_Tracker_Uri
  name: Uri
  nameWithType: Tracker.Uri
  fullName: MonoTorrent.Trackers.Tracker.Uri
- uid: MonoTorrent.Trackers.ITracker.Uri
  commentId: P:MonoTorrent.Trackers.ITracker.Uri
  parent: MonoTorrent.Trackers.ITracker
  href: MonoTorrent.Trackers.ITracker.html#MonoTorrent_Trackers_ITracker_Uri
  name: Uri
  nameWithType: ITracker.Uri
  fullName: MonoTorrent.Trackers.ITracker.Uri
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uri
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: MonoTorrent.Trackers.Tracker.#ctor*
  commentId: Overload:MonoTorrent.Trackers.Tracker.#ctor
  href: MonoTorrent.Trackers.Tracker.html#MonoTorrent_Trackers_Tracker__ctor_MonoTorrent_Connections_Tracker_ITrackerConnection_
  name: Tracker
  nameWithType: Tracker.Tracker
  fullName: MonoTorrent.Trackers.Tracker.Tracker
  nameWithType.vb: Tracker.New
  fullName.vb: MonoTorrent.Trackers.Tracker.New
  name.vb: New
- uid: MonoTorrent.Connections.Tracker.ITrackerConnection
  commentId: T:MonoTorrent.Connections.Tracker.ITrackerConnection
  parent: MonoTorrent.Connections.Tracker
  href: MonoTorrent.Connections.Tracker.ITrackerConnection.html
  name: ITrackerConnection
  nameWithType: ITrackerConnection
  fullName: MonoTorrent.Connections.Tracker.ITrackerConnection
- uid: MonoTorrent.Connections.Tracker
  commentId: N:MonoTorrent.Connections.Tracker
  href: MonoTorrent.html
  name: MonoTorrent.Connections.Tracker
  nameWithType: MonoTorrent.Connections.Tracker
  fullName: MonoTorrent.Connections.Tracker
  spec.csharp:
  - uid: MonoTorrent
    name: MonoTorrent
    href: MonoTorrent.html
  - name: .
  - uid: MonoTorrent.Connections
    name: Connections
    href: MonoTorrent.Connections.html
  - name: .
  - uid: MonoTorrent.Connections.Tracker
    name: Tracker
    href: MonoTorrent.Connections.Tracker.html
  spec.vb:
  - uid: MonoTorrent
    name: MonoTorrent
    href: MonoTorrent.html
  - name: .
  - uid: MonoTorrent.Connections
    name: Connections
    href: MonoTorrent.Connections.html
  - name: .
  - uid: MonoTorrent.Connections.Tracker
    name: Tracker
    href: MonoTorrent.Connections.Tracker.html
- uid: MonoTorrent.Connections.Tracker.ITrackerConnection[]
  isExternal: true
  href: MonoTorrent.Connections.Tracker.ITrackerConnection.html
  name: ITrackerConnection[]
  nameWithType: ITrackerConnection[]
  fullName: MonoTorrent.Connections.Tracker.ITrackerConnection[]
  nameWithType.vb: ITrackerConnection()
  fullName.vb: MonoTorrent.Connections.Tracker.ITrackerConnection()
  name.vb: ITrackerConnection()
  spec.csharp:
  - uid: MonoTorrent.Connections.Tracker.ITrackerConnection
    name: ITrackerConnection
    href: MonoTorrent.Connections.Tracker.ITrackerConnection.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: MonoTorrent.Connections.Tracker.ITrackerConnection
    name: ITrackerConnection
    href: MonoTorrent.Connections.Tracker.ITrackerConnection.html
  - name: (
  - name: )
- uid: MonoTorrent.Trackers.Tracker.AnnounceAsync*
  commentId: Overload:MonoTorrent.Trackers.Tracker.AnnounceAsync
  href: MonoTorrent.Trackers.Tracker.html#MonoTorrent_Trackers_Tracker_AnnounceAsync_MonoTorrent_Trackers_AnnounceRequest_System_Threading_CancellationToken_
  name: AnnounceAsync
  nameWithType: Tracker.AnnounceAsync
  fullName: MonoTorrent.Trackers.Tracker.AnnounceAsync
- uid: MonoTorrent.Trackers.ITracker.AnnounceAsync(MonoTorrent.Trackers.AnnounceRequest,System.Threading.CancellationToken)
  commentId: M:MonoTorrent.Trackers.ITracker.AnnounceAsync(MonoTorrent.Trackers.AnnounceRequest,System.Threading.CancellationToken)
  parent: MonoTorrent.Trackers.ITracker
  isExternal: true
  href: MonoTorrent.Trackers.ITracker.html#MonoTorrent_Trackers_ITracker_AnnounceAsync_MonoTorrent_Trackers_AnnounceRequest_System_Threading_CancellationToken_
  name: AnnounceAsync(AnnounceRequest, CancellationToken)
  nameWithType: ITracker.AnnounceAsync(AnnounceRequest, CancellationToken)
  fullName: MonoTorrent.Trackers.ITracker.AnnounceAsync(MonoTorrent.Trackers.AnnounceRequest, System.Threading.CancellationToken)
  spec.csharp:
  - uid: MonoTorrent.Trackers.ITracker.AnnounceAsync(MonoTorrent.Trackers.AnnounceRequest,System.Threading.CancellationToken)
    name: AnnounceAsync
    href: MonoTorrent.Trackers.ITracker.html#MonoTorrent_Trackers_ITracker_AnnounceAsync_MonoTorrent_Trackers_AnnounceRequest_System_Threading_CancellationToken_
  - name: (
  - uid: MonoTorrent.Trackers.AnnounceRequest
    name: AnnounceRequest
    href: MonoTorrent.Trackers.AnnounceRequest.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: MonoTorrent.Trackers.ITracker.AnnounceAsync(MonoTorrent.Trackers.AnnounceRequest,System.Threading.CancellationToken)
    name: AnnounceAsync
    href: MonoTorrent.Trackers.ITracker.html#MonoTorrent_Trackers_ITracker_AnnounceAsync_MonoTorrent_Trackers_AnnounceRequest_System_Threading_CancellationToken_
  - name: (
  - uid: MonoTorrent.Trackers.AnnounceRequest
    name: AnnounceRequest
    href: MonoTorrent.Trackers.AnnounceRequest.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: MonoTorrent.Trackers.AnnounceRequest
  commentId: T:MonoTorrent.Trackers.AnnounceRequest
  parent: MonoTorrent.Trackers
  href: MonoTorrent.Trackers.AnnounceRequest.html
  name: AnnounceRequest
  nameWithType: AnnounceRequest
  fullName: MonoTorrent.Trackers.AnnounceRequest
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: ReusableTasks.ReusableTask{MonoTorrent.Trackers.AnnounceResponse}
  commentId: T:ReusableTasks.ReusableTask{MonoTorrent.Trackers.AnnounceResponse}
  parent: ReusableTasks
  definition: ReusableTasks.ReusableTask`1
  href: MonoTorrent.Trackers.AnnounceResponse.html
  name: ReusableTask<AnnounceResponse>
  nameWithType: ReusableTask<AnnounceResponse>
  fullName: ReusableTasks.ReusableTask<MonoTorrent.Trackers.AnnounceResponse>
  nameWithType.vb: ReusableTask(Of AnnounceResponse)
  fullName.vb: ReusableTasks.ReusableTask(Of MonoTorrent.Trackers.AnnounceResponse)
  name.vb: ReusableTask(Of AnnounceResponse)
  spec.csharp:
  - uid: ReusableTasks.ReusableTask`1
    name: ReusableTask
    isExternal: true
  - name: <
  - uid: MonoTorrent.Trackers.AnnounceResponse
    name: AnnounceResponse
    href: MonoTorrent.Trackers.AnnounceResponse.html
  - name: '>'
  spec.vb:
  - uid: ReusableTasks.ReusableTask`1
    name: ReusableTask
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: MonoTorrent.Trackers.AnnounceResponse
    name: AnnounceResponse
    href: MonoTorrent.Trackers.AnnounceResponse.html
  - name: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: ReusableTasks.ReusableTask`1
  commentId: T:ReusableTasks.ReusableTask`1
  isExternal: true
  name: ReusableTask<T>
  nameWithType: ReusableTask<T>
  fullName: ReusableTasks.ReusableTask<T>
  nameWithType.vb: ReusableTask(Of T)
  fullName.vb: ReusableTasks.ReusableTask(Of T)
  name.vb: ReusableTask(Of T)
  spec.csharp:
  - uid: ReusableTasks.ReusableTask`1
    name: ReusableTask
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: ReusableTasks.ReusableTask`1
    name: ReusableTask
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: ReusableTasks
  commentId: N:ReusableTasks
  isExternal: true
  name: ReusableTasks
  nameWithType: ReusableTasks
  fullName: ReusableTasks
- uid: MonoTorrent.Trackers.Tracker.ScrapeAsync*
  commentId: Overload:MonoTorrent.Trackers.Tracker.ScrapeAsync
  href: MonoTorrent.Trackers.Tracker.html#MonoTorrent_Trackers_Tracker_ScrapeAsync_MonoTorrent_Trackers_ScrapeRequest_System_Threading_CancellationToken_
  name: ScrapeAsync
  nameWithType: Tracker.ScrapeAsync
  fullName: MonoTorrent.Trackers.Tracker.ScrapeAsync
- uid: MonoTorrent.Trackers.ITracker.ScrapeAsync(MonoTorrent.Trackers.ScrapeRequest,System.Threading.CancellationToken)
  commentId: M:MonoTorrent.Trackers.ITracker.ScrapeAsync(MonoTorrent.Trackers.ScrapeRequest,System.Threading.CancellationToken)
  parent: MonoTorrent.Trackers.ITracker
  isExternal: true
  href: MonoTorrent.Trackers.ITracker.html#MonoTorrent_Trackers_ITracker_ScrapeAsync_MonoTorrent_Trackers_ScrapeRequest_System_Threading_CancellationToken_
  name: ScrapeAsync(ScrapeRequest, CancellationToken)
  nameWithType: ITracker.ScrapeAsync(ScrapeRequest, CancellationToken)
  fullName: MonoTorrent.Trackers.ITracker.ScrapeAsync(MonoTorrent.Trackers.ScrapeRequest, System.Threading.CancellationToken)
  spec.csharp:
  - uid: MonoTorrent.Trackers.ITracker.ScrapeAsync(MonoTorrent.Trackers.ScrapeRequest,System.Threading.CancellationToken)
    name: ScrapeAsync
    href: MonoTorrent.Trackers.ITracker.html#MonoTorrent_Trackers_ITracker_ScrapeAsync_MonoTorrent_Trackers_ScrapeRequest_System_Threading_CancellationToken_
  - name: (
  - uid: MonoTorrent.Trackers.ScrapeRequest
    name: ScrapeRequest
    href: MonoTorrent.Trackers.ScrapeRequest.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: MonoTorrent.Trackers.ITracker.ScrapeAsync(MonoTorrent.Trackers.ScrapeRequest,System.Threading.CancellationToken)
    name: ScrapeAsync
    href: MonoTorrent.Trackers.ITracker.html#MonoTorrent_Trackers_ITracker_ScrapeAsync_MonoTorrent_Trackers_ScrapeRequest_System_Threading_CancellationToken_
  - name: (
  - uid: MonoTorrent.Trackers.ScrapeRequest
    name: ScrapeRequest
    href: MonoTorrent.Trackers.ScrapeRequest.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: MonoTorrent.Trackers.ScrapeRequest
  commentId: T:MonoTorrent.Trackers.ScrapeRequest
  parent: MonoTorrent.Trackers
  href: MonoTorrent.Trackers.ScrapeRequest.html
  name: ScrapeRequest
  nameWithType: ScrapeRequest
  fullName: MonoTorrent.Trackers.ScrapeRequest
- uid: ReusableTasks.ReusableTask{MonoTorrent.Trackers.ScrapeResponse}
  commentId: T:ReusableTasks.ReusableTask{MonoTorrent.Trackers.ScrapeResponse}
  parent: ReusableTasks
  definition: ReusableTasks.ReusableTask`1
  href: MonoTorrent.Trackers.ScrapeResponse.html
  name: ReusableTask<ScrapeResponse>
  nameWithType: ReusableTask<ScrapeResponse>
  fullName: ReusableTasks.ReusableTask<MonoTorrent.Trackers.ScrapeResponse>
  nameWithType.vb: ReusableTask(Of ScrapeResponse)
  fullName.vb: ReusableTasks.ReusableTask(Of MonoTorrent.Trackers.ScrapeResponse)
  name.vb: ReusableTask(Of ScrapeResponse)
  spec.csharp:
  - uid: ReusableTasks.ReusableTask`1
    name: ReusableTask
    isExternal: true
  - name: <
  - uid: MonoTorrent.Trackers.ScrapeResponse
    name: ScrapeResponse
    href: MonoTorrent.Trackers.ScrapeResponse.html
  - name: '>'
  spec.vb:
  - uid: ReusableTasks.ReusableTask`1
    name: ReusableTask
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: MonoTorrent.Trackers.ScrapeResponse
    name: ScrapeResponse
    href: MonoTorrent.Trackers.ScrapeResponse.html
  - name: )
