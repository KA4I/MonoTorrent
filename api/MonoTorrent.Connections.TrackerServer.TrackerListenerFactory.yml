### YamlMime:ManagedReference
items:
- uid: MonoTorrent.Connections.TrackerServer.TrackerListenerFactory
  commentId: T:MonoTorrent.Connections.TrackerServer.TrackerListenerFactory
  id: TrackerListenerFactory
  parent: MonoTorrent.Connections.TrackerServer
  children:
  - MonoTorrent.Connections.TrackerServer.TrackerListenerFactory.CreateHttp(System.Int32)
  - MonoTorrent.Connections.TrackerServer.TrackerListenerFactory.CreateHttp(System.Net.IPAddress,System.Int32)
  - MonoTorrent.Connections.TrackerServer.TrackerListenerFactory.CreateHttp(System.Net.IPEndPoint)
  - MonoTorrent.Connections.TrackerServer.TrackerListenerFactory.CreateHttp(System.String)
  - MonoTorrent.Connections.TrackerServer.TrackerListenerFactory.CreateUdp(System.Int32)
  - MonoTorrent.Connections.TrackerServer.TrackerListenerFactory.CreateUdp(System.Net.IPAddress,System.Int32)
  - MonoTorrent.Connections.TrackerServer.TrackerListenerFactory.CreateUdp(System.Net.IPEndPoint)
  langs:
  - csharp
  - vb
  name: TrackerListenerFactory
  nameWithType: TrackerListenerFactory
  fullName: MonoTorrent.Connections.TrackerServer.TrackerListenerFactory
  type: Class
  source:
    remote:
      path: MonoTorrent/src/Connections/TrackerServer/TrackerListenerFactory.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: TrackerListenerFactory
    path: src/Connections/TrackerServer/TrackerListenerFactory.cs
    startLine: 33
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.Connections.TrackerServer
  syntax:
    content: public static class TrackerListenerFactory
    content.vb: Public Module TrackerListenerFactory
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: MonoTorrent.Connections.TrackerServer.TrackerListenerFactory.CreateHttp(System.Int32)
  commentId: M:MonoTorrent.Connections.TrackerServer.TrackerListenerFactory.CreateHttp(System.Int32)
  id: CreateHttp(System.Int32)
  parent: MonoTorrent.Connections.TrackerServer.TrackerListenerFactory
  langs:
  - csharp
  - vb
  name: CreateHttp(int)
  nameWithType: TrackerListenerFactory.CreateHttp(int)
  fullName: MonoTorrent.Connections.TrackerServer.TrackerListenerFactory.CreateHttp(int)
  type: Method
  source:
    remote:
      path: MonoTorrent/src/Connections/TrackerServer/TrackerListenerFactory.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: CreateHttp
    path: src/Connections/TrackerServer/TrackerListenerFactory.cs
    startLine: 41
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.Connections.TrackerServer
  summary: >-
    Creates a listener to receive incoming HTTP requests on IPAddress.Any and the given port.

    The resulting HTTP prefix will be similar to http://{address}:{port}/announce/ and will support Scrape requests.
  example: []
  syntax:
    content: public static ITrackerListener CreateHttp(int port)
    parameters:
    - id: port
      type: System.Int32
      description: The local port to bind to.
    return:
      type: MonoTorrent.Connections.TrackerServer.ITrackerListener
      description: ''
    content.vb: Public Shared Function CreateHttp(port As Integer) As ITrackerListener
  overload: MonoTorrent.Connections.TrackerServer.TrackerListenerFactory.CreateHttp*
  nameWithType.vb: TrackerListenerFactory.CreateHttp(Integer)
  fullName.vb: MonoTorrent.Connections.TrackerServer.TrackerListenerFactory.CreateHttp(Integer)
  name.vb: CreateHttp(Integer)
- uid: MonoTorrent.Connections.TrackerServer.TrackerListenerFactory.CreateHttp(System.Net.IPAddress,System.Int32)
  commentId: M:MonoTorrent.Connections.TrackerServer.TrackerListenerFactory.CreateHttp(System.Net.IPAddress,System.Int32)
  id: CreateHttp(System.Net.IPAddress,System.Int32)
  parent: MonoTorrent.Connections.TrackerServer.TrackerListenerFactory
  langs:
  - csharp
  - vb
  name: CreateHttp(IPAddress, int)
  nameWithType: TrackerListenerFactory.CreateHttp(IPAddress, int)
  fullName: MonoTorrent.Connections.TrackerServer.TrackerListenerFactory.CreateHttp(System.Net.IPAddress, int)
  type: Method
  source:
    remote:
      path: MonoTorrent/src/Connections/TrackerServer/TrackerListenerFactory.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: CreateHttp
    path: src/Connections/TrackerServer/TrackerListenerFactory.cs
    startLine: 53
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.Connections.TrackerServer
  summary: >-
    Creates a listener to receive incoming HTTP requests on the given local IP address and port.

    The resulting HTTP prefix will be similar to http://{address}:{port}/announce/ and will support Scrape requests.
  example: []
  syntax:
    content: public static ITrackerListener CreateHttp(IPAddress address, int port)
    parameters:
    - id: address
      type: System.Net.IPAddress
      description: The local IP address to bind to.
    - id: port
      type: System.Int32
      description: The local port to bind to.
    return:
      type: MonoTorrent.Connections.TrackerServer.ITrackerListener
      description: ''
    content.vb: Public Shared Function CreateHttp(address As IPAddress, port As Integer) As ITrackerListener
  overload: MonoTorrent.Connections.TrackerServer.TrackerListenerFactory.CreateHttp*
  nameWithType.vb: TrackerListenerFactory.CreateHttp(IPAddress, Integer)
  fullName.vb: MonoTorrent.Connections.TrackerServer.TrackerListenerFactory.CreateHttp(System.Net.IPAddress, Integer)
  name.vb: CreateHttp(IPAddress, Integer)
- uid: MonoTorrent.Connections.TrackerServer.TrackerListenerFactory.CreateHttp(System.Net.IPEndPoint)
  commentId: M:MonoTorrent.Connections.TrackerServer.TrackerListenerFactory.CreateHttp(System.Net.IPEndPoint)
  id: CreateHttp(System.Net.IPEndPoint)
  parent: MonoTorrent.Connections.TrackerServer.TrackerListenerFactory
  langs:
  - csharp
  - vb
  name: CreateHttp(IPEndPoint)
  nameWithType: TrackerListenerFactory.CreateHttp(IPEndPoint)
  fullName: MonoTorrent.Connections.TrackerServer.TrackerListenerFactory.CreateHttp(System.Net.IPEndPoint)
  type: Method
  source:
    remote:
      path: MonoTorrent/src/Connections/TrackerServer/TrackerListenerFactory.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: CreateHttp
    path: src/Connections/TrackerServer/TrackerListenerFactory.cs
    startLine: 64
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.Connections.TrackerServer
  summary: >-
    Creates a listener to receive incoming HTTP requests on the given local endpoint.

    The resulting HTTP prefix will be similar to http://{address}:{port}/announce/ and will support Scrape requests.
  example: []
  syntax:
    content: public static ITrackerListener CreateHttp(IPEndPoint endpoint)
    parameters:
    - id: endpoint
      type: System.Net.IPEndPoint
      description: The local endpoint to bind to.
    return:
      type: MonoTorrent.Connections.TrackerServer.ITrackerListener
      description: ''
    content.vb: Public Shared Function CreateHttp(endpoint As IPEndPoint) As ITrackerListener
  overload: MonoTorrent.Connections.TrackerServer.TrackerListenerFactory.CreateHttp*
- uid: MonoTorrent.Connections.TrackerServer.TrackerListenerFactory.CreateHttp(System.String)
  commentId: M:MonoTorrent.Connections.TrackerServer.TrackerListenerFactory.CreateHttp(System.String)
  id: CreateHttp(System.String)
  parent: MonoTorrent.Connections.TrackerServer.TrackerListenerFactory
  langs:
  - csharp
  - vb
  name: CreateHttp(string)
  nameWithType: TrackerListenerFactory.CreateHttp(string)
  fullName: MonoTorrent.Connections.TrackerServer.TrackerListenerFactory.CreateHttp(string)
  type: Method
  source:
    remote:
      path: MonoTorrent/src/Connections/TrackerServer/TrackerListenerFactory.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: CreateHttp
    path: src/Connections/TrackerServer/TrackerListenerFactory.cs
    startLine: 76
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.Connections.TrackerServer
  summary: >-
    Creates a listener to receive incoming HTTP requests on the given HTTP prefix. If

    the prefix ends in '/announce/' it will support Scrape requests, otherwise scraping will be disabled.

    The prefix should be in the form http://{address}:{port}/test/query/announce/
  example: []
  syntax:
    content: public static ITrackerListener CreateHttp(string httpPrefix)
    parameters:
    - id: httpPrefix
      type: System.String
      description: The HTTP prefix to bind to.
    return:
      type: MonoTorrent.Connections.TrackerServer.ITrackerListener
      description: ''
    content.vb: Public Shared Function CreateHttp(httpPrefix As String) As ITrackerListener
  overload: MonoTorrent.Connections.TrackerServer.TrackerListenerFactory.CreateHttp*
  nameWithType.vb: TrackerListenerFactory.CreateHttp(String)
  fullName.vb: MonoTorrent.Connections.TrackerServer.TrackerListenerFactory.CreateHttp(String)
  name.vb: CreateHttp(String)
- uid: MonoTorrent.Connections.TrackerServer.TrackerListenerFactory.CreateUdp(System.Int32)
  commentId: M:MonoTorrent.Connections.TrackerServer.TrackerListenerFactory.CreateUdp(System.Int32)
  id: CreateUdp(System.Int32)
  parent: MonoTorrent.Connections.TrackerServer.TrackerListenerFactory
  langs:
  - csharp
  - vb
  name: CreateUdp(int)
  nameWithType: TrackerListenerFactory.CreateUdp(int)
  fullName: MonoTorrent.Connections.TrackerServer.TrackerListenerFactory.CreateUdp(int)
  type: Method
  source:
    remote:
      path: MonoTorrent/src/Connections/TrackerServer/TrackerListenerFactory.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: CreateUdp
    path: src/Connections/TrackerServer/TrackerListenerFactory.cs
    startLine: 86
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.Connections.TrackerServer
  summary: Creates a listener which binds to IPAddress.Any and listens for incoming UDP requests on the given local port.
  example: []
  syntax:
    content: public static ITrackerListener CreateUdp(int port)
    parameters:
    - id: port
      type: System.Int32
      description: The local port to bind to.
    return:
      type: MonoTorrent.Connections.TrackerServer.ITrackerListener
      description: ''
    content.vb: Public Shared Function CreateUdp(port As Integer) As ITrackerListener
  overload: MonoTorrent.Connections.TrackerServer.TrackerListenerFactory.CreateUdp*
  nameWithType.vb: TrackerListenerFactory.CreateUdp(Integer)
  fullName.vb: MonoTorrent.Connections.TrackerServer.TrackerListenerFactory.CreateUdp(Integer)
  name.vb: CreateUdp(Integer)
- uid: MonoTorrent.Connections.TrackerServer.TrackerListenerFactory.CreateUdp(System.Net.IPAddress,System.Int32)
  commentId: M:MonoTorrent.Connections.TrackerServer.TrackerListenerFactory.CreateUdp(System.Net.IPAddress,System.Int32)
  id: CreateUdp(System.Net.IPAddress,System.Int32)
  parent: MonoTorrent.Connections.TrackerServer.TrackerListenerFactory
  langs:
  - csharp
  - vb
  name: CreateUdp(IPAddress, int)
  nameWithType: TrackerListenerFactory.CreateUdp(IPAddress, int)
  fullName: MonoTorrent.Connections.TrackerServer.TrackerListenerFactory.CreateUdp(System.Net.IPAddress, int)
  type: Method
  source:
    remote:
      path: MonoTorrent/src/Connections/TrackerServer/TrackerListenerFactory.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: CreateUdp
    path: src/Connections/TrackerServer/TrackerListenerFactory.cs
    startLine: 97
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.Connections.TrackerServer
  summary: Creates a listener which listens for incoming UDP requests on the given local IP address and port.
  example: []
  syntax:
    content: public static ITrackerListener CreateUdp(IPAddress address, int port)
    parameters:
    - id: address
      type: System.Net.IPAddress
      description: The local IP address to bind to.
    - id: port
      type: System.Int32
      description: The local port to bind to.
    return:
      type: MonoTorrent.Connections.TrackerServer.ITrackerListener
      description: ''
    content.vb: Public Shared Function CreateUdp(address As IPAddress, port As Integer) As ITrackerListener
  overload: MonoTorrent.Connections.TrackerServer.TrackerListenerFactory.CreateUdp*
  nameWithType.vb: TrackerListenerFactory.CreateUdp(IPAddress, Integer)
  fullName.vb: MonoTorrent.Connections.TrackerServer.TrackerListenerFactory.CreateUdp(System.Net.IPAddress, Integer)
  name.vb: CreateUdp(IPAddress, Integer)
- uid: MonoTorrent.Connections.TrackerServer.TrackerListenerFactory.CreateUdp(System.Net.IPEndPoint)
  commentId: M:MonoTorrent.Connections.TrackerServer.TrackerListenerFactory.CreateUdp(System.Net.IPEndPoint)
  id: CreateUdp(System.Net.IPEndPoint)
  parent: MonoTorrent.Connections.TrackerServer.TrackerListenerFactory
  langs:
  - csharp
  - vb
  name: CreateUdp(IPEndPoint)
  nameWithType: TrackerListenerFactory.CreateUdp(IPEndPoint)
  fullName: MonoTorrent.Connections.TrackerServer.TrackerListenerFactory.CreateUdp(System.Net.IPEndPoint)
  type: Method
  source:
    remote:
      path: MonoTorrent/src/Connections/TrackerServer/TrackerListenerFactory.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: CreateUdp
    path: src/Connections/TrackerServer/TrackerListenerFactory.cs
    startLine: 107
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.Connections.TrackerServer
  summary: Creates a listener which listens for incoming UDP requests on the given local IP address and port.
  example: []
  syntax:
    content: public static ITrackerListener CreateUdp(IPEndPoint endpoint)
    parameters:
    - id: endpoint
      type: System.Net.IPEndPoint
      description: The local endpoint to bind to.
    return:
      type: MonoTorrent.Connections.TrackerServer.ITrackerListener
      description: ''
    content.vb: Public Shared Function CreateUdp(endpoint As IPEndPoint) As ITrackerListener
  overload: MonoTorrent.Connections.TrackerServer.TrackerListenerFactory.CreateUdp*
references:
- uid: MonoTorrent.Connections.TrackerServer
  commentId: N:MonoTorrent.Connections.TrackerServer
  href: MonoTorrent.html
  name: MonoTorrent.Connections.TrackerServer
  nameWithType: MonoTorrent.Connections.TrackerServer
  fullName: MonoTorrent.Connections.TrackerServer
  spec.csharp:
  - uid: MonoTorrent
    name: MonoTorrent
    href: MonoTorrent.html
  - name: .
  - uid: MonoTorrent.Connections
    name: Connections
    href: MonoTorrent.Connections.html
  - name: .
  - uid: MonoTorrent.Connections.TrackerServer
    name: TrackerServer
    href: MonoTorrent.Connections.TrackerServer.html
  spec.vb:
  - uid: MonoTorrent
    name: MonoTorrent
    href: MonoTorrent.html
  - name: .
  - uid: MonoTorrent.Connections
    name: Connections
    href: MonoTorrent.Connections.html
  - name: .
  - uid: MonoTorrent.Connections.TrackerServer
    name: TrackerServer
    href: MonoTorrent.Connections.TrackerServer.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: MonoTorrent.Connections.TrackerServer.TrackerListenerFactory.CreateHttp*
  commentId: Overload:MonoTorrent.Connections.TrackerServer.TrackerListenerFactory.CreateHttp
  href: MonoTorrent.Connections.TrackerServer.TrackerListenerFactory.html#MonoTorrent_Connections_TrackerServer_TrackerListenerFactory_CreateHttp_System_Int32_
  name: CreateHttp
  nameWithType: TrackerListenerFactory.CreateHttp
  fullName: MonoTorrent.Connections.TrackerServer.TrackerListenerFactory.CreateHttp
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: MonoTorrent.Connections.TrackerServer.ITrackerListener
  commentId: T:MonoTorrent.Connections.TrackerServer.ITrackerListener
  parent: MonoTorrent.Connections.TrackerServer
  href: MonoTorrent.Connections.TrackerServer.ITrackerListener.html
  name: ITrackerListener
  nameWithType: ITrackerListener
  fullName: MonoTorrent.Connections.TrackerServer.ITrackerListener
- uid: System.Net.IPAddress
  commentId: T:System.Net.IPAddress
  parent: System.Net
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.net.ipaddress
  name: IPAddress
  nameWithType: IPAddress
  fullName: System.Net.IPAddress
- uid: System.Net
  commentId: N:System.Net
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Net
  nameWithType: System.Net
  fullName: System.Net
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Net
    name: Net
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.net
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Net
    name: Net
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.net
- uid: System.Net.IPEndPoint
  commentId: T:System.Net.IPEndPoint
  parent: System.Net
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.net.ipendpoint
  name: IPEndPoint
  nameWithType: IPEndPoint
  fullName: System.Net.IPEndPoint
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: MonoTorrent.Connections.TrackerServer.TrackerListenerFactory.CreateUdp*
  commentId: Overload:MonoTorrent.Connections.TrackerServer.TrackerListenerFactory.CreateUdp
  href: MonoTorrent.Connections.TrackerServer.TrackerListenerFactory.html#MonoTorrent_Connections_TrackerServer_TrackerListenerFactory_CreateUdp_System_Int32_
  name: CreateUdp
  nameWithType: TrackerListenerFactory.CreateUdp
  fullName: MonoTorrent.Connections.TrackerServer.TrackerListenerFactory.CreateUdp
