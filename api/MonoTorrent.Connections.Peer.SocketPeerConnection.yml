### YamlMime:ManagedReference
items:
- uid: MonoTorrent.Connections.Peer.SocketPeerConnection
  commentId: T:MonoTorrent.Connections.Peer.SocketPeerConnection
  id: SocketPeerConnection
  parent: MonoTorrent.Connections.Peer
  children:
  - MonoTorrent.Connections.Peer.SocketPeerConnection.#ctor(System.Net.Sockets.Socket,System.Boolean)
  - MonoTorrent.Connections.Peer.SocketPeerConnection.#ctor(System.Uri,MonoTorrent.Connections.ISocketConnector)
  - MonoTorrent.Connections.Peer.SocketPeerConnection.AddressBytes
  - MonoTorrent.Connections.Peer.SocketPeerConnection.CanReconnect
  - MonoTorrent.Connections.Peer.SocketPeerConnection.ConnectAsync
  - MonoTorrent.Connections.Peer.SocketPeerConnection.Dispose
  - MonoTorrent.Connections.Peer.SocketPeerConnection.Disposed
  - MonoTorrent.Connections.Peer.SocketPeerConnection.EndPoint
  - MonoTorrent.Connections.Peer.SocketPeerConnection.IsIncoming
  - MonoTorrent.Connections.Peer.SocketPeerConnection.LocalAddressBytes
  - MonoTorrent.Connections.Peer.SocketPeerConnection.LocalEndPoint
  - MonoTorrent.Connections.Peer.SocketPeerConnection.LocalUri
  - MonoTorrent.Connections.Peer.SocketPeerConnection.ReceiveAsync(System.Memory{System.Byte})
  - MonoTorrent.Connections.Peer.SocketPeerConnection.SendAsync(System.Memory{System.Byte})
  - MonoTorrent.Connections.Peer.SocketPeerConnection.Uri
  langs:
  - csharp
  - vb
  name: SocketPeerConnection
  nameWithType: SocketPeerConnection
  fullName: MonoTorrent.Connections.Peer.SocketPeerConnection
  type: Class
  source:
    remote:
      path: MonoTorrent/src/Connections/Peer/SocketPeerConnection.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: SocketPeerConnection
    path: src/Connections/Peer/SocketPeerConnection.cs
    startLine: 39
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.Connections.Peer
  syntax:
    content: 'public sealed class SocketPeerConnection : IPeerConnection, IDisposable, IPeerConnectionLocalInfo'
    content.vb: Public NotInheritable Class SocketPeerConnection Implements IPeerConnection, IDisposable, IPeerConnectionLocalInfo
  inheritance:
  - System.Object
  implements:
  - MonoTorrent.Connections.Peer.IPeerConnection
  - System.IDisposable
  - MonoTorrent.Connections.Peer.IPeerConnectionLocalInfo
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: MonoTorrent.Connections.Peer.SocketPeerConnection.AddressBytes
  commentId: P:MonoTorrent.Connections.Peer.SocketPeerConnection.AddressBytes
  id: AddressBytes
  parent: MonoTorrent.Connections.Peer.SocketPeerConnection
  langs:
  - csharp
  - vb
  name: AddressBytes
  nameWithType: SocketPeerConnection.AddressBytes
  fullName: MonoTorrent.Connections.Peer.SocketPeerConnection.AddressBytes
  type: Property
  source:
    remote:
      path: MonoTorrent/src/Connections/Peer/SocketPeerConnection.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: AddressBytes
    path: src/Connections/Peer/SocketPeerConnection.cs
    startLine: 43
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.Connections.Peer
  example: []
  syntax:
    content: public ReadOnlyMemory<byte> AddressBytes { get; }
    parameters: []
    return:
      type: System.ReadOnlyMemory{System.Byte}
    content.vb: Public ReadOnly Property AddressBytes As ReadOnlyMemory(Of Byte)
  overload: MonoTorrent.Connections.Peer.SocketPeerConnection.AddressBytes*
  implements:
  - MonoTorrent.Connections.Peer.IPeerConnection.AddressBytes
- uid: MonoTorrent.Connections.Peer.SocketPeerConnection.CanReconnect
  commentId: P:MonoTorrent.Connections.Peer.SocketPeerConnection.CanReconnect
  id: CanReconnect
  parent: MonoTorrent.Connections.Peer.SocketPeerConnection
  langs:
  - csharp
  - vb
  name: CanReconnect
  nameWithType: SocketPeerConnection.CanReconnect
  fullName: MonoTorrent.Connections.Peer.SocketPeerConnection.CanReconnect
  type: Property
  source:
    remote:
      path: MonoTorrent/src/Connections/Peer/SocketPeerConnection.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: CanReconnect
    path: src/Connections/Peer/SocketPeerConnection.cs
    startLine: 45
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.Connections.Peer
  example: []
  syntax:
    content: public bool CanReconnect { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property CanReconnect As Boolean
  overload: MonoTorrent.Connections.Peer.SocketPeerConnection.CanReconnect*
  implements:
  - MonoTorrent.Connections.Peer.IPeerConnection.CanReconnect
- uid: MonoTorrent.Connections.Peer.SocketPeerConnection.Disposed
  commentId: P:MonoTorrent.Connections.Peer.SocketPeerConnection.Disposed
  id: Disposed
  parent: MonoTorrent.Connections.Peer.SocketPeerConnection
  langs:
  - csharp
  - vb
  name: Disposed
  nameWithType: SocketPeerConnection.Disposed
  fullName: MonoTorrent.Connections.Peer.SocketPeerConnection.Disposed
  type: Property
  source:
    remote:
      path: MonoTorrent/src/Connections/Peer/SocketPeerConnection.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: Disposed
    path: src/Connections/Peer/SocketPeerConnection.cs
    startLine: 51
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.Connections.Peer
  example: []
  syntax:
    content: public bool Disposed { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Disposed As Boolean
  overload: MonoTorrent.Connections.Peer.SocketPeerConnection.Disposed*
  implements:
  - MonoTorrent.Connections.Peer.IPeerConnection.Disposed
- uid: MonoTorrent.Connections.Peer.SocketPeerConnection.EndPoint
  commentId: P:MonoTorrent.Connections.Peer.SocketPeerConnection.EndPoint
  id: EndPoint
  parent: MonoTorrent.Connections.Peer.SocketPeerConnection
  langs:
  - csharp
  - vb
  name: EndPoint
  nameWithType: SocketPeerConnection.EndPoint
  fullName: MonoTorrent.Connections.Peer.SocketPeerConnection.EndPoint
  type: Property
  source:
    remote:
      path: MonoTorrent/src/Connections/Peer/SocketPeerConnection.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: EndPoint
    path: src/Connections/Peer/SocketPeerConnection.cs
    startLine: 53
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.Connections.Peer
  summary: The endpoint of the remote peer. Will be null for web seeds or http seeds.
  example: []
  syntax:
    content: public IPEndPoint EndPoint { get; }
    parameters: []
    return:
      type: System.Net.IPEndPoint
    content.vb: Public ReadOnly Property EndPoint As IPEndPoint
  overload: MonoTorrent.Connections.Peer.SocketPeerConnection.EndPoint*
  implements:
  - MonoTorrent.Connections.Peer.IPeerConnection.EndPoint
- uid: MonoTorrent.Connections.Peer.SocketPeerConnection.IsIncoming
  commentId: P:MonoTorrent.Connections.Peer.SocketPeerConnection.IsIncoming
  id: IsIncoming
  parent: MonoTorrent.Connections.Peer.SocketPeerConnection
  langs:
  - csharp
  - vb
  name: IsIncoming
  nameWithType: SocketPeerConnection.IsIncoming
  fullName: MonoTorrent.Connections.Peer.SocketPeerConnection.IsIncoming
  type: Property
  source:
    remote:
      path: MonoTorrent/src/Connections/Peer/SocketPeerConnection.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: IsIncoming
    path: src/Connections/Peer/SocketPeerConnection.cs
    startLine: 55
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.Connections.Peer
  example: []
  syntax:
    content: public bool IsIncoming { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsIncoming As Boolean
  overload: MonoTorrent.Connections.Peer.SocketPeerConnection.IsIncoming*
  implements:
  - MonoTorrent.Connections.Peer.IPeerConnection.IsIncoming
- uid: MonoTorrent.Connections.Peer.SocketPeerConnection.LocalAddressBytes
  commentId: P:MonoTorrent.Connections.Peer.SocketPeerConnection.LocalAddressBytes
  id: LocalAddressBytes
  parent: MonoTorrent.Connections.Peer.SocketPeerConnection
  langs:
  - csharp
  - vb
  name: LocalAddressBytes
  nameWithType: SocketPeerConnection.LocalAddressBytes
  fullName: MonoTorrent.Connections.Peer.SocketPeerConnection.LocalAddressBytes
  type: Property
  source:
    remote:
      path: MonoTorrent/src/Connections/Peer/SocketPeerConnection.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: LocalAddressBytes
    path: src/Connections/Peer/SocketPeerConnection.cs
    startLine: 57
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.Connections.Peer
  example: []
  syntax:
    content: public ReadOnlyMemory<byte> LocalAddressBytes { get; }
    parameters: []
    return:
      type: System.ReadOnlyMemory{System.Byte}
    content.vb: Public ReadOnly Property LocalAddressBytes As ReadOnlyMemory(Of Byte)
  overload: MonoTorrent.Connections.Peer.SocketPeerConnection.LocalAddressBytes*
  implements:
  - MonoTorrent.Connections.Peer.IPeerConnectionLocalInfo.LocalAddressBytes
- uid: MonoTorrent.Connections.Peer.SocketPeerConnection.LocalEndPoint
  commentId: P:MonoTorrent.Connections.Peer.SocketPeerConnection.LocalEndPoint
  id: LocalEndPoint
  parent: MonoTorrent.Connections.Peer.SocketPeerConnection
  langs:
  - csharp
  - vb
  name: LocalEndPoint
  nameWithType: SocketPeerConnection.LocalEndPoint
  fullName: MonoTorrent.Connections.Peer.SocketPeerConnection.LocalEndPoint
  type: Property
  source:
    remote:
      path: MonoTorrent/src/Connections/Peer/SocketPeerConnection.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: LocalEndPoint
    path: src/Connections/Peer/SocketPeerConnection.cs
    startLine: 58
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.Connections.Peer
  example: []
  syntax:
    content: public IPEndPoint? LocalEndPoint { get; }
    parameters: []
    return:
      type: System.Net.IPEndPoint
    content.vb: Public ReadOnly Property LocalEndPoint As IPEndPoint
  overload: MonoTorrent.Connections.Peer.SocketPeerConnection.LocalEndPoint*
  implements:
  - MonoTorrent.Connections.Peer.IPeerConnectionLocalInfo.LocalEndPoint
- uid: MonoTorrent.Connections.Peer.SocketPeerConnection.LocalUri
  commentId: P:MonoTorrent.Connections.Peer.SocketPeerConnection.LocalUri
  id: LocalUri
  parent: MonoTorrent.Connections.Peer.SocketPeerConnection
  langs:
  - csharp
  - vb
  name: LocalUri
  nameWithType: SocketPeerConnection.LocalUri
  fullName: MonoTorrent.Connections.Peer.SocketPeerConnection.LocalUri
  type: Property
  source:
    remote:
      path: MonoTorrent/src/Connections/Peer/SocketPeerConnection.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: LocalUri
    path: src/Connections/Peer/SocketPeerConnection.cs
    startLine: 59
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.Connections.Peer
  example: []
  syntax:
    content: public Uri? LocalUri { get; }
    parameters: []
    return:
      type: System.Uri
    content.vb: Public ReadOnly Property LocalUri As Uri
  overload: MonoTorrent.Connections.Peer.SocketPeerConnection.LocalUri*
  implements:
  - MonoTorrent.Connections.Peer.IPeerConnectionLocalInfo.LocalUri
- uid: MonoTorrent.Connections.Peer.SocketPeerConnection.Uri
  commentId: P:MonoTorrent.Connections.Peer.SocketPeerConnection.Uri
  id: Uri
  parent: MonoTorrent.Connections.Peer.SocketPeerConnection
  langs:
  - csharp
  - vb
  name: Uri
  nameWithType: SocketPeerConnection.Uri
  fullName: MonoTorrent.Connections.Peer.SocketPeerConnection.Uri
  type: Property
  source:
    remote:
      path: MonoTorrent/src/Connections/Peer/SocketPeerConnection.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: Uri
    path: src/Connections/Peer/SocketPeerConnection.cs
    startLine: 67
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.Connections.Peer
  example: []
  syntax:
    content: public Uri Uri { get; }
    parameters: []
    return:
      type: System.Uri
    content.vb: Public ReadOnly Property Uri As Uri
  overload: MonoTorrent.Connections.Peer.SocketPeerConnection.Uri*
  implements:
  - MonoTorrent.Connections.Peer.IPeerConnection.Uri
- uid: MonoTorrent.Connections.Peer.SocketPeerConnection.#ctor(System.Net.Sockets.Socket,System.Boolean)
  commentId: M:MonoTorrent.Connections.Peer.SocketPeerConnection.#ctor(System.Net.Sockets.Socket,System.Boolean)
  id: '#ctor(System.Net.Sockets.Socket,System.Boolean)'
  parent: MonoTorrent.Connections.Peer.SocketPeerConnection
  langs:
  - csharp
  - vb
  name: SocketPeerConnection(Socket, bool)
  nameWithType: SocketPeerConnection.SocketPeerConnection(Socket, bool)
  fullName: MonoTorrent.Connections.Peer.SocketPeerConnection.SocketPeerConnection(System.Net.Sockets.Socket, bool)
  type: Constructor
  source:
    remote:
      path: MonoTorrent/src/Connections/Peer/SocketPeerConnection.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: .ctor
    path: src/Connections/Peer/SocketPeerConnection.cs
    startLine: 74
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.Connections.Peer
  syntax:
    content: public SocketPeerConnection(Socket socket, bool isIncoming)
    parameters:
    - id: socket
      type: System.Net.Sockets.Socket
    - id: isIncoming
      type: System.Boolean
    content.vb: Public Sub New(socket As Socket, isIncoming As Boolean)
  overload: MonoTorrent.Connections.Peer.SocketPeerConnection.#ctor*
  nameWithType.vb: SocketPeerConnection.New(Socket, Boolean)
  fullName.vb: MonoTorrent.Connections.Peer.SocketPeerConnection.New(System.Net.Sockets.Socket, Boolean)
  name.vb: New(Socket, Boolean)
- uid: MonoTorrent.Connections.Peer.SocketPeerConnection.#ctor(System.Uri,MonoTorrent.Connections.ISocketConnector)
  commentId: M:MonoTorrent.Connections.Peer.SocketPeerConnection.#ctor(System.Uri,MonoTorrent.Connections.ISocketConnector)
  id: '#ctor(System.Uri,MonoTorrent.Connections.ISocketConnector)'
  parent: MonoTorrent.Connections.Peer.SocketPeerConnection
  langs:
  - csharp
  - vb
  name: SocketPeerConnection(Uri, ISocketConnector)
  nameWithType: SocketPeerConnection.SocketPeerConnection(Uri, ISocketConnector)
  fullName: MonoTorrent.Connections.Peer.SocketPeerConnection.SocketPeerConnection(System.Uri, MonoTorrent.Connections.ISocketConnector)
  type: Constructor
  source:
    remote:
      path: MonoTorrent/src/Connections/Peer/SocketPeerConnection.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: .ctor
    path: src/Connections/Peer/SocketPeerConnection.cs
    startLine: 80
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.Connections.Peer
  syntax:
    content: public SocketPeerConnection(Uri uri, ISocketConnector connector)
    parameters:
    - id: uri
      type: System.Uri
    - id: connector
      type: MonoTorrent.Connections.ISocketConnector
    content.vb: Public Sub New(uri As Uri, connector As ISocketConnector)
  overload: MonoTorrent.Connections.Peer.SocketPeerConnection.#ctor*
  nameWithType.vb: SocketPeerConnection.New(Uri, ISocketConnector)
  fullName.vb: MonoTorrent.Connections.Peer.SocketPeerConnection.New(System.Uri, MonoTorrent.Connections.ISocketConnector)
  name.vb: New(Uri, ISocketConnector)
- uid: MonoTorrent.Connections.Peer.SocketPeerConnection.ConnectAsync
  commentId: M:MonoTorrent.Connections.Peer.SocketPeerConnection.ConnectAsync
  id: ConnectAsync
  parent: MonoTorrent.Connections.Peer.SocketPeerConnection
  langs:
  - csharp
  - vb
  name: ConnectAsync()
  nameWithType: SocketPeerConnection.ConnectAsync()
  fullName: MonoTorrent.Connections.Peer.SocketPeerConnection.ConnectAsync()
  type: Method
  source:
    remote:
      path: MonoTorrent/src/Connections/Peer/SocketPeerConnection.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: ConnectAsync
    path: src/Connections/Peer/SocketPeerConnection.cs
    startLine: 125
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.Connections.Peer
  example: []
  syntax:
    content: public ReusableTask ConnectAsync()
    return:
      type: ReusableTasks.ReusableTask
    content.vb: Public Function ConnectAsync() As ReusableTask
  overload: MonoTorrent.Connections.Peer.SocketPeerConnection.ConnectAsync*
  implements:
  - MonoTorrent.Connections.Peer.IPeerConnection.ConnectAsync
- uid: MonoTorrent.Connections.Peer.SocketPeerConnection.ReceiveAsync(System.Memory{System.Byte})
  commentId: M:MonoTorrent.Connections.Peer.SocketPeerConnection.ReceiveAsync(System.Memory{System.Byte})
  id: ReceiveAsync(System.Memory{System.Byte})
  parent: MonoTorrent.Connections.Peer.SocketPeerConnection
  langs:
  - csharp
  - vb
  name: ReceiveAsync(Memory<byte>)
  nameWithType: SocketPeerConnection.ReceiveAsync(Memory<byte>)
  fullName: MonoTorrent.Connections.Peer.SocketPeerConnection.ReceiveAsync(System.Memory<byte>)
  type: Method
  source:
    remote:
      path: MonoTorrent/src/Connections/Peer/SocketPeerConnection.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: ReceiveAsync
    path: src/Connections/Peer/SocketPeerConnection.cs
    startLine: 137
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.Connections.Peer
  example: []
  syntax:
    content: public ReusableTask<int> ReceiveAsync(Memory<byte> buffer)
    parameters:
    - id: buffer
      type: System.Memory{System.Byte}
    return:
      type: ReusableTasks.ReusableTask{System.Int32}
    content.vb: Public Function ReceiveAsync(buffer As Memory(Of Byte)) As ReusableTask(Of Integer)
  overload: MonoTorrent.Connections.Peer.SocketPeerConnection.ReceiveAsync*
  implements:
  - MonoTorrent.Connections.Peer.IPeerConnection.ReceiveAsync(System.Memory{System.Byte})
  nameWithType.vb: SocketPeerConnection.ReceiveAsync(Memory(Of Byte))
  fullName.vb: MonoTorrent.Connections.Peer.SocketPeerConnection.ReceiveAsync(System.Memory(Of Byte))
  name.vb: ReceiveAsync(Memory(Of Byte))
- uid: MonoTorrent.Connections.Peer.SocketPeerConnection.SendAsync(System.Memory{System.Byte})
  commentId: M:MonoTorrent.Connections.Peer.SocketPeerConnection.SendAsync(System.Memory{System.Byte})
  id: SendAsync(System.Memory{System.Byte})
  parent: MonoTorrent.Connections.Peer.SocketPeerConnection
  langs:
  - csharp
  - vb
  name: SendAsync(Memory<byte>)
  nameWithType: SocketPeerConnection.SendAsync(Memory<byte>)
  fullName: MonoTorrent.Connections.Peer.SocketPeerConnection.SendAsync(System.Memory<byte>)
  type: Method
  source:
    remote:
      path: MonoTorrent/src/Connections/Peer/SocketPeerConnection.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: SendAsync
    path: src/Connections/Peer/SocketPeerConnection.cs
    startLine: 167
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.Connections.Peer
  example: []
  syntax:
    content: public ReusableTask<int> SendAsync(Memory<byte> buffer)
    parameters:
    - id: buffer
      type: System.Memory{System.Byte}
    return:
      type: ReusableTasks.ReusableTask{System.Int32}
    content.vb: Public Function SendAsync(buffer As Memory(Of Byte)) As ReusableTask(Of Integer)
  overload: MonoTorrent.Connections.Peer.SocketPeerConnection.SendAsync*
  implements:
  - MonoTorrent.Connections.Peer.IPeerConnection.SendAsync(System.Memory{System.Byte})
  nameWithType.vb: SocketPeerConnection.SendAsync(Memory(Of Byte))
  fullName.vb: MonoTorrent.Connections.Peer.SocketPeerConnection.SendAsync(System.Memory(Of Byte))
  name.vb: SendAsync(Memory(Of Byte))
- uid: MonoTorrent.Connections.Peer.SocketPeerConnection.Dispose
  commentId: M:MonoTorrent.Connections.Peer.SocketPeerConnection.Dispose
  id: Dispose
  parent: MonoTorrent.Connections.Peer.SocketPeerConnection
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: SocketPeerConnection.Dispose()
  fullName: MonoTorrent.Connections.Peer.SocketPeerConnection.Dispose()
  type: Method
  source:
    remote:
      path: MonoTorrent/src/Connections/Peer/SocketPeerConnection.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: Dispose
    path: src/Connections/Peer/SocketPeerConnection.cs
    startLine: 197
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.Connections.Peer
  summary: Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
  example: []
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose()
  overload: MonoTorrent.Connections.Peer.SocketPeerConnection.Dispose*
  implements:
  - System.IDisposable.Dispose
references:
- uid: MonoTorrent.Connections.Peer
  commentId: N:MonoTorrent.Connections.Peer
  href: MonoTorrent.html
  name: MonoTorrent.Connections.Peer
  nameWithType: MonoTorrent.Connections.Peer
  fullName: MonoTorrent.Connections.Peer
  spec.csharp:
  - uid: MonoTorrent
    name: MonoTorrent
    href: MonoTorrent.html
  - name: .
  - uid: MonoTorrent.Connections
    name: Connections
    href: MonoTorrent.Connections.html
  - name: .
  - uid: MonoTorrent.Connections.Peer
    name: Peer
    href: MonoTorrent.Connections.Peer.html
  spec.vb:
  - uid: MonoTorrent
    name: MonoTorrent
    href: MonoTorrent.html
  - name: .
  - uid: MonoTorrent.Connections
    name: Connections
    href: MonoTorrent.Connections.html
  - name: .
  - uid: MonoTorrent.Connections.Peer
    name: Peer
    href: MonoTorrent.Connections.Peer.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: MonoTorrent.Connections.Peer.IPeerConnection
  commentId: T:MonoTorrent.Connections.Peer.IPeerConnection
  parent: MonoTorrent.Connections.Peer
  href: MonoTorrent.Connections.Peer.IPeerConnection.html
  name: IPeerConnection
  nameWithType: IPeerConnection
  fullName: MonoTorrent.Connections.Peer.IPeerConnection
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: MonoTorrent.Connections.Peer.IPeerConnectionLocalInfo
  commentId: T:MonoTorrent.Connections.Peer.IPeerConnectionLocalInfo
  parent: MonoTorrent.Connections.Peer
  href: MonoTorrent.Connections.Peer.IPeerConnectionLocalInfo.html
  name: IPeerConnectionLocalInfo
  nameWithType: IPeerConnectionLocalInfo
  fullName: MonoTorrent.Connections.Peer.IPeerConnectionLocalInfo
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: MonoTorrent.Connections.Peer.SocketPeerConnection.AddressBytes*
  commentId: Overload:MonoTorrent.Connections.Peer.SocketPeerConnection.AddressBytes
  href: MonoTorrent.Connections.Peer.SocketPeerConnection.html#MonoTorrent_Connections_Peer_SocketPeerConnection_AddressBytes
  name: AddressBytes
  nameWithType: SocketPeerConnection.AddressBytes
  fullName: MonoTorrent.Connections.Peer.SocketPeerConnection.AddressBytes
- uid: MonoTorrent.Connections.Peer.IPeerConnection.AddressBytes
  commentId: P:MonoTorrent.Connections.Peer.IPeerConnection.AddressBytes
  parent: MonoTorrent.Connections.Peer.IPeerConnection
  href: MonoTorrent.Connections.Peer.IPeerConnection.html#MonoTorrent_Connections_Peer_IPeerConnection_AddressBytes
  name: AddressBytes
  nameWithType: IPeerConnection.AddressBytes
  fullName: MonoTorrent.Connections.Peer.IPeerConnection.AddressBytes
- uid: System.ReadOnlyMemory{System.Byte}
  commentId: T:System.ReadOnlyMemory{System.Byte}
  parent: System
  definition: System.ReadOnlyMemory`1
  href: https://learn.microsoft.com/dotnet/api/system.readonlymemory-1
  name: ReadOnlyMemory<byte>
  nameWithType: ReadOnlyMemory<byte>
  fullName: System.ReadOnlyMemory<byte>
  nameWithType.vb: ReadOnlyMemory(Of Byte)
  fullName.vb: System.ReadOnlyMemory(Of Byte)
  name.vb: ReadOnlyMemory(Of Byte)
  spec.csharp:
  - uid: System.ReadOnlyMemory`1
    name: ReadOnlyMemory
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlymemory-1
  - name: <
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '>'
  spec.vb:
  - uid: System.ReadOnlyMemory`1
    name: ReadOnlyMemory
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlymemory-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: )
- uid: System.ReadOnlyMemory`1
  commentId: T:System.ReadOnlyMemory`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.readonlymemory-1
  name: ReadOnlyMemory<T>
  nameWithType: ReadOnlyMemory<T>
  fullName: System.ReadOnlyMemory<T>
  nameWithType.vb: ReadOnlyMemory(Of T)
  fullName.vb: System.ReadOnlyMemory(Of T)
  name.vb: ReadOnlyMemory(Of T)
  spec.csharp:
  - uid: System.ReadOnlyMemory`1
    name: ReadOnlyMemory
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlymemory-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.ReadOnlyMemory`1
    name: ReadOnlyMemory
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlymemory-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: MonoTorrent.Connections.Peer.SocketPeerConnection.CanReconnect*
  commentId: Overload:MonoTorrent.Connections.Peer.SocketPeerConnection.CanReconnect
  href: MonoTorrent.Connections.Peer.SocketPeerConnection.html#MonoTorrent_Connections_Peer_SocketPeerConnection_CanReconnect
  name: CanReconnect
  nameWithType: SocketPeerConnection.CanReconnect
  fullName: MonoTorrent.Connections.Peer.SocketPeerConnection.CanReconnect
- uid: MonoTorrent.Connections.Peer.IPeerConnection.CanReconnect
  commentId: P:MonoTorrent.Connections.Peer.IPeerConnection.CanReconnect
  parent: MonoTorrent.Connections.Peer.IPeerConnection
  href: MonoTorrent.Connections.Peer.IPeerConnection.html#MonoTorrent_Connections_Peer_IPeerConnection_CanReconnect
  name: CanReconnect
  nameWithType: IPeerConnection.CanReconnect
  fullName: MonoTorrent.Connections.Peer.IPeerConnection.CanReconnect
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: MonoTorrent.Connections.Peer.SocketPeerConnection.Disposed*
  commentId: Overload:MonoTorrent.Connections.Peer.SocketPeerConnection.Disposed
  href: MonoTorrent.Connections.Peer.SocketPeerConnection.html#MonoTorrent_Connections_Peer_SocketPeerConnection_Disposed
  name: Disposed
  nameWithType: SocketPeerConnection.Disposed
  fullName: MonoTorrent.Connections.Peer.SocketPeerConnection.Disposed
- uid: MonoTorrent.Connections.Peer.IPeerConnection.Disposed
  commentId: P:MonoTorrent.Connections.Peer.IPeerConnection.Disposed
  parent: MonoTorrent.Connections.Peer.IPeerConnection
  href: MonoTorrent.Connections.Peer.IPeerConnection.html#MonoTorrent_Connections_Peer_IPeerConnection_Disposed
  name: Disposed
  nameWithType: IPeerConnection.Disposed
  fullName: MonoTorrent.Connections.Peer.IPeerConnection.Disposed
- uid: MonoTorrent.Connections.Peer.SocketPeerConnection.EndPoint*
  commentId: Overload:MonoTorrent.Connections.Peer.SocketPeerConnection.EndPoint
  href: MonoTorrent.Connections.Peer.SocketPeerConnection.html#MonoTorrent_Connections_Peer_SocketPeerConnection_EndPoint
  name: EndPoint
  nameWithType: SocketPeerConnection.EndPoint
  fullName: MonoTorrent.Connections.Peer.SocketPeerConnection.EndPoint
- uid: MonoTorrent.Connections.Peer.IPeerConnection.EndPoint
  commentId: P:MonoTorrent.Connections.Peer.IPeerConnection.EndPoint
  parent: MonoTorrent.Connections.Peer.IPeerConnection
  href: MonoTorrent.Connections.Peer.IPeerConnection.html#MonoTorrent_Connections_Peer_IPeerConnection_EndPoint
  name: EndPoint
  nameWithType: IPeerConnection.EndPoint
  fullName: MonoTorrent.Connections.Peer.IPeerConnection.EndPoint
- uid: System.Net.IPEndPoint
  commentId: T:System.Net.IPEndPoint
  parent: System.Net
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.net.ipendpoint
  name: IPEndPoint
  nameWithType: IPEndPoint
  fullName: System.Net.IPEndPoint
- uid: System.Net
  commentId: N:System.Net
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Net
  nameWithType: System.Net
  fullName: System.Net
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Net
    name: Net
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.net
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Net
    name: Net
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.net
- uid: MonoTorrent.Connections.Peer.SocketPeerConnection.IsIncoming*
  commentId: Overload:MonoTorrent.Connections.Peer.SocketPeerConnection.IsIncoming
  href: MonoTorrent.Connections.Peer.SocketPeerConnection.html#MonoTorrent_Connections_Peer_SocketPeerConnection_IsIncoming
  name: IsIncoming
  nameWithType: SocketPeerConnection.IsIncoming
  fullName: MonoTorrent.Connections.Peer.SocketPeerConnection.IsIncoming
- uid: MonoTorrent.Connections.Peer.IPeerConnection.IsIncoming
  commentId: P:MonoTorrent.Connections.Peer.IPeerConnection.IsIncoming
  parent: MonoTorrent.Connections.Peer.IPeerConnection
  href: MonoTorrent.Connections.Peer.IPeerConnection.html#MonoTorrent_Connections_Peer_IPeerConnection_IsIncoming
  name: IsIncoming
  nameWithType: IPeerConnection.IsIncoming
  fullName: MonoTorrent.Connections.Peer.IPeerConnection.IsIncoming
- uid: MonoTorrent.Connections.Peer.SocketPeerConnection.LocalAddressBytes*
  commentId: Overload:MonoTorrent.Connections.Peer.SocketPeerConnection.LocalAddressBytes
  href: MonoTorrent.Connections.Peer.SocketPeerConnection.html#MonoTorrent_Connections_Peer_SocketPeerConnection_LocalAddressBytes
  name: LocalAddressBytes
  nameWithType: SocketPeerConnection.LocalAddressBytes
  fullName: MonoTorrent.Connections.Peer.SocketPeerConnection.LocalAddressBytes
- uid: MonoTorrent.Connections.Peer.IPeerConnectionLocalInfo.LocalAddressBytes
  commentId: P:MonoTorrent.Connections.Peer.IPeerConnectionLocalInfo.LocalAddressBytes
  parent: MonoTorrent.Connections.Peer.IPeerConnectionLocalInfo
  href: MonoTorrent.Connections.Peer.IPeerConnectionLocalInfo.html#MonoTorrent_Connections_Peer_IPeerConnectionLocalInfo_LocalAddressBytes
  name: LocalAddressBytes
  nameWithType: IPeerConnectionLocalInfo.LocalAddressBytes
  fullName: MonoTorrent.Connections.Peer.IPeerConnectionLocalInfo.LocalAddressBytes
- uid: MonoTorrent.Connections.Peer.SocketPeerConnection.LocalEndPoint*
  commentId: Overload:MonoTorrent.Connections.Peer.SocketPeerConnection.LocalEndPoint
  href: MonoTorrent.Connections.Peer.SocketPeerConnection.html#MonoTorrent_Connections_Peer_SocketPeerConnection_LocalEndPoint
  name: LocalEndPoint
  nameWithType: SocketPeerConnection.LocalEndPoint
  fullName: MonoTorrent.Connections.Peer.SocketPeerConnection.LocalEndPoint
- uid: MonoTorrent.Connections.Peer.IPeerConnectionLocalInfo.LocalEndPoint
  commentId: P:MonoTorrent.Connections.Peer.IPeerConnectionLocalInfo.LocalEndPoint
  parent: MonoTorrent.Connections.Peer.IPeerConnectionLocalInfo
  href: MonoTorrent.Connections.Peer.IPeerConnectionLocalInfo.html#MonoTorrent_Connections_Peer_IPeerConnectionLocalInfo_LocalEndPoint
  name: LocalEndPoint
  nameWithType: IPeerConnectionLocalInfo.LocalEndPoint
  fullName: MonoTorrent.Connections.Peer.IPeerConnectionLocalInfo.LocalEndPoint
- uid: MonoTorrent.Connections.Peer.SocketPeerConnection.LocalUri*
  commentId: Overload:MonoTorrent.Connections.Peer.SocketPeerConnection.LocalUri
  href: MonoTorrent.Connections.Peer.SocketPeerConnection.html#MonoTorrent_Connections_Peer_SocketPeerConnection_LocalUri
  name: LocalUri
  nameWithType: SocketPeerConnection.LocalUri
  fullName: MonoTorrent.Connections.Peer.SocketPeerConnection.LocalUri
- uid: MonoTorrent.Connections.Peer.IPeerConnectionLocalInfo.LocalUri
  commentId: P:MonoTorrent.Connections.Peer.IPeerConnectionLocalInfo.LocalUri
  parent: MonoTorrent.Connections.Peer.IPeerConnectionLocalInfo
  href: MonoTorrent.Connections.Peer.IPeerConnectionLocalInfo.html#MonoTorrent_Connections_Peer_IPeerConnectionLocalInfo_LocalUri
  name: LocalUri
  nameWithType: IPeerConnectionLocalInfo.LocalUri
  fullName: MonoTorrent.Connections.Peer.IPeerConnectionLocalInfo.LocalUri
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uri
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: MonoTorrent.Connections.Peer.SocketPeerConnection.Uri*
  commentId: Overload:MonoTorrent.Connections.Peer.SocketPeerConnection.Uri
  href: MonoTorrent.Connections.Peer.SocketPeerConnection.html#MonoTorrent_Connections_Peer_SocketPeerConnection_Uri
  name: Uri
  nameWithType: SocketPeerConnection.Uri
  fullName: MonoTorrent.Connections.Peer.SocketPeerConnection.Uri
- uid: MonoTorrent.Connections.Peer.IPeerConnection.Uri
  commentId: P:MonoTorrent.Connections.Peer.IPeerConnection.Uri
  parent: MonoTorrent.Connections.Peer.IPeerConnection
  href: MonoTorrent.Connections.Peer.IPeerConnection.html#MonoTorrent_Connections_Peer_IPeerConnection_Uri
  name: Uri
  nameWithType: IPeerConnection.Uri
  fullName: MonoTorrent.Connections.Peer.IPeerConnection.Uri
- uid: MonoTorrent.Connections.Peer.SocketPeerConnection.#ctor*
  commentId: Overload:MonoTorrent.Connections.Peer.SocketPeerConnection.#ctor
  href: MonoTorrent.Connections.Peer.SocketPeerConnection.html#MonoTorrent_Connections_Peer_SocketPeerConnection__ctor_System_Net_Sockets_Socket_System_Boolean_
  name: SocketPeerConnection
  nameWithType: SocketPeerConnection.SocketPeerConnection
  fullName: MonoTorrent.Connections.Peer.SocketPeerConnection.SocketPeerConnection
  nameWithType.vb: SocketPeerConnection.New
  fullName.vb: MonoTorrent.Connections.Peer.SocketPeerConnection.New
  name.vb: New
- uid: System.Net.Sockets.Socket
  commentId: T:System.Net.Sockets.Socket
  parent: System.Net.Sockets
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.net.sockets.socket
  name: Socket
  nameWithType: Socket
  fullName: System.Net.Sockets.Socket
- uid: System.Net.Sockets
  commentId: N:System.Net.Sockets
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Net.Sockets
  nameWithType: System.Net.Sockets
  fullName: System.Net.Sockets
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Net
    name: Net
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.net
  - name: .
  - uid: System.Net.Sockets
    name: Sockets
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.net.sockets
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Net
    name: Net
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.net
  - name: .
  - uid: System.Net.Sockets
    name: Sockets
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.net.sockets
- uid: MonoTorrent.Connections.ISocketConnector
  commentId: T:MonoTorrent.Connections.ISocketConnector
  parent: MonoTorrent.Connections
  href: MonoTorrent.Connections.ISocketConnector.html
  name: ISocketConnector
  nameWithType: ISocketConnector
  fullName: MonoTorrent.Connections.ISocketConnector
- uid: MonoTorrent.Connections
  commentId: N:MonoTorrent.Connections
  href: MonoTorrent.html
  name: MonoTorrent.Connections
  nameWithType: MonoTorrent.Connections
  fullName: MonoTorrent.Connections
  spec.csharp:
  - uid: MonoTorrent
    name: MonoTorrent
    href: MonoTorrent.html
  - name: .
  - uid: MonoTorrent.Connections
    name: Connections
    href: MonoTorrent.Connections.html
  spec.vb:
  - uid: MonoTorrent
    name: MonoTorrent
    href: MonoTorrent.html
  - name: .
  - uid: MonoTorrent.Connections
    name: Connections
    href: MonoTorrent.Connections.html
- uid: MonoTorrent.Connections.Peer.SocketPeerConnection.ConnectAsync*
  commentId: Overload:MonoTorrent.Connections.Peer.SocketPeerConnection.ConnectAsync
  href: MonoTorrent.Connections.Peer.SocketPeerConnection.html#MonoTorrent_Connections_Peer_SocketPeerConnection_ConnectAsync
  name: ConnectAsync
  nameWithType: SocketPeerConnection.ConnectAsync
  fullName: MonoTorrent.Connections.Peer.SocketPeerConnection.ConnectAsync
- uid: MonoTorrent.Connections.Peer.IPeerConnection.ConnectAsync
  commentId: M:MonoTorrent.Connections.Peer.IPeerConnection.ConnectAsync
  parent: MonoTorrent.Connections.Peer.IPeerConnection
  href: MonoTorrent.Connections.Peer.IPeerConnection.html#MonoTorrent_Connections_Peer_IPeerConnection_ConnectAsync
  name: ConnectAsync()
  nameWithType: IPeerConnection.ConnectAsync()
  fullName: MonoTorrent.Connections.Peer.IPeerConnection.ConnectAsync()
  spec.csharp:
  - uid: MonoTorrent.Connections.Peer.IPeerConnection.ConnectAsync
    name: ConnectAsync
    href: MonoTorrent.Connections.Peer.IPeerConnection.html#MonoTorrent_Connections_Peer_IPeerConnection_ConnectAsync
  - name: (
  - name: )
  spec.vb:
  - uid: MonoTorrent.Connections.Peer.IPeerConnection.ConnectAsync
    name: ConnectAsync
    href: MonoTorrent.Connections.Peer.IPeerConnection.html#MonoTorrent_Connections_Peer_IPeerConnection_ConnectAsync
  - name: (
  - name: )
- uid: ReusableTasks.ReusableTask
  commentId: T:ReusableTasks.ReusableTask
  parent: ReusableTasks
  isExternal: true
  name: ReusableTask
  nameWithType: ReusableTask
  fullName: ReusableTasks.ReusableTask
- uid: ReusableTasks
  commentId: N:ReusableTasks
  isExternal: true
  name: ReusableTasks
  nameWithType: ReusableTasks
  fullName: ReusableTasks
- uid: MonoTorrent.Connections.Peer.SocketPeerConnection.ReceiveAsync*
  commentId: Overload:MonoTorrent.Connections.Peer.SocketPeerConnection.ReceiveAsync
  href: MonoTorrent.Connections.Peer.SocketPeerConnection.html#MonoTorrent_Connections_Peer_SocketPeerConnection_ReceiveAsync_System_Memory_System_Byte__
  name: ReceiveAsync
  nameWithType: SocketPeerConnection.ReceiveAsync
  fullName: MonoTorrent.Connections.Peer.SocketPeerConnection.ReceiveAsync
- uid: MonoTorrent.Connections.Peer.IPeerConnection.ReceiveAsync(System.Memory{System.Byte})
  commentId: M:MonoTorrent.Connections.Peer.IPeerConnection.ReceiveAsync(System.Memory{System.Byte})
  parent: MonoTorrent.Connections.Peer.IPeerConnection
  isExternal: true
  href: MonoTorrent.Connections.Peer.IPeerConnection.html#MonoTorrent_Connections_Peer_IPeerConnection_ReceiveAsync_System_Memory_System_Byte__
  name: ReceiveAsync(Memory<byte>)
  nameWithType: IPeerConnection.ReceiveAsync(Memory<byte>)
  fullName: MonoTorrent.Connections.Peer.IPeerConnection.ReceiveAsync(System.Memory<byte>)
  nameWithType.vb: IPeerConnection.ReceiveAsync(Memory(Of Byte))
  fullName.vb: MonoTorrent.Connections.Peer.IPeerConnection.ReceiveAsync(System.Memory(Of Byte))
  name.vb: ReceiveAsync(Memory(Of Byte))
  spec.csharp:
  - uid: MonoTorrent.Connections.Peer.IPeerConnection.ReceiveAsync(System.Memory{System.Byte})
    name: ReceiveAsync
    href: MonoTorrent.Connections.Peer.IPeerConnection.html#MonoTorrent_Connections_Peer_IPeerConnection_ReceiveAsync_System_Memory_System_Byte__
  - name: (
  - uid: System.Memory`1
    name: Memory
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.memory-1
  - name: <
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '>'
  - name: )
  spec.vb:
  - uid: MonoTorrent.Connections.Peer.IPeerConnection.ReceiveAsync(System.Memory{System.Byte})
    name: ReceiveAsync
    href: MonoTorrent.Connections.Peer.IPeerConnection.html#MonoTorrent_Connections_Peer_IPeerConnection_ReceiveAsync_System_Memory_System_Byte__
  - name: (
  - uid: System.Memory`1
    name: Memory
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.memory-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: )
  - name: )
- uid: System.Memory{System.Byte}
  commentId: T:System.Memory{System.Byte}
  parent: System
  definition: System.Memory`1
  href: https://learn.microsoft.com/dotnet/api/system.memory-1
  name: Memory<byte>
  nameWithType: Memory<byte>
  fullName: System.Memory<byte>
  nameWithType.vb: Memory(Of Byte)
  fullName.vb: System.Memory(Of Byte)
  name.vb: Memory(Of Byte)
  spec.csharp:
  - uid: System.Memory`1
    name: Memory
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.memory-1
  - name: <
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '>'
  spec.vb:
  - uid: System.Memory`1
    name: Memory
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.memory-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: )
- uid: ReusableTasks.ReusableTask{System.Int32}
  commentId: T:ReusableTasks.ReusableTask{System.Int32}
  parent: ReusableTasks
  definition: ReusableTasks.ReusableTask`1
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: ReusableTask<int>
  nameWithType: ReusableTask<int>
  fullName: ReusableTasks.ReusableTask<int>
  nameWithType.vb: ReusableTask(Of Integer)
  fullName.vb: ReusableTasks.ReusableTask(Of Integer)
  name.vb: ReusableTask(Of Integer)
  spec.csharp:
  - uid: ReusableTasks.ReusableTask`1
    name: ReusableTask
    isExternal: true
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  spec.vb:
  - uid: ReusableTasks.ReusableTask`1
    name: ReusableTask
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Memory`1
  commentId: T:System.Memory`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.memory-1
  name: Memory<T>
  nameWithType: Memory<T>
  fullName: System.Memory<T>
  nameWithType.vb: Memory(Of T)
  fullName.vb: System.Memory(Of T)
  name.vb: Memory(Of T)
  spec.csharp:
  - uid: System.Memory`1
    name: Memory
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.memory-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Memory`1
    name: Memory
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.memory-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: ReusableTasks.ReusableTask`1
  commentId: T:ReusableTasks.ReusableTask`1
  isExternal: true
  name: ReusableTask<T>
  nameWithType: ReusableTask<T>
  fullName: ReusableTasks.ReusableTask<T>
  nameWithType.vb: ReusableTask(Of T)
  fullName.vb: ReusableTasks.ReusableTask(Of T)
  name.vb: ReusableTask(Of T)
  spec.csharp:
  - uid: ReusableTasks.ReusableTask`1
    name: ReusableTask
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: ReusableTasks.ReusableTask`1
    name: ReusableTask
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: MonoTorrent.Connections.Peer.SocketPeerConnection.SendAsync*
  commentId: Overload:MonoTorrent.Connections.Peer.SocketPeerConnection.SendAsync
  href: MonoTorrent.Connections.Peer.SocketPeerConnection.html#MonoTorrent_Connections_Peer_SocketPeerConnection_SendAsync_System_Memory_System_Byte__
  name: SendAsync
  nameWithType: SocketPeerConnection.SendAsync
  fullName: MonoTorrent.Connections.Peer.SocketPeerConnection.SendAsync
- uid: MonoTorrent.Connections.Peer.IPeerConnection.SendAsync(System.Memory{System.Byte})
  commentId: M:MonoTorrent.Connections.Peer.IPeerConnection.SendAsync(System.Memory{System.Byte})
  parent: MonoTorrent.Connections.Peer.IPeerConnection
  isExternal: true
  href: MonoTorrent.Connections.Peer.IPeerConnection.html#MonoTorrent_Connections_Peer_IPeerConnection_SendAsync_System_Memory_System_Byte__
  name: SendAsync(Memory<byte>)
  nameWithType: IPeerConnection.SendAsync(Memory<byte>)
  fullName: MonoTorrent.Connections.Peer.IPeerConnection.SendAsync(System.Memory<byte>)
  nameWithType.vb: IPeerConnection.SendAsync(Memory(Of Byte))
  fullName.vb: MonoTorrent.Connections.Peer.IPeerConnection.SendAsync(System.Memory(Of Byte))
  name.vb: SendAsync(Memory(Of Byte))
  spec.csharp:
  - uid: MonoTorrent.Connections.Peer.IPeerConnection.SendAsync(System.Memory{System.Byte})
    name: SendAsync
    href: MonoTorrent.Connections.Peer.IPeerConnection.html#MonoTorrent_Connections_Peer_IPeerConnection_SendAsync_System_Memory_System_Byte__
  - name: (
  - uid: System.Memory`1
    name: Memory
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.memory-1
  - name: <
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '>'
  - name: )
  spec.vb:
  - uid: MonoTorrent.Connections.Peer.IPeerConnection.SendAsync(System.Memory{System.Byte})
    name: SendAsync
    href: MonoTorrent.Connections.Peer.IPeerConnection.html#MonoTorrent_Connections_Peer_IPeerConnection_SendAsync_System_Memory_System_Byte__
  - name: (
  - uid: System.Memory`1
    name: Memory
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.memory-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: )
  - name: )
- uid: MonoTorrent.Connections.Peer.SocketPeerConnection.Dispose*
  commentId: Overload:MonoTorrent.Connections.Peer.SocketPeerConnection.Dispose
  href: MonoTorrent.Connections.Peer.SocketPeerConnection.html#MonoTorrent_Connections_Peer_SocketPeerConnection_Dispose
  name: Dispose
  nameWithType: SocketPeerConnection.Dispose
  fullName: MonoTorrent.Connections.Peer.SocketPeerConnection.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
