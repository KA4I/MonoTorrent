### YamlMime:ManagedReference
items:
- uid: MonoTorrent.Trackers.AnnounceResponse
  commentId: T:MonoTorrent.Trackers.AnnounceResponse
  id: AnnounceResponse
  parent: MonoTorrent.Trackers
  children:
  - MonoTorrent.Trackers.AnnounceResponse.#ctor(MonoTorrent.Trackers.TrackerState,System.Collections.Generic.Dictionary{MonoTorrent.InfoHash,System.Collections.Generic.IList{MonoTorrent.PeerInfo}},System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan},System.Collections.Generic.Dictionary{MonoTorrent.InfoHash,MonoTorrent.Trackers.ScrapeInfo},System.String,System.String)
  - MonoTorrent.Trackers.AnnounceResponse.MinUpdateInterval
  - MonoTorrent.Trackers.AnnounceResponse.Peers
  - MonoTorrent.Trackers.AnnounceResponse.UpdateInterval
  langs:
  - csharp
  - vb
  name: AnnounceResponse
  nameWithType: AnnounceResponse
  fullName: MonoTorrent.Trackers.AnnounceResponse
  type: Class
  source:
    remote:
      path: MonoTorrent/src/Trackers/AnnounceResponse.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: AnnounceResponse
    path: src/Trackers/AnnounceResponse.cs
    startLine: 34
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.Trackers
  syntax:
    content: 'public class AnnounceResponse : TrackerResponse'
    content.vb: Public Class AnnounceResponse Inherits TrackerResponse
  inheritance:
  - System.Object
  - MonoTorrent.Trackers.TrackerResponse
  inheritedMembers:
  - MonoTorrent.Trackers.TrackerResponse.FailureMessage
  - MonoTorrent.Trackers.TrackerResponse.ScrapeInfo
  - MonoTorrent.Trackers.TrackerResponse.State
  - MonoTorrent.Trackers.TrackerResponse.WarningMessage
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: MonoTorrent.Trackers.AnnounceResponse.Peers
  commentId: P:MonoTorrent.Trackers.AnnounceResponse.Peers
  id: Peers
  parent: MonoTorrent.Trackers.AnnounceResponse
  langs:
  - csharp
  - vb
  name: Peers
  nameWithType: AnnounceResponse.Peers
  fullName: MonoTorrent.Trackers.AnnounceResponse.Peers
  type: Property
  source:
    remote:
      path: MonoTorrent/src/Trackers/AnnounceResponse.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: Peers
    path: src/Trackers/AnnounceResponse.cs
    startLine: 39
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.Trackers
  summary: The list of peers returned by the tracker.
  example: []
  syntax:
    content: public Dictionary<InfoHash, IList<PeerInfo>> Peers { get; }
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{MonoTorrent.InfoHash,System.Collections.Generic.IList{MonoTorrent.PeerInfo}}
    content.vb: Public ReadOnly Property Peers As Dictionary(Of InfoHash, IList(Of PeerInfo))
  overload: MonoTorrent.Trackers.AnnounceResponse.Peers*
- uid: MonoTorrent.Trackers.AnnounceResponse.MinUpdateInterval
  commentId: P:MonoTorrent.Trackers.AnnounceResponse.MinUpdateInterval
  id: MinUpdateInterval
  parent: MonoTorrent.Trackers.AnnounceResponse
  langs:
  - csharp
  - vb
  name: MinUpdateInterval
  nameWithType: AnnounceResponse.MinUpdateInterval
  fullName: MonoTorrent.Trackers.AnnounceResponse.MinUpdateInterval
  type: Property
  source:
    remote:
      path: MonoTorrent/src/Trackers/AnnounceResponse.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: MinUpdateInterval
    path: src/Trackers/AnnounceResponse.cs
    startLine: 41
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.Trackers
  syntax:
    content: public TimeSpan MinUpdateInterval { get; }
    parameters: []
    return:
      type: System.TimeSpan
    content.vb: Public ReadOnly Property MinUpdateInterval As TimeSpan
  overload: MonoTorrent.Trackers.AnnounceResponse.MinUpdateInterval*
- uid: MonoTorrent.Trackers.AnnounceResponse.UpdateInterval
  commentId: P:MonoTorrent.Trackers.AnnounceResponse.UpdateInterval
  id: UpdateInterval
  parent: MonoTorrent.Trackers.AnnounceResponse
  langs:
  - csharp
  - vb
  name: UpdateInterval
  nameWithType: AnnounceResponse.UpdateInterval
  fullName: MonoTorrent.Trackers.AnnounceResponse.UpdateInterval
  type: Property
  source:
    remote:
      path: MonoTorrent/src/Trackers/AnnounceResponse.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: UpdateInterval
    path: src/Trackers/AnnounceResponse.cs
    startLine: 43
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.Trackers
  syntax:
    content: public TimeSpan UpdateInterval { get; }
    parameters: []
    return:
      type: System.TimeSpan
    content.vb: Public ReadOnly Property UpdateInterval As TimeSpan
  overload: MonoTorrent.Trackers.AnnounceResponse.UpdateInterval*
- uid: MonoTorrent.Trackers.AnnounceResponse.#ctor(MonoTorrent.Trackers.TrackerState,System.Collections.Generic.Dictionary{MonoTorrent.InfoHash,System.Collections.Generic.IList{MonoTorrent.PeerInfo}},System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan},System.Collections.Generic.Dictionary{MonoTorrent.InfoHash,MonoTorrent.Trackers.ScrapeInfo},System.String,System.String)
  commentId: M:MonoTorrent.Trackers.AnnounceResponse.#ctor(MonoTorrent.Trackers.TrackerState,System.Collections.Generic.Dictionary{MonoTorrent.InfoHash,System.Collections.Generic.IList{MonoTorrent.PeerInfo}},System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan},System.Collections.Generic.Dictionary{MonoTorrent.InfoHash,MonoTorrent.Trackers.ScrapeInfo},System.String,System.String)
  id: '#ctor(MonoTorrent.Trackers.TrackerState,System.Collections.Generic.Dictionary{MonoTorrent.InfoHash,System.Collections.Generic.IList{MonoTorrent.PeerInfo}},System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan},System.Collections.Generic.Dictionary{MonoTorrent.InfoHash,MonoTorrent.Trackers.ScrapeInfo},System.String,System.String)'
  parent: MonoTorrent.Trackers.AnnounceResponse
  langs:
  - csharp
  - vb
  name: AnnounceResponse(TrackerState, Dictionary<InfoHash, IList<PeerInfo>>?, TimeSpan?, TimeSpan?, Dictionary<InfoHash, ScrapeInfo>?, string, string)
  nameWithType: AnnounceResponse.AnnounceResponse(TrackerState, Dictionary<InfoHash, IList<PeerInfo>>?, TimeSpan?, TimeSpan?, Dictionary<InfoHash, ScrapeInfo>?, string, string)
  fullName: MonoTorrent.Trackers.AnnounceResponse.AnnounceResponse(MonoTorrent.Trackers.TrackerState, System.Collections.Generic.Dictionary<MonoTorrent.InfoHash, System.Collections.Generic.IList<MonoTorrent.PeerInfo>>?, System.TimeSpan?, System.TimeSpan?, System.Collections.Generic.Dictionary<MonoTorrent.InfoHash, MonoTorrent.Trackers.ScrapeInfo>?, string, string)
  type: Constructor
  source:
    remote:
      path: MonoTorrent/src/Trackers/AnnounceResponse.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: .ctor
    path: src/Trackers/AnnounceResponse.cs
    startLine: 45
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.Trackers
  syntax:
    content: public AnnounceResponse(TrackerState state, Dictionary<InfoHash, IList<PeerInfo>>? peers = null, TimeSpan? minUpdateInterval = null, TimeSpan? updateInterval = null, Dictionary<InfoHash, ScrapeInfo>? scrapeInfo = null, string warningMessage = "", string failureMessage = "")
    parameters:
    - id: state
      type: MonoTorrent.Trackers.TrackerState
    - id: peers
      type: System.Collections.Generic.Dictionary{MonoTorrent.InfoHash,System.Collections.Generic.IList{MonoTorrent.PeerInfo}}
    - id: minUpdateInterval
      type: System.Nullable{System.TimeSpan}
    - id: updateInterval
      type: System.Nullable{System.TimeSpan}
    - id: scrapeInfo
      type: System.Collections.Generic.Dictionary{MonoTorrent.InfoHash,MonoTorrent.Trackers.ScrapeInfo}
    - id: warningMessage
      type: System.String
    - id: failureMessage
      type: System.String
    content.vb: Public Sub New(state As TrackerState, peers As Dictionary(Of InfoHash, IList(Of PeerInfo)) = Nothing, minUpdateInterval As TimeSpan? = Nothing, updateInterval As TimeSpan? = Nothing, scrapeInfo As Dictionary(Of InfoHash, ScrapeInfo) = Nothing, warningMessage As String = "", failureMessage As String = "")
  overload: MonoTorrent.Trackers.AnnounceResponse.#ctor*
  nameWithType.vb: AnnounceResponse.New(TrackerState, Dictionary(Of InfoHash, IList(Of PeerInfo)), TimeSpan?, TimeSpan?, Dictionary(Of InfoHash, ScrapeInfo), String, String)
  fullName.vb: MonoTorrent.Trackers.AnnounceResponse.New(MonoTorrent.Trackers.TrackerState, System.Collections.Generic.Dictionary(Of MonoTorrent.InfoHash, System.Collections.Generic.IList(Of MonoTorrent.PeerInfo)), System.TimeSpan?, System.TimeSpan?, System.Collections.Generic.Dictionary(Of MonoTorrent.InfoHash, MonoTorrent.Trackers.ScrapeInfo), String, String)
  name.vb: New(TrackerState, Dictionary(Of InfoHash, IList(Of PeerInfo)), TimeSpan?, TimeSpan?, Dictionary(Of InfoHash, ScrapeInfo), String, String)
references:
- uid: MonoTorrent.Trackers
  commentId: N:MonoTorrent.Trackers
  href: MonoTorrent.html
  name: MonoTorrent.Trackers
  nameWithType: MonoTorrent.Trackers
  fullName: MonoTorrent.Trackers
  spec.csharp:
  - uid: MonoTorrent
    name: MonoTorrent
    href: MonoTorrent.html
  - name: .
  - uid: MonoTorrent.Trackers
    name: Trackers
    href: MonoTorrent.Trackers.html
  spec.vb:
  - uid: MonoTorrent
    name: MonoTorrent
    href: MonoTorrent.html
  - name: .
  - uid: MonoTorrent.Trackers
    name: Trackers
    href: MonoTorrent.Trackers.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: MonoTorrent.Trackers.TrackerResponse
  commentId: T:MonoTorrent.Trackers.TrackerResponse
  parent: MonoTorrent.Trackers
  href: MonoTorrent.Trackers.TrackerResponse.html
  name: TrackerResponse
  nameWithType: TrackerResponse
  fullName: MonoTorrent.Trackers.TrackerResponse
- uid: MonoTorrent.Trackers.TrackerResponse.FailureMessage
  commentId: P:MonoTorrent.Trackers.TrackerResponse.FailureMessage
  parent: MonoTorrent.Trackers.TrackerResponse
  href: MonoTorrent.Trackers.TrackerResponse.html#MonoTorrent_Trackers_TrackerResponse_FailureMessage
  name: FailureMessage
  nameWithType: TrackerResponse.FailureMessage
  fullName: MonoTorrent.Trackers.TrackerResponse.FailureMessage
- uid: MonoTorrent.Trackers.TrackerResponse.ScrapeInfo
  commentId: P:MonoTorrent.Trackers.TrackerResponse.ScrapeInfo
  parent: MonoTorrent.Trackers.TrackerResponse
  href: MonoTorrent.Trackers.TrackerResponse.html#MonoTorrent_Trackers_TrackerResponse_ScrapeInfo
  name: ScrapeInfo
  nameWithType: TrackerResponse.ScrapeInfo
  fullName: MonoTorrent.Trackers.TrackerResponse.ScrapeInfo
- uid: MonoTorrent.Trackers.TrackerResponse.State
  commentId: P:MonoTorrent.Trackers.TrackerResponse.State
  parent: MonoTorrent.Trackers.TrackerResponse
  href: MonoTorrent.Trackers.TrackerResponse.html#MonoTorrent_Trackers_TrackerResponse_State
  name: State
  nameWithType: TrackerResponse.State
  fullName: MonoTorrent.Trackers.TrackerResponse.State
- uid: MonoTorrent.Trackers.TrackerResponse.WarningMessage
  commentId: P:MonoTorrent.Trackers.TrackerResponse.WarningMessage
  parent: MonoTorrent.Trackers.TrackerResponse
  href: MonoTorrent.Trackers.TrackerResponse.html#MonoTorrent_Trackers_TrackerResponse_WarningMessage
  name: WarningMessage
  nameWithType: TrackerResponse.WarningMessage
  fullName: MonoTorrent.Trackers.TrackerResponse.WarningMessage
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: MonoTorrent.Trackers.AnnounceResponse.Peers*
  commentId: Overload:MonoTorrent.Trackers.AnnounceResponse.Peers
  href: MonoTorrent.Trackers.AnnounceResponse.html#MonoTorrent_Trackers_AnnounceResponse_Peers
  name: Peers
  nameWithType: AnnounceResponse.Peers
  fullName: MonoTorrent.Trackers.AnnounceResponse.Peers
- uid: System.Collections.Generic.Dictionary{MonoTorrent.InfoHash,System.Collections.Generic.IList{MonoTorrent.PeerInfo}}
  commentId: T:System.Collections.Generic.Dictionary{MonoTorrent.InfoHash,System.Collections.Generic.IList{MonoTorrent.PeerInfo}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<InfoHash, IList<PeerInfo>>
  nameWithType: Dictionary<InfoHash, IList<PeerInfo>>
  fullName: System.Collections.Generic.Dictionary<MonoTorrent.InfoHash, System.Collections.Generic.IList<MonoTorrent.PeerInfo>>
  nameWithType.vb: Dictionary(Of InfoHash, IList(Of PeerInfo))
  fullName.vb: System.Collections.Generic.Dictionary(Of MonoTorrent.InfoHash, System.Collections.Generic.IList(Of MonoTorrent.PeerInfo))
  name.vb: Dictionary(Of InfoHash, IList(Of PeerInfo))
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: MonoTorrent.InfoHash
    name: InfoHash
    href: MonoTorrent.InfoHash.html
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - uid: MonoTorrent.PeerInfo
    name: PeerInfo
    href: MonoTorrent.PeerInfo.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: MonoTorrent.InfoHash
    name: InfoHash
    href: MonoTorrent.InfoHash.html
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - uid: MonoTorrent.PeerInfo
    name: PeerInfo
    href: MonoTorrent.PeerInfo.html
  - name: )
  - name: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: MonoTorrent.Trackers.AnnounceResponse.MinUpdateInterval*
  commentId: Overload:MonoTorrent.Trackers.AnnounceResponse.MinUpdateInterval
  href: MonoTorrent.Trackers.AnnounceResponse.html#MonoTorrent_Trackers_AnnounceResponse_MinUpdateInterval
  name: MinUpdateInterval
  nameWithType: AnnounceResponse.MinUpdateInterval
  fullName: MonoTorrent.Trackers.AnnounceResponse.MinUpdateInterval
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.timespan
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: MonoTorrent.Trackers.AnnounceResponse.UpdateInterval*
  commentId: Overload:MonoTorrent.Trackers.AnnounceResponse.UpdateInterval
  href: MonoTorrent.Trackers.AnnounceResponse.html#MonoTorrent_Trackers_AnnounceResponse_UpdateInterval
  name: UpdateInterval
  nameWithType: AnnounceResponse.UpdateInterval
  fullName: MonoTorrent.Trackers.AnnounceResponse.UpdateInterval
- uid: MonoTorrent.Trackers.AnnounceResponse.#ctor*
  commentId: Overload:MonoTorrent.Trackers.AnnounceResponse.#ctor
  href: MonoTorrent.Trackers.AnnounceResponse.html#MonoTorrent_Trackers_AnnounceResponse__ctor_MonoTorrent_Trackers_TrackerState_System_Collections_Generic_Dictionary_MonoTorrent_InfoHash_System_Collections_Generic_IList_MonoTorrent_PeerInfo___System_Nullable_System_TimeSpan__System_Nullable_System_TimeSpan__System_Collections_Generic_Dictionary_MonoTorrent_InfoHash_MonoTorrent_Trackers_ScrapeInfo__System_String_System_String_
  name: AnnounceResponse
  nameWithType: AnnounceResponse.AnnounceResponse
  fullName: MonoTorrent.Trackers.AnnounceResponse.AnnounceResponse
  nameWithType.vb: AnnounceResponse.New
  fullName.vb: MonoTorrent.Trackers.AnnounceResponse.New
  name.vb: New
- uid: MonoTorrent.Trackers.TrackerState
  commentId: T:MonoTorrent.Trackers.TrackerState
  parent: MonoTorrent.Trackers
  href: MonoTorrent.Trackers.TrackerState.html
  name: TrackerState
  nameWithType: TrackerState
  fullName: MonoTorrent.Trackers.TrackerState
- uid: System.Nullable{System.TimeSpan}
  commentId: T:System.Nullable{System.TimeSpan}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.timespan
  name: TimeSpan?
  nameWithType: TimeSpan?
  fullName: System.TimeSpan?
  spec.csharp:
  - uid: System.TimeSpan
    name: TimeSpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.timespan
  - name: '?'
  spec.vb:
  - uid: System.TimeSpan
    name: TimeSpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.timespan
  - name: '?'
- uid: System.Collections.Generic.Dictionary{MonoTorrent.InfoHash,MonoTorrent.Trackers.ScrapeInfo}
  commentId: T:System.Collections.Generic.Dictionary{MonoTorrent.InfoHash,MonoTorrent.Trackers.ScrapeInfo}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<InfoHash, ScrapeInfo>
  nameWithType: Dictionary<InfoHash, ScrapeInfo>
  fullName: System.Collections.Generic.Dictionary<MonoTorrent.InfoHash, MonoTorrent.Trackers.ScrapeInfo>
  nameWithType.vb: Dictionary(Of InfoHash, ScrapeInfo)
  fullName.vb: System.Collections.Generic.Dictionary(Of MonoTorrent.InfoHash, MonoTorrent.Trackers.ScrapeInfo)
  name.vb: Dictionary(Of InfoHash, ScrapeInfo)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: MonoTorrent.InfoHash
    name: InfoHash
    href: MonoTorrent.InfoHash.html
  - name: ','
  - name: " "
  - uid: MonoTorrent.Trackers.ScrapeInfo
    name: ScrapeInfo
    href: MonoTorrent.Trackers.ScrapeInfo.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: MonoTorrent.InfoHash
    name: InfoHash
    href: MonoTorrent.InfoHash.html
  - name: ','
  - name: " "
  - uid: MonoTorrent.Trackers.ScrapeInfo
    name: ScrapeInfo
    href: MonoTorrent.Trackers.ScrapeInfo.html
  - name: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
