### YamlMime:ManagedReference
items:
- uid: MonoTorrent.MerkleRoot
  commentId: T:MonoTorrent.MerkleRoot
  id: MerkleRoot
  parent: MonoTorrent
  children:
  - MonoTorrent.MerkleRoot.#ctor(System.Span{System.Byte})
  - MonoTorrent.MerkleRoot.AsMemory
  - MonoTorrent.MerkleRoot.Empty
  - MonoTorrent.MerkleRoot.Equals(MonoTorrent.MerkleRoot)
  - MonoTorrent.MerkleRoot.Equals(System.Object)
  - MonoTorrent.MerkleRoot.FromMemory(System.ReadOnlyMemory{System.Byte})
  - MonoTorrent.MerkleRoot.GetHashCode
  - MonoTorrent.MerkleRoot.IsEmpty
  - MonoTorrent.MerkleRoot.Span
  - MonoTorrent.MerkleRoot.op_Equality(MonoTorrent.MerkleRoot,MonoTorrent.MerkleRoot)
  - MonoTorrent.MerkleRoot.op_Inequality(MonoTorrent.MerkleRoot,MonoTorrent.MerkleRoot)
  langs:
  - csharp
  - vb
  name: MerkleRoot
  nameWithType: MerkleRoot
  fullName: MonoTorrent.MerkleRoot
  type: Struct
  source:
    remote:
      path: MonoTorrent/src/MerkleRoot.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: MerkleRoot
    path: src/MerkleRoot.cs
    startLine: 34
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent
  syntax:
    content: 'public readonly struct MerkleRoot : IEquatable<MerkleRoot>'
    content.vb: Public Structure MerkleRoot Implements IEquatable(Of MerkleRoot)
  implements:
  - System.IEquatable{MonoTorrent.MerkleRoot}
  inheritedMembers:
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
- uid: MonoTorrent.MerkleRoot.Empty
  commentId: P:MonoTorrent.MerkleRoot.Empty
  id: Empty
  parent: MonoTorrent.MerkleRoot
  langs:
  - csharp
  - vb
  name: Empty
  nameWithType: MerkleRoot.Empty
  fullName: MonoTorrent.MerkleRoot.Empty
  type: Property
  source:
    remote:
      path: MonoTorrent/src/MerkleRoot.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: Empty
    path: src/MerkleRoot.cs
    startLine: 36
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent
  syntax:
    content: public static MerkleRoot Empty { get; }
    parameters: []
    return:
      type: MonoTorrent.MerkleRoot
    content.vb: Public Shared ReadOnly Property Empty As MerkleRoot
  overload: MonoTorrent.MerkleRoot.Empty*
- uid: MonoTorrent.MerkleRoot.FromMemory(System.ReadOnlyMemory{System.Byte})
  commentId: M:MonoTorrent.MerkleRoot.FromMemory(System.ReadOnlyMemory{System.Byte})
  id: FromMemory(System.ReadOnlyMemory{System.Byte})
  parent: MonoTorrent.MerkleRoot
  langs:
  - csharp
  - vb
  name: FromMemory(ReadOnlyMemory<byte>)
  nameWithType: MerkleRoot.FromMemory(ReadOnlyMemory<byte>)
  fullName: MonoTorrent.MerkleRoot.FromMemory(System.ReadOnlyMemory<byte>)
  type: Method
  source:
    remote:
      path: MonoTorrent/src/MerkleRoot.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: FromMemory
    path: src/MerkleRoot.cs
    startLine: 38
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent
  syntax:
    content: public static MerkleRoot FromMemory(ReadOnlyMemory<byte> hash)
    parameters:
    - id: hash
      type: System.ReadOnlyMemory{System.Byte}
    return:
      type: MonoTorrent.MerkleRoot
    content.vb: Public Shared Function FromMemory(hash As ReadOnlyMemory(Of Byte)) As MerkleRoot
  overload: MonoTorrent.MerkleRoot.FromMemory*
  nameWithType.vb: MerkleRoot.FromMemory(ReadOnlyMemory(Of Byte))
  fullName.vb: MonoTorrent.MerkleRoot.FromMemory(System.ReadOnlyMemory(Of Byte))
  name.vb: FromMemory(ReadOnlyMemory(Of Byte))
- uid: MonoTorrent.MerkleRoot.IsEmpty
  commentId: P:MonoTorrent.MerkleRoot.IsEmpty
  id: IsEmpty
  parent: MonoTorrent.MerkleRoot
  langs:
  - csharp
  - vb
  name: IsEmpty
  nameWithType: MerkleRoot.IsEmpty
  fullName: MonoTorrent.MerkleRoot.IsEmpty
  type: Property
  source:
    remote:
      path: MonoTorrent/src/MerkleRoot.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: IsEmpty
    path: src/MerkleRoot.cs
    startLine: 43
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent
  syntax:
    content: public bool IsEmpty { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsEmpty As Boolean
  overload: MonoTorrent.MerkleRoot.IsEmpty*
- uid: MonoTorrent.MerkleRoot.Span
  commentId: P:MonoTorrent.MerkleRoot.Span
  id: Span
  parent: MonoTorrent.MerkleRoot
  langs:
  - csharp
  - vb
  name: Span
  nameWithType: MerkleRoot.Span
  fullName: MonoTorrent.MerkleRoot.Span
  type: Property
  source:
    remote:
      path: MonoTorrent/src/MerkleRoot.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: Span
    path: src/MerkleRoot.cs
    startLine: 45
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent
  syntax:
    content: public ReadOnlySpan<byte> Span { get; }
    parameters: []
    return:
      type: System.ReadOnlySpan{System.Byte}
    content.vb: Public ReadOnly Property Span As ReadOnlySpan(Of Byte)
  overload: MonoTorrent.MerkleRoot.Span*
- uid: MonoTorrent.MerkleRoot.#ctor(System.Span{System.Byte})
  commentId: M:MonoTorrent.MerkleRoot.#ctor(System.Span{System.Byte})
  id: '#ctor(System.Span{System.Byte})'
  parent: MonoTorrent.MerkleRoot
  langs:
  - csharp
  - vb
  name: MerkleRoot(Span<byte>)
  nameWithType: MerkleRoot.MerkleRoot(Span<byte>)
  fullName: MonoTorrent.MerkleRoot.MerkleRoot(System.Span<byte>)
  type: Constructor
  source:
    remote:
      path: MonoTorrent/src/MerkleRoot.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: .ctor
    path: src/MerkleRoot.cs
    startLine: 47
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent
  syntax:
    content: public MerkleRoot(Span<byte> hash)
    parameters:
    - id: hash
      type: System.Span{System.Byte}
    content.vb: Public Sub New(hash As Span(Of Byte))
  overload: MonoTorrent.MerkleRoot.#ctor*
  nameWithType.vb: MerkleRoot.New(Span(Of Byte))
  fullName.vb: MonoTorrent.MerkleRoot.New(System.Span(Of Byte))
  name.vb: New(Span(Of Byte))
- uid: MonoTorrent.MerkleRoot.AsMemory
  commentId: M:MonoTorrent.MerkleRoot.AsMemory
  id: AsMemory
  parent: MonoTorrent.MerkleRoot
  langs:
  - csharp
  - vb
  name: AsMemory()
  nameWithType: MerkleRoot.AsMemory()
  fullName: MonoTorrent.MerkleRoot.AsMemory()
  type: Method
  source:
    remote:
      path: MonoTorrent/src/MerkleRoot.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: AsMemory
    path: src/MerkleRoot.cs
    startLine: 60
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent
  syntax:
    content: public ReadOnlyMemory<byte> AsMemory()
    return:
      type: System.ReadOnlyMemory{System.Byte}
    content.vb: Public Function AsMemory() As ReadOnlyMemory(Of Byte)
  overload: MonoTorrent.MerkleRoot.AsMemory*
- uid: MonoTorrent.MerkleRoot.Equals(System.Object)
  commentId: M:MonoTorrent.MerkleRoot.Equals(System.Object)
  id: Equals(System.Object)
  parent: MonoTorrent.MerkleRoot
  langs:
  - csharp
  - vb
  name: Equals(object?)
  nameWithType: MerkleRoot.Equals(object?)
  fullName: MonoTorrent.MerkleRoot.Equals(object?)
  type: Method
  source:
    remote:
      path: MonoTorrent/src/MerkleRoot.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: Equals
    path: src/MerkleRoot.cs
    startLine: 63
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent
  summary: Indicates whether this instance and a specified object are equal.
  example: []
  syntax:
    content: public override bool Equals(object? obj)
    parameters:
    - id: obj
      type: System.Object
      description: The object to compare with the current instance.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if <code class="paramref">obj</code> and this instance are the same type and represent the same value; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.ValueType.Equals(System.Object)
  overload: MonoTorrent.MerkleRoot.Equals*
  nameWithType.vb: MerkleRoot.Equals(Object)
  fullName.vb: MonoTorrent.MerkleRoot.Equals(Object)
  name.vb: Equals(Object)
- uid: MonoTorrent.MerkleRoot.Equals(MonoTorrent.MerkleRoot)
  commentId: M:MonoTorrent.MerkleRoot.Equals(MonoTorrent.MerkleRoot)
  id: Equals(MonoTorrent.MerkleRoot)
  parent: MonoTorrent.MerkleRoot
  langs:
  - csharp
  - vb
  name: Equals(MerkleRoot)
  nameWithType: MerkleRoot.Equals(MerkleRoot)
  fullName: MonoTorrent.MerkleRoot.Equals(MonoTorrent.MerkleRoot)
  type: Method
  source:
    remote:
      path: MonoTorrent/src/MerkleRoot.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: Equals
    path: src/MerkleRoot.cs
    startLine: 66
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent
  summary: Indicates whether the current object is equal to another object of the same type.
  example: []
  syntax:
    content: public bool Equals(MerkleRoot other)
    parameters:
    - id: other
      type: MonoTorrent.MerkleRoot
      description: An object to compare with this object.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the current object is equal to the <code class="paramref">other</code> parameter; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Function Equals(other As MerkleRoot) As Boolean
  overload: MonoTorrent.MerkleRoot.Equals*
  implements:
  - System.IEquatable{MonoTorrent.MerkleRoot}.Equals(MonoTorrent.MerkleRoot)
- uid: MonoTorrent.MerkleRoot.GetHashCode
  commentId: M:MonoTorrent.MerkleRoot.GetHashCode
  id: GetHashCode
  parent: MonoTorrent.MerkleRoot
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: MerkleRoot.GetHashCode()
  fullName: MonoTorrent.MerkleRoot.GetHashCode()
  type: Method
  source:
    remote:
      path: MonoTorrent/src/MerkleRoot.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: GetHashCode
    path: src/MerkleRoot.cs
    startLine: 69
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent
  summary: Returns the hash code for this instance.
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: A 32-bit signed integer that is the hash code for this instance.
    content.vb: Public Overrides Function GetHashCode() As Integer
  overridden: System.ValueType.GetHashCode
  overload: MonoTorrent.MerkleRoot.GetHashCode*
- uid: MonoTorrent.MerkleRoot.op_Equality(MonoTorrent.MerkleRoot,MonoTorrent.MerkleRoot)
  commentId: M:MonoTorrent.MerkleRoot.op_Equality(MonoTorrent.MerkleRoot,MonoTorrent.MerkleRoot)
  id: op_Equality(MonoTorrent.MerkleRoot,MonoTorrent.MerkleRoot)
  parent: MonoTorrent.MerkleRoot
  langs:
  - csharp
  - vb
  name: operator ==(MerkleRoot, MerkleRoot)
  nameWithType: MerkleRoot.operator ==(MerkleRoot, MerkleRoot)
  fullName: MonoTorrent.MerkleRoot.operator ==(MonoTorrent.MerkleRoot, MonoTorrent.MerkleRoot)
  type: Operator
  source:
    remote:
      path: MonoTorrent/src/MerkleRoot.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: op_Equality
    path: src/MerkleRoot.cs
    startLine: 72
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent
  syntax:
    content: public static bool operator ==(MerkleRoot left, MerkleRoot right)
    parameters:
    - id: left
      type: MonoTorrent.MerkleRoot
    - id: right
      type: MonoTorrent.MerkleRoot
    return:
      type: System.Boolean
    content.vb: Public Shared Operator =(left As MerkleRoot, right As MerkleRoot) As Boolean
  overload: MonoTorrent.MerkleRoot.op_Equality*
  nameWithType.vb: MerkleRoot.=(MerkleRoot, MerkleRoot)
  fullName.vb: MonoTorrent.MerkleRoot.=(MonoTorrent.MerkleRoot, MonoTorrent.MerkleRoot)
  name.vb: =(MerkleRoot, MerkleRoot)
- uid: MonoTorrent.MerkleRoot.op_Inequality(MonoTorrent.MerkleRoot,MonoTorrent.MerkleRoot)
  commentId: M:MonoTorrent.MerkleRoot.op_Inequality(MonoTorrent.MerkleRoot,MonoTorrent.MerkleRoot)
  id: op_Inequality(MonoTorrent.MerkleRoot,MonoTorrent.MerkleRoot)
  parent: MonoTorrent.MerkleRoot
  langs:
  - csharp
  - vb
  name: operator !=(MerkleRoot, MerkleRoot)
  nameWithType: MerkleRoot.operator !=(MerkleRoot, MerkleRoot)
  fullName: MonoTorrent.MerkleRoot.operator !=(MonoTorrent.MerkleRoot, MonoTorrent.MerkleRoot)
  type: Operator
  source:
    remote:
      path: MonoTorrent/src/MerkleRoot.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: op_Inequality
    path: src/MerkleRoot.cs
    startLine: 75
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent
  syntax:
    content: public static bool operator !=(MerkleRoot left, MerkleRoot right)
    parameters:
    - id: left
      type: MonoTorrent.MerkleRoot
    - id: right
      type: MonoTorrent.MerkleRoot
    return:
      type: System.Boolean
    content.vb: Public Shared Operator <>(left As MerkleRoot, right As MerkleRoot) As Boolean
  overload: MonoTorrent.MerkleRoot.op_Inequality*
  nameWithType.vb: MerkleRoot.<>(MerkleRoot, MerkleRoot)
  fullName.vb: MonoTorrent.MerkleRoot.<>(MonoTorrent.MerkleRoot, MonoTorrent.MerkleRoot)
  name.vb: <>(MerkleRoot, MerkleRoot)
references:
- uid: MonoTorrent
  commentId: N:MonoTorrent
  href: MonoTorrent.html
  name: MonoTorrent
  nameWithType: MonoTorrent
  fullName: MonoTorrent
- uid: System.IEquatable{MonoTorrent.MerkleRoot}
  commentId: T:System.IEquatable{MonoTorrent.MerkleRoot}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<MerkleRoot>
  nameWithType: IEquatable<MerkleRoot>
  fullName: System.IEquatable<MonoTorrent.MerkleRoot>
  nameWithType.vb: IEquatable(Of MerkleRoot)
  fullName.vb: System.IEquatable(Of MonoTorrent.MerkleRoot)
  name.vb: IEquatable(Of MerkleRoot)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: MonoTorrent.MerkleRoot
    name: MerkleRoot
    href: MonoTorrent.MerkleRoot.html
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: MonoTorrent.MerkleRoot
    name: MerkleRoot
    href: MonoTorrent.MerkleRoot.html
  - name: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: MonoTorrent.MerkleRoot.Empty*
  commentId: Overload:MonoTorrent.MerkleRoot.Empty
  href: MonoTorrent.MerkleRoot.html#MonoTorrent_MerkleRoot_Empty
  name: Empty
  nameWithType: MerkleRoot.Empty
  fullName: MonoTorrent.MerkleRoot.Empty
- uid: MonoTorrent.MerkleRoot
  commentId: T:MonoTorrent.MerkleRoot
  parent: MonoTorrent
  href: MonoTorrent.MerkleRoot.html
  name: MerkleRoot
  nameWithType: MerkleRoot
  fullName: MonoTorrent.MerkleRoot
- uid: MonoTorrent.MerkleRoot.FromMemory*
  commentId: Overload:MonoTorrent.MerkleRoot.FromMemory
  href: MonoTorrent.MerkleRoot.html#MonoTorrent_MerkleRoot_FromMemory_System_ReadOnlyMemory_System_Byte__
  name: FromMemory
  nameWithType: MerkleRoot.FromMemory
  fullName: MonoTorrent.MerkleRoot.FromMemory
- uid: System.ReadOnlyMemory{System.Byte}
  commentId: T:System.ReadOnlyMemory{System.Byte}
  parent: System
  definition: System.ReadOnlyMemory`1
  href: https://learn.microsoft.com/dotnet/api/system.readonlymemory-1
  name: ReadOnlyMemory<byte>
  nameWithType: ReadOnlyMemory<byte>
  fullName: System.ReadOnlyMemory<byte>
  nameWithType.vb: ReadOnlyMemory(Of Byte)
  fullName.vb: System.ReadOnlyMemory(Of Byte)
  name.vb: ReadOnlyMemory(Of Byte)
  spec.csharp:
  - uid: System.ReadOnlyMemory`1
    name: ReadOnlyMemory
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlymemory-1
  - name: <
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '>'
  spec.vb:
  - uid: System.ReadOnlyMemory`1
    name: ReadOnlyMemory
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlymemory-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: )
- uid: System.ReadOnlyMemory`1
  commentId: T:System.ReadOnlyMemory`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.readonlymemory-1
  name: ReadOnlyMemory<T>
  nameWithType: ReadOnlyMemory<T>
  fullName: System.ReadOnlyMemory<T>
  nameWithType.vb: ReadOnlyMemory(Of T)
  fullName.vb: System.ReadOnlyMemory(Of T)
  name.vb: ReadOnlyMemory(Of T)
  spec.csharp:
  - uid: System.ReadOnlyMemory`1
    name: ReadOnlyMemory
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlymemory-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.ReadOnlyMemory`1
    name: ReadOnlyMemory
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlymemory-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: MonoTorrent.MerkleRoot.IsEmpty*
  commentId: Overload:MonoTorrent.MerkleRoot.IsEmpty
  href: MonoTorrent.MerkleRoot.html#MonoTorrent_MerkleRoot_IsEmpty
  name: IsEmpty
  nameWithType: MerkleRoot.IsEmpty
  fullName: MonoTorrent.MerkleRoot.IsEmpty
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: MonoTorrent.MerkleRoot.Span*
  commentId: Overload:MonoTorrent.MerkleRoot.Span
  href: MonoTorrent.MerkleRoot.html#MonoTorrent_MerkleRoot_Span
  name: Span
  nameWithType: MerkleRoot.Span
  fullName: MonoTorrent.MerkleRoot.Span
- uid: System.ReadOnlySpan{System.Byte}
  commentId: T:System.ReadOnlySpan{System.Byte}
  parent: System
  definition: System.ReadOnlySpan`1
  href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  name: ReadOnlySpan<byte>
  nameWithType: ReadOnlySpan<byte>
  fullName: System.ReadOnlySpan<byte>
  nameWithType.vb: ReadOnlySpan(Of Byte)
  fullName.vb: System.ReadOnlySpan(Of Byte)
  name.vb: ReadOnlySpan(Of Byte)
  spec.csharp:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: <
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '>'
  spec.vb:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: )
- uid: System.ReadOnlySpan`1
  commentId: T:System.ReadOnlySpan`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  name: ReadOnlySpan<T>
  nameWithType: ReadOnlySpan<T>
  fullName: System.ReadOnlySpan<T>
  nameWithType.vb: ReadOnlySpan(Of T)
  fullName.vb: System.ReadOnlySpan(Of T)
  name.vb: ReadOnlySpan(Of T)
  spec.csharp:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: MonoTorrent.MerkleRoot.#ctor*
  commentId: Overload:MonoTorrent.MerkleRoot.#ctor
  href: MonoTorrent.MerkleRoot.html#MonoTorrent_MerkleRoot__ctor_System_Span_System_Byte__
  name: MerkleRoot
  nameWithType: MerkleRoot.MerkleRoot
  fullName: MonoTorrent.MerkleRoot.MerkleRoot
  nameWithType.vb: MerkleRoot.New
  fullName.vb: MonoTorrent.MerkleRoot.New
  name.vb: New
- uid: System.Span{System.Byte}
  commentId: T:System.Span{System.Byte}
  parent: System
  definition: System.Span`1
  href: https://learn.microsoft.com/dotnet/api/system.span-1
  name: Span<byte>
  nameWithType: Span<byte>
  fullName: System.Span<byte>
  nameWithType.vb: Span(Of Byte)
  fullName.vb: System.Span(Of Byte)
  name.vb: Span(Of Byte)
  spec.csharp:
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: <
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '>'
  spec.vb:
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: )
- uid: System.Span`1
  commentId: T:System.Span`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.span-1
  name: Span<T>
  nameWithType: Span<T>
  fullName: System.Span<T>
  nameWithType.vb: Span(Of T)
  fullName.vb: System.Span(Of T)
  name.vb: Span(Of T)
  spec.csharp:
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: MonoTorrent.MerkleRoot.AsMemory*
  commentId: Overload:MonoTorrent.MerkleRoot.AsMemory
  href: MonoTorrent.MerkleRoot.html#MonoTorrent_MerkleRoot_AsMemory
  name: AsMemory
  nameWithType: MerkleRoot.AsMemory
  fullName: MonoTorrent.MerkleRoot.AsMemory
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  name: Equals(object)
  nameWithType: ValueType.Equals(object)
  fullName: System.ValueType.Equals(object)
  nameWithType.vb: ValueType.Equals(Object)
  fullName.vb: System.ValueType.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: MonoTorrent.MerkleRoot.Equals*
  commentId: Overload:MonoTorrent.MerkleRoot.Equals
  href: MonoTorrent.MerkleRoot.html#MonoTorrent_MerkleRoot_Equals_System_Object_
  name: Equals
  nameWithType: MerkleRoot.Equals
  fullName: MonoTorrent.MerkleRoot.Equals
- uid: System.IEquatable{MonoTorrent.MerkleRoot}.Equals(MonoTorrent.MerkleRoot)
  commentId: M:System.IEquatable{MonoTorrent.MerkleRoot}.Equals(MonoTorrent.MerkleRoot)
  parent: System.IEquatable{MonoTorrent.MerkleRoot}
  definition: System.IEquatable`1.Equals(`0)
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(MerkleRoot)
  nameWithType: IEquatable<MerkleRoot>.Equals(MerkleRoot)
  fullName: System.IEquatable<MonoTorrent.MerkleRoot>.Equals(MonoTorrent.MerkleRoot)
  nameWithType.vb: IEquatable(Of MerkleRoot).Equals(MerkleRoot)
  fullName.vb: System.IEquatable(Of MonoTorrent.MerkleRoot).Equals(MonoTorrent.MerkleRoot)
  spec.csharp:
  - uid: System.IEquatable{MonoTorrent.MerkleRoot}.Equals(MonoTorrent.MerkleRoot)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: MonoTorrent.MerkleRoot
    name: MerkleRoot
    href: MonoTorrent.MerkleRoot.html
  - name: )
  spec.vb:
  - uid: System.IEquatable{MonoTorrent.MerkleRoot}.Equals(MonoTorrent.MerkleRoot)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: MonoTorrent.MerkleRoot
    name: MerkleRoot
    href: MonoTorrent.MerkleRoot.html
  - name: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
- uid: MonoTorrent.MerkleRoot.GetHashCode*
  commentId: Overload:MonoTorrent.MerkleRoot.GetHashCode
  href: MonoTorrent.MerkleRoot.html#MonoTorrent_MerkleRoot_GetHashCode
  name: GetHashCode
  nameWithType: MerkleRoot.GetHashCode
  fullName: MonoTorrent.MerkleRoot.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: MonoTorrent.MerkleRoot.op_Equality*
  commentId: Overload:MonoTorrent.MerkleRoot.op_Equality
  href: MonoTorrent.MerkleRoot.html#MonoTorrent_MerkleRoot_op_Equality_MonoTorrent_MerkleRoot_MonoTorrent_MerkleRoot_
  name: operator ==
  nameWithType: MerkleRoot.operator ==
  fullName: MonoTorrent.MerkleRoot.operator ==
  nameWithType.vb: MerkleRoot.=
  fullName.vb: MonoTorrent.MerkleRoot.=
  name.vb: =
  spec.csharp:
  - name: operator
  - name: " "
  - uid: MonoTorrent.MerkleRoot.op_Equality*
    name: ==
    href: MonoTorrent.MerkleRoot.html#MonoTorrent_MerkleRoot_op_Equality_MonoTorrent_MerkleRoot_MonoTorrent_MerkleRoot_
- uid: MonoTorrent.MerkleRoot.op_Inequality*
  commentId: Overload:MonoTorrent.MerkleRoot.op_Inequality
  href: MonoTorrent.MerkleRoot.html#MonoTorrent_MerkleRoot_op_Inequality_MonoTorrent_MerkleRoot_MonoTorrent_MerkleRoot_
  name: operator !=
  nameWithType: MerkleRoot.operator !=
  fullName: MonoTorrent.MerkleRoot.operator !=
  nameWithType.vb: MerkleRoot.<>
  fullName.vb: MonoTorrent.MerkleRoot.<>
  name.vb: <>
  spec.csharp:
  - name: operator
  - name: " "
  - uid: MonoTorrent.MerkleRoot.op_Inequality*
    name: '!='
    href: MonoTorrent.MerkleRoot.html#MonoTorrent_MerkleRoot_op_Inequality_MonoTorrent_MerkleRoot_MonoTorrent_MerkleRoot_
