### YamlMime:ManagedReference
items:
- uid: MonoTorrent.TrackerServer.TrackerServer
  commentId: T:MonoTorrent.TrackerServer.TrackerServer
  id: TrackerServer
  parent: MonoTorrent.TrackerServer
  children:
  - MonoTorrent.TrackerServer.TrackerServer.#ctor
  - MonoTorrent.TrackerServer.TrackerServer.#ctor(MonoTorrent.BEncoding.BEncodedString)
  - MonoTorrent.TrackerServer.TrackerServer.Add(MonoTorrent.TrackerServer.ITrackable)
  - MonoTorrent.TrackerServer.TrackerServer.Add(MonoTorrent.TrackerServer.ITrackable,MonoTorrent.TrackerServer.IPeerComparer)
  - MonoTorrent.TrackerServer.TrackerServer.AllowNonCompact
  - MonoTorrent.TrackerServer.TrackerServer.AllowScrape
  - MonoTorrent.TrackerServer.TrackerServer.AllowUnregisteredTorrents
  - MonoTorrent.TrackerServer.TrackerServer.AnnounceInterval
  - MonoTorrent.TrackerServer.TrackerServer.Contains(MonoTorrent.TrackerServer.ITrackable)
  - MonoTorrent.TrackerServer.TrackerServer.Count
  - MonoTorrent.TrackerServer.TrackerServer.Dispose
  - MonoTorrent.TrackerServer.TrackerServer.Disposed
  - MonoTorrent.TrackerServer.TrackerServer.GetTrackerItem(MonoTorrent.TrackerServer.ITrackable)
  - MonoTorrent.TrackerServer.TrackerServer.GetTrackerItems
  - MonoTorrent.TrackerServer.TrackerServer.IsRegistered(MonoTorrent.Connections.TrackerServer.ITrackerListener)
  - MonoTorrent.TrackerServer.TrackerServer.MinAnnounceInterval
  - MonoTorrent.TrackerServer.TrackerServer.PeerAnnounced
  - MonoTorrent.TrackerServer.TrackerServer.PeerScraped
  - MonoTorrent.TrackerServer.TrackerServer.PeerTimedOut
  - MonoTorrent.TrackerServer.TrackerServer.RegisterListener(MonoTorrent.Connections.TrackerServer.ITrackerListener)
  - MonoTorrent.TrackerServer.TrackerServer.Remove(MonoTorrent.TrackerServer.ITrackable)
  - MonoTorrent.TrackerServer.TrackerServer.Requests
  - MonoTorrent.TrackerServer.TrackerServer.TimeoutInterval
  - MonoTorrent.TrackerServer.TrackerServer.TrackerId
  - MonoTorrent.TrackerServer.TrackerServer.UnregisterListener(MonoTorrent.Connections.TrackerServer.ITrackerListener)
  langs:
  - csharp
  - vb
  name: TrackerServer
  nameWithType: TrackerServer
  fullName: MonoTorrent.TrackerServer.TrackerServer
  type: Class
  source:
    remote:
      path: MonoTorrent/src/TrackerServer/TrackerServer.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: TrackerServer
    path: src/TrackerServer/TrackerServer.cs
    startLine: 38
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.TrackerServer
  syntax:
    content: 'public class TrackerServer : IDisposable'
    content.vb: Public Class TrackerServer Implements IDisposable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: MonoTorrent.TrackerServer.TrackerServer.PeerAnnounced
  commentId: E:MonoTorrent.TrackerServer.TrackerServer.PeerAnnounced
  id: PeerAnnounced
  parent: MonoTorrent.TrackerServer.TrackerServer
  langs:
  - csharp
  - vb
  name: PeerAnnounced
  nameWithType: TrackerServer.PeerAnnounced
  fullName: MonoTorrent.TrackerServer.TrackerServer.PeerAnnounced
  type: Event
  source:
    remote:
      path: MonoTorrent/src/TrackerServer/TrackerServer.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: PeerAnnounced
    path: src/TrackerServer/TrackerServer.cs
    startLine: 60
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.TrackerServer
  syntax:
    content: public event EventHandler<AnnounceEventArgs>? PeerAnnounced
    return:
      type: System.EventHandler{MonoTorrent.TrackerServer.AnnounceEventArgs}
    content.vb: Public Event PeerAnnounced As EventHandler(Of AnnounceEventArgs)
- uid: MonoTorrent.TrackerServer.TrackerServer.PeerScraped
  commentId: E:MonoTorrent.TrackerServer.TrackerServer.PeerScraped
  id: PeerScraped
  parent: MonoTorrent.TrackerServer.TrackerServer
  langs:
  - csharp
  - vb
  name: PeerScraped
  nameWithType: TrackerServer.PeerScraped
  fullName: MonoTorrent.TrackerServer.TrackerServer.PeerScraped
  type: Event
  source:
    remote:
      path: MonoTorrent/src/TrackerServer/TrackerServer.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: PeerScraped
    path: src/TrackerServer/TrackerServer.cs
    startLine: 61
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.TrackerServer
  syntax:
    content: public event EventHandler<ScrapeEventArgs>? PeerScraped
    return:
      type: System.EventHandler{MonoTorrent.TrackerServer.ScrapeEventArgs}
    content.vb: Public Event PeerScraped As EventHandler(Of ScrapeEventArgs)
- uid: MonoTorrent.TrackerServer.TrackerServer.PeerTimedOut
  commentId: E:MonoTorrent.TrackerServer.TrackerServer.PeerTimedOut
  id: PeerTimedOut
  parent: MonoTorrent.TrackerServer.TrackerServer
  langs:
  - csharp
  - vb
  name: PeerTimedOut
  nameWithType: TrackerServer.PeerTimedOut
  fullName: MonoTorrent.TrackerServer.TrackerServer.PeerTimedOut
  type: Event
  source:
    remote:
      path: MonoTorrent/src/TrackerServer/TrackerServer.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: PeerTimedOut
    path: src/TrackerServer/TrackerServer.cs
    startLine: 62
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.TrackerServer
  syntax:
    content: public event EventHandler<TimedOutEventArgs>? PeerTimedOut
    return:
      type: System.EventHandler{MonoTorrent.TrackerServer.TimedOutEventArgs}
    content.vb: Public Event PeerTimedOut As EventHandler(Of TimedOutEventArgs)
- uid: MonoTorrent.TrackerServer.TrackerServer.AllowNonCompact
  commentId: P:MonoTorrent.TrackerServer.TrackerServer.AllowNonCompact
  id: AllowNonCompact
  parent: MonoTorrent.TrackerServer.TrackerServer
  langs:
  - csharp
  - vb
  name: AllowNonCompact
  nameWithType: TrackerServer.AllowNonCompact
  fullName: MonoTorrent.TrackerServer.TrackerServer.AllowNonCompact
  type: Property
  source:
    remote:
      path: MonoTorrent/src/TrackerServer/TrackerServer.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: AllowNonCompact
    path: src/TrackerServer/TrackerServer.cs
    startLine: 68
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.TrackerServer
  summary: >-
    If this false then all Announce requests which require non-compact peer encoding will

    be fulfilled by returning an error response. Defaults to <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a>.
  example: []
  syntax:
    content: public bool AllowNonCompact { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property AllowNonCompact As Boolean
  overload: MonoTorrent.TrackerServer.TrackerServer.AllowNonCompact*
- uid: MonoTorrent.TrackerServer.TrackerServer.AllowScrape
  commentId: P:MonoTorrent.TrackerServer.TrackerServer.AllowScrape
  id: AllowScrape
  parent: MonoTorrent.TrackerServer.TrackerServer
  langs:
  - csharp
  - vb
  name: AllowScrape
  nameWithType: TrackerServer.AllowScrape
  fullName: MonoTorrent.TrackerServer.TrackerServer.AllowScrape
  type: Property
  source:
    remote:
      path: MonoTorrent/src/TrackerServer/TrackerServer.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: AllowScrape
    path: src/TrackerServer/TrackerServer.cs
    startLine: 74
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.TrackerServer
  summary: >-
    If this is false then any Scrape requests will be fulfilled by returning an error response.

    Defaults to <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a>.
  example: []
  syntax:
    content: public bool AllowScrape { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property AllowScrape As Boolean
  overload: MonoTorrent.TrackerServer.TrackerServer.AllowScrape*
- uid: MonoTorrent.TrackerServer.TrackerServer.AllowUnregisteredTorrents
  commentId: P:MonoTorrent.TrackerServer.TrackerServer.AllowUnregisteredTorrents
  id: AllowUnregisteredTorrents
  parent: MonoTorrent.TrackerServer.TrackerServer
  langs:
  - csharp
  - vb
  name: AllowUnregisteredTorrents
  nameWithType: TrackerServer.AllowUnregisteredTorrents
  fullName: MonoTorrent.TrackerServer.TrackerServer.AllowUnregisteredTorrents
  type: Property
  source:
    remote:
      path: MonoTorrent/src/TrackerServer/TrackerServer.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: AllowUnregisteredTorrents
    path: src/TrackerServer/TrackerServer.cs
    startLine: 82
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.TrackerServer
  summary: >-
    If this is true then the tracker will add any infohash to it's table as soon as the first

    Announce request is received. If it is false, an error response will be sent for any Announce

    or Scrape request which queries an infohash which has not been pre-registered with the tracker.

    Defaults to <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
  example: []
  syntax:
    content: public bool AllowUnregisteredTorrents { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property AllowUnregisteredTorrents As Boolean
  overload: MonoTorrent.TrackerServer.TrackerServer.AllowUnregisteredTorrents*
- uid: MonoTorrent.TrackerServer.TrackerServer.AnnounceInterval
  commentId: P:MonoTorrent.TrackerServer.TrackerServer.AnnounceInterval
  id: AnnounceInterval
  parent: MonoTorrent.TrackerServer.TrackerServer
  langs:
  - csharp
  - vb
  name: AnnounceInterval
  nameWithType: TrackerServer.AnnounceInterval
  fullName: MonoTorrent.TrackerServer.TrackerServer.AnnounceInterval
  type: Property
  source:
    remote:
      path: MonoTorrent/src/TrackerServer/TrackerServer.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: AnnounceInterval
    path: src/TrackerServer/TrackerServer.cs
    startLine: 88
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.TrackerServer
  summary: >-
    This is the regular interval in which peers should re-announce. It should be less than 1/2 the Timeout interval so

    peers must miss two announce before timing out. Defaults to 45 minutes.
  example: []
  syntax:
    content: public TimeSpan AnnounceInterval { get; set; }
    parameters: []
    return:
      type: System.TimeSpan
    content.vb: Public Property AnnounceInterval As TimeSpan
  overload: MonoTorrent.TrackerServer.TrackerServer.AnnounceInterval*
- uid: MonoTorrent.TrackerServer.TrackerServer.Count
  commentId: P:MonoTorrent.TrackerServer.TrackerServer.Count
  id: Count
  parent: MonoTorrent.TrackerServer.TrackerServer
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: TrackerServer.Count
  fullName: MonoTorrent.TrackerServer.TrackerServer.Count
  type: Property
  source:
    remote:
      path: MonoTorrent/src/TrackerServer/TrackerServer.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: Count
    path: src/TrackerServer/TrackerServer.cs
    startLine: 93
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.TrackerServer
  summary: The number of torrents being tracked
  example: []
  syntax:
    content: public int Count { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Count As Integer
  overload: MonoTorrent.TrackerServer.TrackerServer.Count*
- uid: MonoTorrent.TrackerServer.TrackerServer.Disposed
  commentId: P:MonoTorrent.TrackerServer.TrackerServer.Disposed
  id: Disposed
  parent: MonoTorrent.TrackerServer.TrackerServer
  langs:
  - csharp
  - vb
  name: Disposed
  nameWithType: TrackerServer.Disposed
  fullName: MonoTorrent.TrackerServer.TrackerServer.Disposed
  type: Property
  source:
    remote:
      path: MonoTorrent/src/TrackerServer/TrackerServer.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: Disposed
    path: src/TrackerServer/TrackerServer.cs
    startLine: 98
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.TrackerServer
  summary: True if the tracker has been disposed.
  example: []
  syntax:
    content: public bool Disposed { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Disposed As Boolean
  overload: MonoTorrent.TrackerServer.TrackerServer.Disposed*
- uid: MonoTorrent.TrackerServer.TrackerServer.MinAnnounceInterval
  commentId: P:MonoTorrent.TrackerServer.TrackerServer.MinAnnounceInterval
  id: MinAnnounceInterval
  parent: MonoTorrent.TrackerServer.TrackerServer
  langs:
  - csharp
  - vb
  name: MinAnnounceInterval
  nameWithType: TrackerServer.MinAnnounceInterval
  fullName: MonoTorrent.TrackerServer.TrackerServer.MinAnnounceInterval
  type: Property
  source:
    remote:
      path: MonoTorrent/src/TrackerServer/TrackerServer.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: MinAnnounceInterval
    path: src/TrackerServer/TrackerServer.cs
    startLine: 104
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.TrackerServer
  summary: >-
    This is the minimum time between Announce. No peer should announce more frequently than this.

    Defaults to 10 minutes.
  example: []
  syntax:
    content: public TimeSpan MinAnnounceInterval { get; set; }
    parameters: []
    return:
      type: System.TimeSpan
    content.vb: Public Property MinAnnounceInterval As TimeSpan
  overload: MonoTorrent.TrackerServer.TrackerServer.MinAnnounceInterval*
- uid: MonoTorrent.TrackerServer.TrackerServer.Requests
  commentId: P:MonoTorrent.TrackerServer.TrackerServer.Requests
  id: Requests
  parent: MonoTorrent.TrackerServer.TrackerServer
  langs:
  - csharp
  - vb
  name: Requests
  nameWithType: TrackerServer.Requests
  fullName: MonoTorrent.TrackerServer.TrackerServer.Requests
  type: Property
  source:
    remote:
      path: MonoTorrent/src/TrackerServer/TrackerServer.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: Requests
    path: src/TrackerServer/TrackerServer.cs
    startLine: 109
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.TrackerServer
  summary: Tracks the number of Announce and Scrape requests, and the requests per second.
  example: []
  syntax:
    content: public RequestMonitor Requests { get; }
    parameters: []
    return:
      type: MonoTorrent.TrackerServer.RequestMonitor
    content.vb: Public ReadOnly Property Requests As RequestMonitor
  overload: MonoTorrent.TrackerServer.TrackerServer.Requests*
- uid: MonoTorrent.TrackerServer.TrackerServer.TimeoutInterval
  commentId: P:MonoTorrent.TrackerServer.TrackerServer.TimeoutInterval
  id: TimeoutInterval
  parent: MonoTorrent.TrackerServer.TrackerServer
  langs:
  - csharp
  - vb
  name: TimeoutInterval
  nameWithType: TrackerServer.TimeoutInterval
  fullName: MonoTorrent.TrackerServer.TrackerServer.TimeoutInterval
  type: Property
  source:
    remote:
      path: MonoTorrent/src/TrackerServer/TrackerServer.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: TimeoutInterval
    path: src/TrackerServer/TrackerServer.cs
    startLine: 115
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.TrackerServer
  summary: >-
    This is the amount of time that has to elapse since an Announce or Scrape request until a peer is

    considered offline and is removed from the list. Defaults to 50 minutes.
  example: []
  syntax:
    content: public TimeSpan TimeoutInterval { get; set; }
    parameters: []
    return:
      type: System.TimeSpan
    content.vb: Public Property TimeoutInterval As TimeSpan
  overload: MonoTorrent.TrackerServer.TrackerServer.TimeoutInterval*
- uid: MonoTorrent.TrackerServer.TrackerServer.TrackerId
  commentId: P:MonoTorrent.TrackerServer.TrackerServer.TrackerId
  id: TrackerId
  parent: MonoTorrent.TrackerServer.TrackerServer
  langs:
  - csharp
  - vb
  name: TrackerId
  nameWithType: TrackerServer.TrackerId
  fullName: MonoTorrent.TrackerServer.TrackerServer.TrackerId
  type: Property
  source:
    remote:
      path: MonoTorrent/src/TrackerServer/TrackerServer.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: TrackerId
    path: src/TrackerServer/TrackerServer.cs
    startLine: 122
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.TrackerServer
  summary: >-
    The unique identifier for this tracker. It should be considered an arbitrary string with no

    specific meaning, but by default it is of the form "MO1234-{random positive integer}" to allow the

    tracker to be identified.
  example: []
  syntax:
    content: public BEncodedString TrackerId { get; }
    parameters: []
    return:
      type: MonoTorrent.BEncoding.BEncodedString
    content.vb: Public ReadOnly Property TrackerId As BEncodedString
  overload: MonoTorrent.TrackerServer.TrackerServer.TrackerId*
- uid: MonoTorrent.TrackerServer.TrackerServer.#ctor
  commentId: M:MonoTorrent.TrackerServer.TrackerServer.#ctor
  id: '#ctor'
  parent: MonoTorrent.TrackerServer.TrackerServer
  langs:
  - csharp
  - vb
  name: TrackerServer()
  nameWithType: TrackerServer.TrackerServer()
  fullName: MonoTorrent.TrackerServer.TrackerServer.TrackerServer()
  type: Constructor
  source:
    remote:
      path: MonoTorrent/src/TrackerServer/TrackerServer.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: .ctor
    path: src/TrackerServer/TrackerServer.cs
    startLine: 137
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.TrackerServer
  summary: Creates a new tracker using an autogenerated unique identifier as the <xref href="MonoTorrent.TrackerServer.TrackerServer.TrackerId" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public TrackerServer()
    content.vb: Public Sub New()
  overload: MonoTorrent.TrackerServer.TrackerServer.#ctor*
  nameWithType.vb: TrackerServer.New()
  fullName.vb: MonoTorrent.TrackerServer.TrackerServer.New()
  name.vb: New()
- uid: MonoTorrent.TrackerServer.TrackerServer.#ctor(MonoTorrent.BEncoding.BEncodedString)
  commentId: M:MonoTorrent.TrackerServer.TrackerServer.#ctor(MonoTorrent.BEncoding.BEncodedString)
  id: '#ctor(MonoTorrent.BEncoding.BEncodedString)'
  parent: MonoTorrent.TrackerServer.TrackerServer
  langs:
  - csharp
  - vb
  name: TrackerServer(BEncodedString)
  nameWithType: TrackerServer.TrackerServer(BEncodedString)
  fullName: MonoTorrent.TrackerServer.TrackerServer.TrackerServer(MonoTorrent.BEncoding.BEncodedString)
  type: Constructor
  source:
    remote:
      path: MonoTorrent/src/TrackerServer/TrackerServer.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: .ctor
    path: src/TrackerServer/TrackerServer.cs
    startLine: 147
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.TrackerServer
  summary: Creates a new tracker
  example: []
  syntax:
    content: public TrackerServer(BEncodedString trackerId)
    parameters:
    - id: trackerId
      type: MonoTorrent.BEncoding.BEncodedString
      description: The unique identifier to use as the <xref href="MonoTorrent.TrackerServer.TrackerServer.TrackerId" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Sub New(trackerId As BEncodedString)
  overload: MonoTorrent.TrackerServer.TrackerServer.#ctor*
  nameWithType.vb: TrackerServer.New(BEncodedString)
  fullName.vb: MonoTorrent.TrackerServer.TrackerServer.New(MonoTorrent.BEncoding.BEncodedString)
  name.vb: New(BEncodedString)
- uid: MonoTorrent.TrackerServer.TrackerServer.Add(MonoTorrent.TrackerServer.ITrackable)
  commentId: M:MonoTorrent.TrackerServer.TrackerServer.Add(MonoTorrent.TrackerServer.ITrackable)
  id: Add(MonoTorrent.TrackerServer.ITrackable)
  parent: MonoTorrent.TrackerServer.TrackerServer
  langs:
  - csharp
  - vb
  name: Add(ITrackable)
  nameWithType: TrackerServer.Add(ITrackable)
  fullName: MonoTorrent.TrackerServer.TrackerServer.Add(MonoTorrent.TrackerServer.ITrackable)
  type: Method
  source:
    remote:
      path: MonoTorrent/src/TrackerServer/TrackerServer.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: Add
    path: src/TrackerServer/TrackerServer.cs
    startLine: 171
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.TrackerServer
  summary: Adds the trackable to the tracker. Peers will be compared for equality based on their PeerId.
  example: []
  syntax:
    content: public bool Add(ITrackable trackable)
    parameters:
    - id: trackable
      type: MonoTorrent.TrackerServer.ITrackable
      description: The trackable to add
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function Add(trackable As ITrackable) As Boolean
  overload: MonoTorrent.TrackerServer.TrackerServer.Add*
- uid: MonoTorrent.TrackerServer.TrackerServer.Add(MonoTorrent.TrackerServer.ITrackable,MonoTorrent.TrackerServer.IPeerComparer)
  commentId: M:MonoTorrent.TrackerServer.TrackerServer.Add(MonoTorrent.TrackerServer.ITrackable,MonoTorrent.TrackerServer.IPeerComparer)
  id: Add(MonoTorrent.TrackerServer.ITrackable,MonoTorrent.TrackerServer.IPeerComparer)
  parent: MonoTorrent.TrackerServer.TrackerServer
  langs:
  - csharp
  - vb
  name: Add(ITrackable, IPeerComparer)
  nameWithType: TrackerServer.Add(ITrackable, IPeerComparer)
  fullName: MonoTorrent.TrackerServer.TrackerServer.Add(MonoTorrent.TrackerServer.ITrackable, MonoTorrent.TrackerServer.IPeerComparer)
  type: Method
  source:
    remote:
      path: MonoTorrent/src/TrackerServer/TrackerServer.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: Add
    path: src/TrackerServer/TrackerServer.cs
    startLine: 182
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.TrackerServer
  summary: Adds the trackable to the server
  example: []
  syntax:
    content: public bool Add(ITrackable trackable, IPeerComparer comparer)
    parameters:
    - id: trackable
      type: MonoTorrent.TrackerServer.ITrackable
      description: The trackable to add
    - id: comparer
      type: MonoTorrent.TrackerServer.IPeerComparer
      description: The comparer used to decide whether two peers are the same.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function Add(trackable As ITrackable, comparer As IPeerComparer) As Boolean
  overload: MonoTorrent.TrackerServer.TrackerServer.Add*
- uid: MonoTorrent.TrackerServer.TrackerServer.Contains(MonoTorrent.TrackerServer.ITrackable)
  commentId: M:MonoTorrent.TrackerServer.TrackerServer.Contains(MonoTorrent.TrackerServer.ITrackable)
  id: Contains(MonoTorrent.TrackerServer.ITrackable)
  parent: MonoTorrent.TrackerServer.TrackerServer
  langs:
  - csharp
  - vb
  name: Contains(ITrackable)
  nameWithType: TrackerServer.Contains(ITrackable)
  fullName: MonoTorrent.TrackerServer.TrackerServer.Contains(MonoTorrent.TrackerServer.ITrackable)
  type: Method
  source:
    remote:
      path: MonoTorrent/src/TrackerServer/TrackerServer.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: Contains
    path: src/TrackerServer/TrackerServer.cs
    startLine: 219
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.TrackerServer
  summary: Checks if the InfoHash associated with the given trackable has been registered with the tracker.
  example: []
  syntax:
    content: public bool Contains(ITrackable trackable)
    parameters:
    - id: trackable
      type: MonoTorrent.TrackerServer.ITrackable
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function Contains(trackable As ITrackable) As Boolean
  overload: MonoTorrent.TrackerServer.TrackerServer.Contains*
- uid: MonoTorrent.TrackerServer.TrackerServer.GetTrackerItem(MonoTorrent.TrackerServer.ITrackable)
  commentId: M:MonoTorrent.TrackerServer.TrackerServer.GetTrackerItem(MonoTorrent.TrackerServer.ITrackable)
  id: GetTrackerItem(MonoTorrent.TrackerServer.ITrackable)
  parent: MonoTorrent.TrackerServer.TrackerServer
  langs:
  - csharp
  - vb
  name: GetTrackerItem(ITrackable)
  nameWithType: TrackerServer.GetTrackerItem(ITrackable)
  fullName: MonoTorrent.TrackerServer.TrackerServer.GetTrackerItem(MonoTorrent.TrackerServer.ITrackable)
  type: Method
  source:
    remote:
      path: MonoTorrent/src/TrackerServer/TrackerServer.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: GetTrackerItem
    path: src/TrackerServer/TrackerServer.cs
    startLine: 235
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.TrackerServer
  summary: >-
    Returns the manager associated with the given trackable. If the trackable has not been registered

    with this tracker then null will be returned.
  example: []
  syntax:
    content: public ITrackerItem? GetTrackerItem(ITrackable trackable)
    parameters:
    - id: trackable
      type: MonoTorrent.TrackerServer.ITrackable
      description: ''
    return:
      type: MonoTorrent.TrackerServer.ITrackerItem
      description: ''
    content.vb: Public Function GetTrackerItem(trackable As ITrackable) As ITrackerItem
  overload: MonoTorrent.TrackerServer.TrackerServer.GetTrackerItem*
- uid: MonoTorrent.TrackerServer.TrackerServer.GetTrackerItems
  commentId: M:MonoTorrent.TrackerServer.TrackerServer.GetTrackerItems
  id: GetTrackerItems
  parent: MonoTorrent.TrackerServer.TrackerServer
  langs:
  - csharp
  - vb
  name: GetTrackerItems()
  nameWithType: TrackerServer.GetTrackerItems()
  fullName: MonoTorrent.TrackerServer.TrackerServer.GetTrackerItems()
  type: Method
  source:
    remote:
      path: MonoTorrent/src/TrackerServer/TrackerServer.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: GetTrackerItems
    path: src/TrackerServer/TrackerServer.cs
    startLine: 251
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.TrackerServer
  summary: Returns a duplicate of the list of active torrents
  example: []
  syntax:
    content: public List<ITrackerItem> GetTrackerItems()
    return:
      type: System.Collections.Generic.List{MonoTorrent.TrackerServer.ITrackerItem}
    content.vb: Public Function GetTrackerItems() As List(Of ITrackerItem)
  overload: MonoTorrent.TrackerServer.TrackerServer.GetTrackerItems*
- uid: MonoTorrent.TrackerServer.TrackerServer.IsRegistered(MonoTorrent.Connections.TrackerServer.ITrackerListener)
  commentId: M:MonoTorrent.TrackerServer.TrackerServer.IsRegistered(MonoTorrent.Connections.TrackerServer.ITrackerListener)
  id: IsRegistered(MonoTorrent.Connections.TrackerServer.ITrackerListener)
  parent: MonoTorrent.TrackerServer.TrackerServer
  langs:
  - csharp
  - vb
  name: IsRegistered(ITrackerListener)
  nameWithType: TrackerServer.IsRegistered(ITrackerListener)
  fullName: MonoTorrent.TrackerServer.TrackerServer.IsRegistered(MonoTorrent.Connections.TrackerServer.ITrackerListener)
  type: Method
  source:
    remote:
      path: MonoTorrent/src/TrackerServer/TrackerServer.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: IsRegistered
    path: src/TrackerServer/TrackerServer.cs
    startLine: 257
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.TrackerServer
  syntax:
    content: public bool IsRegistered(ITrackerListener listener)
    parameters:
    - id: listener
      type: MonoTorrent.Connections.TrackerServer.ITrackerListener
    return:
      type: System.Boolean
    content.vb: Public Function IsRegistered(listener As ITrackerListener) As Boolean
  overload: MonoTorrent.TrackerServer.TrackerServer.IsRegistered*
- uid: MonoTorrent.TrackerServer.TrackerServer.RegisterListener(MonoTorrent.Connections.TrackerServer.ITrackerListener)
  commentId: M:MonoTorrent.TrackerServer.TrackerServer.RegisterListener(MonoTorrent.Connections.TrackerServer.ITrackerListener)
  id: RegisterListener(MonoTorrent.Connections.TrackerServer.ITrackerListener)
  parent: MonoTorrent.TrackerServer.TrackerServer
  langs:
  - csharp
  - vb
  name: RegisterListener(ITrackerListener)
  nameWithType: TrackerServer.RegisterListener(ITrackerListener)
  fullName: MonoTorrent.TrackerServer.TrackerServer.RegisterListener(MonoTorrent.Connections.TrackerServer.ITrackerListener)
  type: Method
  source:
    remote:
      path: MonoTorrent/src/TrackerServer/TrackerServer.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: RegisterListener
    path: src/TrackerServer/TrackerServer.cs
    startLine: 373
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.TrackerServer
  syntax:
    content: public void RegisterListener(ITrackerListener listener)
    parameters:
    - id: listener
      type: MonoTorrent.Connections.TrackerServer.ITrackerListener
    content.vb: Public Sub RegisterListener(listener As ITrackerListener)
  overload: MonoTorrent.TrackerServer.TrackerServer.RegisterListener*
- uid: MonoTorrent.TrackerServer.TrackerServer.Remove(MonoTorrent.TrackerServer.ITrackable)
  commentId: M:MonoTorrent.TrackerServer.TrackerServer.Remove(MonoTorrent.TrackerServer.ITrackable)
  id: Remove(MonoTorrent.TrackerServer.ITrackable)
  parent: MonoTorrent.TrackerServer.TrackerServer
  langs:
  - csharp
  - vb
  name: Remove(ITrackable)
  nameWithType: TrackerServer.Remove(ITrackable)
  fullName: MonoTorrent.TrackerServer.TrackerServer.Remove(MonoTorrent.TrackerServer.ITrackable)
  type: Method
  source:
    remote:
      path: MonoTorrent/src/TrackerServer/TrackerServer.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: Remove
    path: src/TrackerServer/TrackerServer.cs
    startLine: 388
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.TrackerServer
  summary: Removes the trackable from the tracker
  example: []
  syntax:
    content: public void Remove(ITrackable trackable)
    parameters:
    - id: trackable
      type: MonoTorrent.TrackerServer.ITrackable
      description: ''
    content.vb: Public Sub Remove(trackable As ITrackable)
  overload: MonoTorrent.TrackerServer.TrackerServer.Remove*
- uid: MonoTorrent.TrackerServer.TrackerServer.UnregisterListener(MonoTorrent.Connections.TrackerServer.ITrackerListener)
  commentId: M:MonoTorrent.TrackerServer.TrackerServer.UnregisterListener(MonoTorrent.Connections.TrackerServer.ITrackerListener)
  id: UnregisterListener(MonoTorrent.Connections.TrackerServer.ITrackerListener)
  parent: MonoTorrent.TrackerServer.TrackerServer
  langs:
  - csharp
  - vb
  name: UnregisterListener(ITrackerListener)
  nameWithType: TrackerServer.UnregisterListener(ITrackerListener)
  fullName: MonoTorrent.TrackerServer.TrackerServer.UnregisterListener(MonoTorrent.Connections.TrackerServer.ITrackerListener)
  type: Method
  source:
    remote:
      path: MonoTorrent/src/TrackerServer/TrackerServer.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: UnregisterListener
    path: src/TrackerServer/TrackerServer.cs
    startLine: 398
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.TrackerServer
  syntax:
    content: public void UnregisterListener(ITrackerListener listener)
    parameters:
    - id: listener
      type: MonoTorrent.Connections.TrackerServer.ITrackerListener
    content.vb: Public Sub UnregisterListener(listener As ITrackerListener)
  overload: MonoTorrent.TrackerServer.TrackerServer.UnregisterListener*
- uid: MonoTorrent.TrackerServer.TrackerServer.Dispose
  commentId: M:MonoTorrent.TrackerServer.TrackerServer.Dispose
  id: Dispose
  parent: MonoTorrent.TrackerServer.TrackerServer
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: TrackerServer.Dispose()
  fullName: MonoTorrent.TrackerServer.TrackerServer.Dispose()
  type: Method
  source:
    remote:
      path: MonoTorrent/src/TrackerServer/TrackerServer.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: Dispose
    path: src/TrackerServer/TrackerServer.cs
    startLine: 413
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.TrackerServer
  summary: >-
    This unregisters all listeners so no further requests will be processed by this tracker. The listeners

    themselves are not disposed.
  example: []
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose()
  overload: MonoTorrent.TrackerServer.TrackerServer.Dispose*
  implements:
  - System.IDisposable.Dispose
references:
- uid: MonoTorrent.TrackerServer
  commentId: N:MonoTorrent.TrackerServer
  href: MonoTorrent.html
  name: MonoTorrent.TrackerServer
  nameWithType: MonoTorrent.TrackerServer
  fullName: MonoTorrent.TrackerServer
  spec.csharp:
  - uid: MonoTorrent
    name: MonoTorrent
    href: MonoTorrent.html
  - name: .
  - uid: MonoTorrent.TrackerServer
    name: TrackerServer
    href: MonoTorrent.TrackerServer.html
  spec.vb:
  - uid: MonoTorrent
    name: MonoTorrent
    href: MonoTorrent.html
  - name: .
  - uid: MonoTorrent.TrackerServer
    name: TrackerServer
    href: MonoTorrent.TrackerServer.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.EventHandler{MonoTorrent.TrackerServer.AnnounceEventArgs}
  commentId: T:System.EventHandler{MonoTorrent.TrackerServer.AnnounceEventArgs}
  parent: System
  definition: System.EventHandler`1
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  name: EventHandler<AnnounceEventArgs>
  nameWithType: EventHandler<AnnounceEventArgs>
  fullName: System.EventHandler<MonoTorrent.TrackerServer.AnnounceEventArgs>
  nameWithType.vb: EventHandler(Of AnnounceEventArgs)
  fullName.vb: System.EventHandler(Of MonoTorrent.TrackerServer.AnnounceEventArgs)
  name.vb: EventHandler(Of AnnounceEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - uid: MonoTorrent.TrackerServer.AnnounceEventArgs
    name: AnnounceEventArgs
    href: MonoTorrent.TrackerServer.AnnounceEventArgs.html
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - uid: MonoTorrent.TrackerServer.AnnounceEventArgs
    name: AnnounceEventArgs
    href: MonoTorrent.TrackerServer.AnnounceEventArgs.html
  - name: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - name: TEventArgs
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - name: TEventArgs
  - name: )
- uid: System.EventHandler{MonoTorrent.TrackerServer.ScrapeEventArgs}
  commentId: T:System.EventHandler{MonoTorrent.TrackerServer.ScrapeEventArgs}
  parent: System
  definition: System.EventHandler`1
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  name: EventHandler<ScrapeEventArgs>
  nameWithType: EventHandler<ScrapeEventArgs>
  fullName: System.EventHandler<MonoTorrent.TrackerServer.ScrapeEventArgs>
  nameWithType.vb: EventHandler(Of ScrapeEventArgs)
  fullName.vb: System.EventHandler(Of MonoTorrent.TrackerServer.ScrapeEventArgs)
  name.vb: EventHandler(Of ScrapeEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - uid: MonoTorrent.TrackerServer.ScrapeEventArgs
    name: ScrapeEventArgs
    href: MonoTorrent.TrackerServer.ScrapeEventArgs.html
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - uid: MonoTorrent.TrackerServer.ScrapeEventArgs
    name: ScrapeEventArgs
    href: MonoTorrent.TrackerServer.ScrapeEventArgs.html
  - name: )
- uid: System.EventHandler{MonoTorrent.TrackerServer.TimedOutEventArgs}
  commentId: T:System.EventHandler{MonoTorrent.TrackerServer.TimedOutEventArgs}
  parent: System
  definition: System.EventHandler`1
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  name: EventHandler<TimedOutEventArgs>
  nameWithType: EventHandler<TimedOutEventArgs>
  fullName: System.EventHandler<MonoTorrent.TrackerServer.TimedOutEventArgs>
  nameWithType.vb: EventHandler(Of TimedOutEventArgs)
  fullName.vb: System.EventHandler(Of MonoTorrent.TrackerServer.TimedOutEventArgs)
  name.vb: EventHandler(Of TimedOutEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - uid: MonoTorrent.TrackerServer.TimedOutEventArgs
    name: TimedOutEventArgs
    href: MonoTorrent.TrackerServer.TimedOutEventArgs.html
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - uid: MonoTorrent.TrackerServer.TimedOutEventArgs
    name: TimedOutEventArgs
    href: MonoTorrent.TrackerServer.TimedOutEventArgs.html
  - name: )
- uid: MonoTorrent.TrackerServer.TrackerServer.AllowNonCompact*
  commentId: Overload:MonoTorrent.TrackerServer.TrackerServer.AllowNonCompact
  href: MonoTorrent.TrackerServer.TrackerServer.html#MonoTorrent_TrackerServer_TrackerServer_AllowNonCompact
  name: AllowNonCompact
  nameWithType: TrackerServer.AllowNonCompact
  fullName: MonoTorrent.TrackerServer.TrackerServer.AllowNonCompact
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: MonoTorrent.TrackerServer.TrackerServer.AllowScrape*
  commentId: Overload:MonoTorrent.TrackerServer.TrackerServer.AllowScrape
  href: MonoTorrent.TrackerServer.TrackerServer.html#MonoTorrent_TrackerServer_TrackerServer_AllowScrape
  name: AllowScrape
  nameWithType: TrackerServer.AllowScrape
  fullName: MonoTorrent.TrackerServer.TrackerServer.AllowScrape
- uid: MonoTorrent.TrackerServer.TrackerServer.AllowUnregisteredTorrents*
  commentId: Overload:MonoTorrent.TrackerServer.TrackerServer.AllowUnregisteredTorrents
  href: MonoTorrent.TrackerServer.TrackerServer.html#MonoTorrent_TrackerServer_TrackerServer_AllowUnregisteredTorrents
  name: AllowUnregisteredTorrents
  nameWithType: TrackerServer.AllowUnregisteredTorrents
  fullName: MonoTorrent.TrackerServer.TrackerServer.AllowUnregisteredTorrents
- uid: MonoTorrent.TrackerServer.TrackerServer.AnnounceInterval*
  commentId: Overload:MonoTorrent.TrackerServer.TrackerServer.AnnounceInterval
  href: MonoTorrent.TrackerServer.TrackerServer.html#MonoTorrent_TrackerServer_TrackerServer_AnnounceInterval
  name: AnnounceInterval
  nameWithType: TrackerServer.AnnounceInterval
  fullName: MonoTorrent.TrackerServer.TrackerServer.AnnounceInterval
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.timespan
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: MonoTorrent.TrackerServer.TrackerServer.Count*
  commentId: Overload:MonoTorrent.TrackerServer.TrackerServer.Count
  href: MonoTorrent.TrackerServer.TrackerServer.html#MonoTorrent_TrackerServer_TrackerServer_Count
  name: Count
  nameWithType: TrackerServer.Count
  fullName: MonoTorrent.TrackerServer.TrackerServer.Count
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: MonoTorrent.TrackerServer.TrackerServer.Disposed*
  commentId: Overload:MonoTorrent.TrackerServer.TrackerServer.Disposed
  href: MonoTorrent.TrackerServer.TrackerServer.html#MonoTorrent_TrackerServer_TrackerServer_Disposed
  name: Disposed
  nameWithType: TrackerServer.Disposed
  fullName: MonoTorrent.TrackerServer.TrackerServer.Disposed
- uid: MonoTorrent.TrackerServer.TrackerServer.MinAnnounceInterval*
  commentId: Overload:MonoTorrent.TrackerServer.TrackerServer.MinAnnounceInterval
  href: MonoTorrent.TrackerServer.TrackerServer.html#MonoTorrent_TrackerServer_TrackerServer_MinAnnounceInterval
  name: MinAnnounceInterval
  nameWithType: TrackerServer.MinAnnounceInterval
  fullName: MonoTorrent.TrackerServer.TrackerServer.MinAnnounceInterval
- uid: MonoTorrent.TrackerServer.TrackerServer.Requests*
  commentId: Overload:MonoTorrent.TrackerServer.TrackerServer.Requests
  href: MonoTorrent.TrackerServer.TrackerServer.html#MonoTorrent_TrackerServer_TrackerServer_Requests
  name: Requests
  nameWithType: TrackerServer.Requests
  fullName: MonoTorrent.TrackerServer.TrackerServer.Requests
- uid: MonoTorrent.TrackerServer.RequestMonitor
  commentId: T:MonoTorrent.TrackerServer.RequestMonitor
  parent: MonoTorrent.TrackerServer
  href: MonoTorrent.TrackerServer.RequestMonitor.html
  name: RequestMonitor
  nameWithType: RequestMonitor
  fullName: MonoTorrent.TrackerServer.RequestMonitor
- uid: MonoTorrent.TrackerServer.TrackerServer.TimeoutInterval*
  commentId: Overload:MonoTorrent.TrackerServer.TrackerServer.TimeoutInterval
  href: MonoTorrent.TrackerServer.TrackerServer.html#MonoTorrent_TrackerServer_TrackerServer_TimeoutInterval
  name: TimeoutInterval
  nameWithType: TrackerServer.TimeoutInterval
  fullName: MonoTorrent.TrackerServer.TrackerServer.TimeoutInterval
- uid: MonoTorrent.TrackerServer.TrackerServer.TrackerId*
  commentId: Overload:MonoTorrent.TrackerServer.TrackerServer.TrackerId
  href: MonoTorrent.TrackerServer.TrackerServer.html#MonoTorrent_TrackerServer_TrackerServer_TrackerId
  name: TrackerId
  nameWithType: TrackerServer.TrackerId
  fullName: MonoTorrent.TrackerServer.TrackerServer.TrackerId
- uid: MonoTorrent.BEncoding.BEncodedString
  commentId: T:MonoTorrent.BEncoding.BEncodedString
  parent: MonoTorrent.BEncoding
  href: MonoTorrent.BEncoding.BEncodedString.html
  name: BEncodedString
  nameWithType: BEncodedString
  fullName: MonoTorrent.BEncoding.BEncodedString
- uid: MonoTorrent.BEncoding
  commentId: N:MonoTorrent.BEncoding
  href: MonoTorrent.html
  name: MonoTorrent.BEncoding
  nameWithType: MonoTorrent.BEncoding
  fullName: MonoTorrent.BEncoding
  spec.csharp:
  - uid: MonoTorrent
    name: MonoTorrent
    href: MonoTorrent.html
  - name: .
  - uid: MonoTorrent.BEncoding
    name: BEncoding
    href: MonoTorrent.BEncoding.html
  spec.vb:
  - uid: MonoTorrent
    name: MonoTorrent
    href: MonoTorrent.html
  - name: .
  - uid: MonoTorrent.BEncoding
    name: BEncoding
    href: MonoTorrent.BEncoding.html
- uid: MonoTorrent.TrackerServer.TrackerServer.TrackerId
  commentId: P:MonoTorrent.TrackerServer.TrackerServer.TrackerId
  href: MonoTorrent.TrackerServer.TrackerServer.html#MonoTorrent_TrackerServer_TrackerServer_TrackerId
  name: TrackerId
  nameWithType: TrackerServer.TrackerId
  fullName: MonoTorrent.TrackerServer.TrackerServer.TrackerId
- uid: MonoTorrent.TrackerServer.TrackerServer.#ctor*
  commentId: Overload:MonoTorrent.TrackerServer.TrackerServer.#ctor
  href: MonoTorrent.TrackerServer.TrackerServer.html#MonoTorrent_TrackerServer_TrackerServer__ctor
  name: TrackerServer
  nameWithType: TrackerServer.TrackerServer
  fullName: MonoTorrent.TrackerServer.TrackerServer.TrackerServer
  nameWithType.vb: TrackerServer.New
  fullName.vb: MonoTorrent.TrackerServer.TrackerServer.New
  name.vb: New
- uid: MonoTorrent.TrackerServer.TrackerServer.Add*
  commentId: Overload:MonoTorrent.TrackerServer.TrackerServer.Add
  href: MonoTorrent.TrackerServer.TrackerServer.html#MonoTorrent_TrackerServer_TrackerServer_Add_MonoTorrent_TrackerServer_ITrackable_
  name: Add
  nameWithType: TrackerServer.Add
  fullName: MonoTorrent.TrackerServer.TrackerServer.Add
- uid: MonoTorrent.TrackerServer.ITrackable
  commentId: T:MonoTorrent.TrackerServer.ITrackable
  parent: MonoTorrent.TrackerServer
  href: MonoTorrent.TrackerServer.ITrackable.html
  name: ITrackable
  nameWithType: ITrackable
  fullName: MonoTorrent.TrackerServer.ITrackable
- uid: MonoTorrent.TrackerServer.IPeerComparer
  commentId: T:MonoTorrent.TrackerServer.IPeerComparer
  parent: MonoTorrent.TrackerServer
  href: MonoTorrent.TrackerServer.IPeerComparer.html
  name: IPeerComparer
  nameWithType: IPeerComparer
  fullName: MonoTorrent.TrackerServer.IPeerComparer
- uid: MonoTorrent.TrackerServer.TrackerServer.Contains*
  commentId: Overload:MonoTorrent.TrackerServer.TrackerServer.Contains
  href: MonoTorrent.TrackerServer.TrackerServer.html#MonoTorrent_TrackerServer_TrackerServer_Contains_MonoTorrent_TrackerServer_ITrackable_
  name: Contains
  nameWithType: TrackerServer.Contains
  fullName: MonoTorrent.TrackerServer.TrackerServer.Contains
- uid: MonoTorrent.TrackerServer.TrackerServer.GetTrackerItem*
  commentId: Overload:MonoTorrent.TrackerServer.TrackerServer.GetTrackerItem
  href: MonoTorrent.TrackerServer.TrackerServer.html#MonoTorrent_TrackerServer_TrackerServer_GetTrackerItem_MonoTorrent_TrackerServer_ITrackable_
  name: GetTrackerItem
  nameWithType: TrackerServer.GetTrackerItem
  fullName: MonoTorrent.TrackerServer.TrackerServer.GetTrackerItem
- uid: MonoTorrent.TrackerServer.ITrackerItem
  commentId: T:MonoTorrent.TrackerServer.ITrackerItem
  parent: MonoTorrent.TrackerServer
  href: MonoTorrent.TrackerServer.ITrackerItem.html
  name: ITrackerItem
  nameWithType: ITrackerItem
  fullName: MonoTorrent.TrackerServer.ITrackerItem
- uid: MonoTorrent.TrackerServer.TrackerServer.GetTrackerItems*
  commentId: Overload:MonoTorrent.TrackerServer.TrackerServer.GetTrackerItems
  href: MonoTorrent.TrackerServer.TrackerServer.html#MonoTorrent_TrackerServer_TrackerServer_GetTrackerItems
  name: GetTrackerItems
  nameWithType: TrackerServer.GetTrackerItems
  fullName: MonoTorrent.TrackerServer.TrackerServer.GetTrackerItems
- uid: System.Collections.Generic.List{MonoTorrent.TrackerServer.ITrackerItem}
  commentId: T:System.Collections.Generic.List{MonoTorrent.TrackerServer.ITrackerItem}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<ITrackerItem>
  nameWithType: List<ITrackerItem>
  fullName: System.Collections.Generic.List<MonoTorrent.TrackerServer.ITrackerItem>
  nameWithType.vb: List(Of ITrackerItem)
  fullName.vb: System.Collections.Generic.List(Of MonoTorrent.TrackerServer.ITrackerItem)
  name.vb: List(Of ITrackerItem)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: MonoTorrent.TrackerServer.ITrackerItem
    name: ITrackerItem
    href: MonoTorrent.TrackerServer.ITrackerItem.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: MonoTorrent.TrackerServer.ITrackerItem
    name: ITrackerItem
    href: MonoTorrent.TrackerServer.ITrackerItem.html
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: MonoTorrent.TrackerServer.TrackerServer.IsRegistered*
  commentId: Overload:MonoTorrent.TrackerServer.TrackerServer.IsRegistered
  href: MonoTorrent.TrackerServer.TrackerServer.html#MonoTorrent_TrackerServer_TrackerServer_IsRegistered_MonoTorrent_Connections_TrackerServer_ITrackerListener_
  name: IsRegistered
  nameWithType: TrackerServer.IsRegistered
  fullName: MonoTorrent.TrackerServer.TrackerServer.IsRegistered
- uid: MonoTorrent.Connections.TrackerServer.ITrackerListener
  commentId: T:MonoTorrent.Connections.TrackerServer.ITrackerListener
  parent: MonoTorrent.Connections.TrackerServer
  href: MonoTorrent.Connections.TrackerServer.ITrackerListener.html
  name: ITrackerListener
  nameWithType: ITrackerListener
  fullName: MonoTorrent.Connections.TrackerServer.ITrackerListener
- uid: MonoTorrent.Connections.TrackerServer
  commentId: N:MonoTorrent.Connections.TrackerServer
  href: MonoTorrent.html
  name: MonoTorrent.Connections.TrackerServer
  nameWithType: MonoTorrent.Connections.TrackerServer
  fullName: MonoTorrent.Connections.TrackerServer
  spec.csharp:
  - uid: MonoTorrent
    name: MonoTorrent
    href: MonoTorrent.html
  - name: .
  - uid: MonoTorrent.Connections
    name: Connections
    href: MonoTorrent.Connections.html
  - name: .
  - uid: MonoTorrent.Connections.TrackerServer
    name: TrackerServer
    href: MonoTorrent.Connections.TrackerServer.html
  spec.vb:
  - uid: MonoTorrent
    name: MonoTorrent
    href: MonoTorrent.html
  - name: .
  - uid: MonoTorrent.Connections
    name: Connections
    href: MonoTorrent.Connections.html
  - name: .
  - uid: MonoTorrent.Connections.TrackerServer
    name: TrackerServer
    href: MonoTorrent.Connections.TrackerServer.html
- uid: MonoTorrent.TrackerServer.TrackerServer.RegisterListener*
  commentId: Overload:MonoTorrent.TrackerServer.TrackerServer.RegisterListener
  href: MonoTorrent.TrackerServer.TrackerServer.html#MonoTorrent_TrackerServer_TrackerServer_RegisterListener_MonoTorrent_Connections_TrackerServer_ITrackerListener_
  name: RegisterListener
  nameWithType: TrackerServer.RegisterListener
  fullName: MonoTorrent.TrackerServer.TrackerServer.RegisterListener
- uid: MonoTorrent.TrackerServer.TrackerServer.Remove*
  commentId: Overload:MonoTorrent.TrackerServer.TrackerServer.Remove
  href: MonoTorrent.TrackerServer.TrackerServer.html#MonoTorrent_TrackerServer_TrackerServer_Remove_MonoTorrent_TrackerServer_ITrackable_
  name: Remove
  nameWithType: TrackerServer.Remove
  fullName: MonoTorrent.TrackerServer.TrackerServer.Remove
- uid: MonoTorrent.TrackerServer.TrackerServer.UnregisterListener*
  commentId: Overload:MonoTorrent.TrackerServer.TrackerServer.UnregisterListener
  href: MonoTorrent.TrackerServer.TrackerServer.html#MonoTorrent_TrackerServer_TrackerServer_UnregisterListener_MonoTorrent_Connections_TrackerServer_ITrackerListener_
  name: UnregisterListener
  nameWithType: TrackerServer.UnregisterListener
  fullName: MonoTorrent.TrackerServer.TrackerServer.UnregisterListener
- uid: MonoTorrent.TrackerServer.TrackerServer.Dispose*
  commentId: Overload:MonoTorrent.TrackerServer.TrackerServer.Dispose
  href: MonoTorrent.TrackerServer.TrackerServer.html#MonoTorrent_TrackerServer_TrackerServer_Dispose
  name: Dispose
  nameWithType: TrackerServer.Dispose
  fullName: MonoTorrent.TrackerServer.TrackerServer.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
