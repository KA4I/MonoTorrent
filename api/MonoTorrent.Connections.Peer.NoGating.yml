### YamlMime:ManagedReference
items:
- uid: MonoTorrent.Connections.Peer.NoGating
  commentId: T:MonoTorrent.Connections.Peer.NoGating
  id: NoGating
  parent: MonoTorrent.Connections.Peer
  children:
  - MonoTorrent.Connections.Peer.NoGating.TryAcceptHandshakeAsync(MonoTorrent.BEncoding.BEncodedString,MonoTorrent.PeerInfo,MonoTorrent.Connections.Peer.IPeerConnection,MonoTorrent.InfoHash)
  langs:
  - csharp
  - vb
  name: NoGating
  nameWithType: NoGating
  fullName: MonoTorrent.Connections.Peer.NoGating
  type: Class
  source:
    remote:
      path: MonoTorrent/src/Connections/Peer/NoGating.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: NoGating
    path: src/Connections/Peer/NoGating.cs
    startLine: 6
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.Connections.Peer
  syntax:
    content: 'public sealed class NoGating : IPeerConnectionGate'
    content.vb: Public NotInheritable Class NoGating Implements IPeerConnectionGate
  inheritance:
  - System.Object
  implements:
  - MonoTorrent.Connections.Peer.IPeerConnectionGate
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: MonoTorrent.Connections.Peer.NoGating.TryAcceptHandshakeAsync(MonoTorrent.BEncoding.BEncodedString,MonoTorrent.PeerInfo,MonoTorrent.Connections.Peer.IPeerConnection,MonoTorrent.InfoHash)
  commentId: M:MonoTorrent.Connections.Peer.NoGating.TryAcceptHandshakeAsync(MonoTorrent.BEncoding.BEncodedString,MonoTorrent.PeerInfo,MonoTorrent.Connections.Peer.IPeerConnection,MonoTorrent.InfoHash)
  id: TryAcceptHandshakeAsync(MonoTorrent.BEncoding.BEncodedString,MonoTorrent.PeerInfo,MonoTorrent.Connections.Peer.IPeerConnection,MonoTorrent.InfoHash)
  parent: MonoTorrent.Connections.Peer.NoGating
  langs:
  - csharp
  - vb
  name: TryAcceptHandshakeAsync(BEncodedString, PeerInfo, IPeerConnection, InfoHash)
  nameWithType: NoGating.TryAcceptHandshakeAsync(BEncodedString, PeerInfo, IPeerConnection, InfoHash)
  fullName: MonoTorrent.Connections.Peer.NoGating.TryAcceptHandshakeAsync(MonoTorrent.BEncoding.BEncodedString, MonoTorrent.PeerInfo, MonoTorrent.Connections.Peer.IPeerConnection, MonoTorrent.InfoHash)
  type: Method
  source:
    remote:
      path: MonoTorrent/src/Connections/Peer/NoGating.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: TryAcceptHandshakeAsync
    path: src/Connections/Peer/NoGating.cs
    startLine: 8
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.Connections.Peer
  example: []
  syntax:
    content: public ReusableTask<bool> TryAcceptHandshakeAsync(BEncodedString localPeerId, PeerInfo remotePeer, IPeerConnection connection, InfoHash infoHash)
    parameters:
    - id: localPeerId
      type: MonoTorrent.BEncoding.BEncodedString
    - id: remotePeer
      type: MonoTorrent.PeerInfo
    - id: connection
      type: MonoTorrent.Connections.Peer.IPeerConnection
    - id: infoHash
      type: MonoTorrent.InfoHash
    return:
      type: ReusableTasks.ReusableTask{System.Boolean}
    content.vb: Public Function TryAcceptHandshakeAsync(localPeerId As BEncodedString, remotePeer As PeerInfo, connection As IPeerConnection, infoHash As InfoHash) As ReusableTask(Of Boolean)
  overload: MonoTorrent.Connections.Peer.NoGating.TryAcceptHandshakeAsync*
  implements:
  - MonoTorrent.Connections.Peer.IPeerConnectionGate.TryAcceptHandshakeAsync(MonoTorrent.BEncoding.BEncodedString,MonoTorrent.PeerInfo,MonoTorrent.Connections.Peer.IPeerConnection,MonoTorrent.InfoHash)
references:
- uid: MonoTorrent.Connections.Peer
  commentId: N:MonoTorrent.Connections.Peer
  href: MonoTorrent.html
  name: MonoTorrent.Connections.Peer
  nameWithType: MonoTorrent.Connections.Peer
  fullName: MonoTorrent.Connections.Peer
  spec.csharp:
  - uid: MonoTorrent
    name: MonoTorrent
    href: MonoTorrent.html
  - name: .
  - uid: MonoTorrent.Connections
    name: Connections
    href: MonoTorrent.Connections.html
  - name: .
  - uid: MonoTorrent.Connections.Peer
    name: Peer
    href: MonoTorrent.Connections.Peer.html
  spec.vb:
  - uid: MonoTorrent
    name: MonoTorrent
    href: MonoTorrent.html
  - name: .
  - uid: MonoTorrent.Connections
    name: Connections
    href: MonoTorrent.Connections.html
  - name: .
  - uid: MonoTorrent.Connections.Peer
    name: Peer
    href: MonoTorrent.Connections.Peer.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: MonoTorrent.Connections.Peer.IPeerConnectionGate
  commentId: T:MonoTorrent.Connections.Peer.IPeerConnectionGate
  parent: MonoTorrent.Connections.Peer
  href: MonoTorrent.Connections.Peer.IPeerConnectionGate.html
  name: IPeerConnectionGate
  nameWithType: IPeerConnectionGate
  fullName: MonoTorrent.Connections.Peer.IPeerConnectionGate
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: MonoTorrent.Connections.Peer.NoGating.TryAcceptHandshakeAsync*
  commentId: Overload:MonoTorrent.Connections.Peer.NoGating.TryAcceptHandshakeAsync
  href: MonoTorrent.Connections.Peer.NoGating.html#MonoTorrent_Connections_Peer_NoGating_TryAcceptHandshakeAsync_MonoTorrent_BEncoding_BEncodedString_MonoTorrent_PeerInfo_MonoTorrent_Connections_Peer_IPeerConnection_MonoTorrent_InfoHash_
  name: TryAcceptHandshakeAsync
  nameWithType: NoGating.TryAcceptHandshakeAsync
  fullName: MonoTorrent.Connections.Peer.NoGating.TryAcceptHandshakeAsync
- uid: MonoTorrent.Connections.Peer.IPeerConnectionGate.TryAcceptHandshakeAsync(MonoTorrent.BEncoding.BEncodedString,MonoTorrent.PeerInfo,MonoTorrent.Connections.Peer.IPeerConnection,MonoTorrent.InfoHash)
  commentId: M:MonoTorrent.Connections.Peer.IPeerConnectionGate.TryAcceptHandshakeAsync(MonoTorrent.BEncoding.BEncodedString,MonoTorrent.PeerInfo,MonoTorrent.Connections.Peer.IPeerConnection,MonoTorrent.InfoHash)
  parent: MonoTorrent.Connections.Peer.IPeerConnectionGate
  href: MonoTorrent.Connections.Peer.IPeerConnectionGate.html#MonoTorrent_Connections_Peer_IPeerConnectionGate_TryAcceptHandshakeAsync_MonoTorrent_BEncoding_BEncodedString_MonoTorrent_PeerInfo_MonoTorrent_Connections_Peer_IPeerConnection_MonoTorrent_InfoHash_
  name: TryAcceptHandshakeAsync(BEncodedString, PeerInfo, IPeerConnection, InfoHash)
  nameWithType: IPeerConnectionGate.TryAcceptHandshakeAsync(BEncodedString, PeerInfo, IPeerConnection, InfoHash)
  fullName: MonoTorrent.Connections.Peer.IPeerConnectionGate.TryAcceptHandshakeAsync(MonoTorrent.BEncoding.BEncodedString, MonoTorrent.PeerInfo, MonoTorrent.Connections.Peer.IPeerConnection, MonoTorrent.InfoHash)
  spec.csharp:
  - uid: MonoTorrent.Connections.Peer.IPeerConnectionGate.TryAcceptHandshakeAsync(MonoTorrent.BEncoding.BEncodedString,MonoTorrent.PeerInfo,MonoTorrent.Connections.Peer.IPeerConnection,MonoTorrent.InfoHash)
    name: TryAcceptHandshakeAsync
    href: MonoTorrent.Connections.Peer.IPeerConnectionGate.html#MonoTorrent_Connections_Peer_IPeerConnectionGate_TryAcceptHandshakeAsync_MonoTorrent_BEncoding_BEncodedString_MonoTorrent_PeerInfo_MonoTorrent_Connections_Peer_IPeerConnection_MonoTorrent_InfoHash_
  - name: (
  - uid: MonoTorrent.BEncoding.BEncodedString
    name: BEncodedString
    href: MonoTorrent.BEncoding.BEncodedString.html
  - name: ','
  - name: " "
  - uid: MonoTorrent.PeerInfo
    name: PeerInfo
    href: MonoTorrent.PeerInfo.html
  - name: ','
  - name: " "
  - uid: MonoTorrent.Connections.Peer.IPeerConnection
    name: IPeerConnection
    href: MonoTorrent.Connections.Peer.IPeerConnection.html
  - name: ','
  - name: " "
  - uid: MonoTorrent.InfoHash
    name: InfoHash
    href: MonoTorrent.InfoHash.html
  - name: )
  spec.vb:
  - uid: MonoTorrent.Connections.Peer.IPeerConnectionGate.TryAcceptHandshakeAsync(MonoTorrent.BEncoding.BEncodedString,MonoTorrent.PeerInfo,MonoTorrent.Connections.Peer.IPeerConnection,MonoTorrent.InfoHash)
    name: TryAcceptHandshakeAsync
    href: MonoTorrent.Connections.Peer.IPeerConnectionGate.html#MonoTorrent_Connections_Peer_IPeerConnectionGate_TryAcceptHandshakeAsync_MonoTorrent_BEncoding_BEncodedString_MonoTorrent_PeerInfo_MonoTorrent_Connections_Peer_IPeerConnection_MonoTorrent_InfoHash_
  - name: (
  - uid: MonoTorrent.BEncoding.BEncodedString
    name: BEncodedString
    href: MonoTorrent.BEncoding.BEncodedString.html
  - name: ','
  - name: " "
  - uid: MonoTorrent.PeerInfo
    name: PeerInfo
    href: MonoTorrent.PeerInfo.html
  - name: ','
  - name: " "
  - uid: MonoTorrent.Connections.Peer.IPeerConnection
    name: IPeerConnection
    href: MonoTorrent.Connections.Peer.IPeerConnection.html
  - name: ','
  - name: " "
  - uid: MonoTorrent.InfoHash
    name: InfoHash
    href: MonoTorrent.InfoHash.html
  - name: )
- uid: MonoTorrent.BEncoding.BEncodedString
  commentId: T:MonoTorrent.BEncoding.BEncodedString
  parent: MonoTorrent.BEncoding
  href: MonoTorrent.BEncoding.BEncodedString.html
  name: BEncodedString
  nameWithType: BEncodedString
  fullName: MonoTorrent.BEncoding.BEncodedString
- uid: MonoTorrent.PeerInfo
  commentId: T:MonoTorrent.PeerInfo
  parent: MonoTorrent
  href: MonoTorrent.PeerInfo.html
  name: PeerInfo
  nameWithType: PeerInfo
  fullName: MonoTorrent.PeerInfo
- uid: MonoTorrent.Connections.Peer.IPeerConnection
  commentId: T:MonoTorrent.Connections.Peer.IPeerConnection
  parent: MonoTorrent.Connections.Peer
  href: MonoTorrent.Connections.Peer.IPeerConnection.html
  name: IPeerConnection
  nameWithType: IPeerConnection
  fullName: MonoTorrent.Connections.Peer.IPeerConnection
- uid: MonoTorrent.InfoHash
  commentId: T:MonoTorrent.InfoHash
  parent: MonoTorrent
  href: MonoTorrent.InfoHash.html
  name: InfoHash
  nameWithType: InfoHash
  fullName: MonoTorrent.InfoHash
- uid: ReusableTasks.ReusableTask{System.Boolean}
  commentId: T:ReusableTasks.ReusableTask{System.Boolean}
  parent: ReusableTasks
  definition: ReusableTasks.ReusableTask`1
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: ReusableTask<bool>
  nameWithType: ReusableTask<bool>
  fullName: ReusableTasks.ReusableTask<bool>
  nameWithType.vb: ReusableTask(Of Boolean)
  fullName.vb: ReusableTasks.ReusableTask(Of Boolean)
  name.vb: ReusableTask(Of Boolean)
  spec.csharp:
  - uid: ReusableTasks.ReusableTask`1
    name: ReusableTask
    isExternal: true
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: ReusableTasks.ReusableTask`1
    name: ReusableTask
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: MonoTorrent.BEncoding
  commentId: N:MonoTorrent.BEncoding
  href: MonoTorrent.html
  name: MonoTorrent.BEncoding
  nameWithType: MonoTorrent.BEncoding
  fullName: MonoTorrent.BEncoding
  spec.csharp:
  - uid: MonoTorrent
    name: MonoTorrent
    href: MonoTorrent.html
  - name: .
  - uid: MonoTorrent.BEncoding
    name: BEncoding
    href: MonoTorrent.BEncoding.html
  spec.vb:
  - uid: MonoTorrent
    name: MonoTorrent
    href: MonoTorrent.html
  - name: .
  - uid: MonoTorrent.BEncoding
    name: BEncoding
    href: MonoTorrent.BEncoding.html
- uid: MonoTorrent
  commentId: N:MonoTorrent
  href: MonoTorrent.html
  name: MonoTorrent
  nameWithType: MonoTorrent
  fullName: MonoTorrent
- uid: ReusableTasks.ReusableTask`1
  commentId: T:ReusableTasks.ReusableTask`1
  isExternal: true
  name: ReusableTask<T>
  nameWithType: ReusableTask<T>
  fullName: ReusableTasks.ReusableTask<T>
  nameWithType.vb: ReusableTask(Of T)
  fullName.vb: ReusableTasks.ReusableTask(Of T)
  name.vb: ReusableTask(Of T)
  spec.csharp:
  - uid: ReusableTasks.ReusableTask`1
    name: ReusableTask
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: ReusableTasks.ReusableTask`1
    name: ReusableTask
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: ReusableTasks
  commentId: N:ReusableTasks
  isExternal: true
  name: ReusableTasks
  nameWithType: ReusableTasks
  fullName: ReusableTasks
