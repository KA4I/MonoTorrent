### YamlMime:ManagedReference
items:
- uid: MonoTorrent.BitField
  commentId: T:MonoTorrent.BitField
  id: BitField
  parent: MonoTorrent
  children:
  - MonoTorrent.BitField.#ctor(MonoTorrent.ReadOnlyBitField)
  - MonoTorrent.BitField.#ctor(System.Boolean[])
  - MonoTorrent.BitField.#ctor(System.Int32)
  - MonoTorrent.BitField.#ctor(System.ReadOnlySpan{System.Byte},System.Int32)
  - MonoTorrent.BitField.AllFalse
  - MonoTorrent.BitField.AllTrue
  - MonoTorrent.BitField.And(MonoTorrent.ReadOnlyBitField)
  - MonoTorrent.BitField.CountTrue(MonoTorrent.ReadOnlyBitField)
  - MonoTorrent.BitField.FalseIndices
  - MonoTorrent.BitField.FirstFalse
  - MonoTorrent.BitField.FirstFalse(System.Int32,System.Int32)
  - MonoTorrent.BitField.FirstTrue
  - MonoTorrent.BitField.FirstTrue(System.Int32,System.Int32)
  - MonoTorrent.BitField.From(MonoTorrent.ReadOnlyBitField)
  - MonoTorrent.BitField.From(System.ReadOnlySpan{System.Byte})
  - MonoTorrent.BitField.Item(System.Int32)
  - MonoTorrent.BitField.Length
  - MonoTorrent.BitField.LengthInBytes
  - MonoTorrent.BitField.NAnd(MonoTorrent.ReadOnlyBitField)
  - MonoTorrent.BitField.Not
  - MonoTorrent.BitField.Or(MonoTorrent.ReadOnlyBitField)
  - MonoTorrent.BitField.PercentComplete
  - MonoTorrent.BitField.SequenceEqual(MonoTorrent.ReadOnlyBitField)
  - MonoTorrent.BitField.Set(System.Int32,System.Boolean)
  - MonoTorrent.BitField.SetAll(System.Boolean)
  - MonoTorrent.BitField.SetFalse(System.Int32[])
  - MonoTorrent.BitField.SetTrue(System.Int32[])
  - MonoTorrent.BitField.SetTrue(System.Range)
  - MonoTorrent.BitField.SetTrue(System.ValueTuple{System.Int32,System.Int32})
  - MonoTorrent.BitField.ToBytes
  - MonoTorrent.BitField.ToBytes(System.Span{System.Byte})
  - MonoTorrent.BitField.TrueCount
  - MonoTorrent.BitField.TrueIndices
  - MonoTorrent.BitField.Xor(MonoTorrent.ReadOnlyBitField)
  - MonoTorrent.BitField.op_Implicit(MonoTorrent.BitField)~MonoTorrent.ReadOnlyBitField
  langs:
  - csharp
  - vb
  name: BitField
  nameWithType: BitField
  fullName: MonoTorrent.BitField
  type: Class
  source:
    remote:
      path: MonoTorrent/src/BitField.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: BitField
    path: src/BitField.cs
    startLine: 34
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent
  syntax:
    content: public sealed class BitField
    content.vb: Public NotInheritable Class BitField
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: MonoTorrent.BitField.AllFalse
  commentId: P:MonoTorrent.BitField.AllFalse
  id: AllFalse
  parent: MonoTorrent.BitField
  langs:
  - csharp
  - vb
  name: AllFalse
  nameWithType: BitField.AllFalse
  fullName: MonoTorrent.BitField.AllFalse
  type: Property
  source:
    remote:
      path: MonoTorrent/src/BitField.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: AllFalse
    path: src/BitField.cs
    startLine: 39
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent
  syntax:
    content: public bool AllFalse { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property AllFalse As Boolean
  overload: MonoTorrent.BitField.AllFalse*
- uid: MonoTorrent.BitField.AllTrue
  commentId: P:MonoTorrent.BitField.AllTrue
  id: AllTrue
  parent: MonoTorrent.BitField
  langs:
  - csharp
  - vb
  name: AllTrue
  nameWithType: BitField.AllTrue
  fullName: MonoTorrent.BitField.AllTrue
  type: Property
  source:
    remote:
      path: MonoTorrent/src/BitField.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: AllTrue
    path: src/BitField.cs
    startLine: 41
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent
  syntax:
    content: public bool AllTrue { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property AllTrue As Boolean
  overload: MonoTorrent.BitField.AllTrue*
- uid: MonoTorrent.BitField.Length
  commentId: P:MonoTorrent.BitField.Length
  id: Length
  parent: MonoTorrent.BitField
  langs:
  - csharp
  - vb
  name: Length
  nameWithType: BitField.Length
  fullName: MonoTorrent.BitField.Length
  type: Property
  source:
    remote:
      path: MonoTorrent/src/BitField.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: Length
    path: src/BitField.cs
    startLine: 43
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent
  syntax:
    content: public int Length { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Length As Integer
  overload: MonoTorrent.BitField.Length*
- uid: MonoTorrent.BitField.LengthInBytes
  commentId: P:MonoTorrent.BitField.LengthInBytes
  id: LengthInBytes
  parent: MonoTorrent.BitField
  langs:
  - csharp
  - vb
  name: LengthInBytes
  nameWithType: BitField.LengthInBytes
  fullName: MonoTorrent.BitField.LengthInBytes
  type: Property
  source:
    remote:
      path: MonoTorrent/src/BitField.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: LengthInBytes
    path: src/BitField.cs
    startLine: 45
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent
  syntax:
    content: public int LengthInBytes { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property LengthInBytes As Integer
  overload: MonoTorrent.BitField.LengthInBytes*
- uid: MonoTorrent.BitField.PercentComplete
  commentId: P:MonoTorrent.BitField.PercentComplete
  id: PercentComplete
  parent: MonoTorrent.BitField
  langs:
  - csharp
  - vb
  name: PercentComplete
  nameWithType: BitField.PercentComplete
  fullName: MonoTorrent.BitField.PercentComplete
  type: Property
  source:
    remote:
      path: MonoTorrent/src/BitField.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: PercentComplete
    path: src/BitField.cs
    startLine: 47
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent
  syntax:
    content: public double PercentComplete { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property PercentComplete As Double
  overload: MonoTorrent.BitField.PercentComplete*
- uid: MonoTorrent.BitField.TrueCount
  commentId: P:MonoTorrent.BitField.TrueCount
  id: TrueCount
  parent: MonoTorrent.BitField
  langs:
  - csharp
  - vb
  name: TrueCount
  nameWithType: BitField.TrueCount
  fullName: MonoTorrent.BitField.TrueCount
  type: Property
  source:
    remote:
      path: MonoTorrent/src/BitField.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: TrueCount
    path: src/BitField.cs
    startLine: 51
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent
  syntax:
    content: public int TrueCount { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property TrueCount As Integer
  overload: MonoTorrent.BitField.TrueCount*
- uid: MonoTorrent.BitField.Item(System.Int32)
  commentId: P:MonoTorrent.BitField.Item(System.Int32)
  id: Item(System.Int32)
  parent: MonoTorrent.BitField
  langs:
  - csharp
  - vb
  name: this[int]
  nameWithType: BitField.this[int]
  fullName: MonoTorrent.BitField.this[int]
  type: Property
  source:
    remote:
      path: MonoTorrent/src/BitField.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: this[]
    path: src/BitField.cs
    startLine: 53
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent
  syntax:
    content: public bool this[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
    return:
      type: System.Boolean
    content.vb: Public Default Property this[](index As Integer) As Boolean
  overload: MonoTorrent.BitField.Item*
  nameWithType.vb: BitField.this[](Integer)
  fullName.vb: MonoTorrent.BitField.this[](Integer)
  name.vb: this[](Integer)
- uid: MonoTorrent.BitField.#ctor(MonoTorrent.ReadOnlyBitField)
  commentId: M:MonoTorrent.BitField.#ctor(MonoTorrent.ReadOnlyBitField)
  id: '#ctor(MonoTorrent.ReadOnlyBitField)'
  parent: MonoTorrent.BitField
  langs:
  - csharp
  - vb
  name: BitField(ReadOnlyBitField)
  nameWithType: BitField.BitField(ReadOnlyBitField)
  fullName: MonoTorrent.BitField.BitField(MonoTorrent.ReadOnlyBitField)
  type: Constructor
  source:
    remote:
      path: MonoTorrent/src/BitField.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: .ctor
    path: src/BitField.cs
    startLine: 60
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent
  syntax:
    content: public BitField(ReadOnlyBitField other)
    parameters:
    - id: other
      type: MonoTorrent.ReadOnlyBitField
    content.vb: Public Sub New(other As ReadOnlyBitField)
  overload: MonoTorrent.BitField.#ctor*
  nameWithType.vb: BitField.New(ReadOnlyBitField)
  fullName.vb: MonoTorrent.BitField.New(MonoTorrent.ReadOnlyBitField)
  name.vb: New(ReadOnlyBitField)
- uid: MonoTorrent.BitField.#ctor(System.ReadOnlySpan{System.Byte},System.Int32)
  commentId: M:MonoTorrent.BitField.#ctor(System.ReadOnlySpan{System.Byte},System.Int32)
  id: '#ctor(System.ReadOnlySpan{System.Byte},System.Int32)'
  parent: MonoTorrent.BitField
  langs:
  - csharp
  - vb
  name: BitField(ReadOnlySpan<byte>, int)
  nameWithType: BitField.BitField(ReadOnlySpan<byte>, int)
  fullName: MonoTorrent.BitField.BitField(System.ReadOnlySpan<byte>, int)
  type: Constructor
  source:
    remote:
      path: MonoTorrent/src/BitField.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: .ctor
    path: src/BitField.cs
    startLine: 67
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent
  syntax:
    content: public BitField(ReadOnlySpan<byte> array, int length)
    parameters:
    - id: array
      type: System.ReadOnlySpan{System.Byte}
    - id: length
      type: System.Int32
    content.vb: Public Sub New(array As ReadOnlySpan(Of Byte), length As Integer)
  overload: MonoTorrent.BitField.#ctor*
  nameWithType.vb: BitField.New(ReadOnlySpan(Of Byte), Integer)
  fullName.vb: MonoTorrent.BitField.New(System.ReadOnlySpan(Of Byte), Integer)
  name.vb: New(ReadOnlySpan(Of Byte), Integer)
- uid: MonoTorrent.BitField.#ctor(System.Int32)
  commentId: M:MonoTorrent.BitField.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: MonoTorrent.BitField
  langs:
  - csharp
  - vb
  name: BitField(int)
  nameWithType: BitField.BitField(int)
  fullName: MonoTorrent.BitField.BitField(int)
  type: Constructor
  source:
    remote:
      path: MonoTorrent/src/BitField.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: .ctor
    path: src/BitField.cs
    startLine: 70
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent
  syntax:
    content: public BitField(int length)
    parameters:
    - id: length
      type: System.Int32
    content.vb: Public Sub New(length As Integer)
  overload: MonoTorrent.BitField.#ctor*
  nameWithType.vb: BitField.New(Integer)
  fullName.vb: MonoTorrent.BitField.New(Integer)
  name.vb: New(Integer)
- uid: MonoTorrent.BitField.#ctor(System.Boolean[])
  commentId: M:MonoTorrent.BitField.#ctor(System.Boolean[])
  id: '#ctor(System.Boolean[])'
  parent: MonoTorrent.BitField
  langs:
  - csharp
  - vb
  name: BitField(bool[])
  nameWithType: BitField.BitField(bool[])
  fullName: MonoTorrent.BitField.BitField(bool[])
  type: Constructor
  source:
    remote:
      path: MonoTorrent/src/BitField.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: .ctor
    path: src/BitField.cs
    startLine: 73
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent
  syntax:
    content: public BitField(bool[] array)
    parameters:
    - id: array
      type: System.Boolean[]
    content.vb: Public Sub New(array As Boolean())
  overload: MonoTorrent.BitField.#ctor*
  nameWithType.vb: BitField.New(Boolean())
  fullName.vb: MonoTorrent.BitField.New(Boolean())
  name.vb: New(Boolean())
- uid: MonoTorrent.BitField.SequenceEqual(MonoTorrent.ReadOnlyBitField)
  commentId: M:MonoTorrent.BitField.SequenceEqual(MonoTorrent.ReadOnlyBitField)
  id: SequenceEqual(MonoTorrent.ReadOnlyBitField)
  parent: MonoTorrent.BitField
  langs:
  - csharp
  - vb
  name: SequenceEqual(ReadOnlyBitField?)
  nameWithType: BitField.SequenceEqual(ReadOnlyBitField?)
  fullName: MonoTorrent.BitField.SequenceEqual(MonoTorrent.ReadOnlyBitField?)
  type: Method
  source:
    remote:
      path: MonoTorrent/src/BitField.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: SequenceEqual
    path: src/BitField.cs
    startLine: 76
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent
  syntax:
    content: public bool SequenceEqual(ReadOnlyBitField? other)
    parameters:
    - id: other
      type: MonoTorrent.ReadOnlyBitField
    return:
      type: System.Boolean
    content.vb: Public Function SequenceEqual(other As ReadOnlyBitField) As Boolean
  overload: MonoTorrent.BitField.SequenceEqual*
  nameWithType.vb: BitField.SequenceEqual(ReadOnlyBitField)
  fullName.vb: MonoTorrent.BitField.SequenceEqual(MonoTorrent.ReadOnlyBitField)
  name.vb: SequenceEqual(ReadOnlyBitField)
- uid: MonoTorrent.BitField.CountTrue(MonoTorrent.ReadOnlyBitField)
  commentId: M:MonoTorrent.BitField.CountTrue(MonoTorrent.ReadOnlyBitField)
  id: CountTrue(MonoTorrent.ReadOnlyBitField)
  parent: MonoTorrent.BitField
  langs:
  - csharp
  - vb
  name: CountTrue(ReadOnlyBitField)
  nameWithType: BitField.CountTrue(ReadOnlyBitField)
  fullName: MonoTorrent.BitField.CountTrue(MonoTorrent.ReadOnlyBitField)
  type: Method
  source:
    remote:
      path: MonoTorrent/src/BitField.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: CountTrue
    path: src/BitField.cs
    startLine: 79
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent
  syntax:
    content: public int CountTrue(ReadOnlyBitField selector)
    parameters:
    - id: selector
      type: MonoTorrent.ReadOnlyBitField
    return:
      type: System.Int32
    content.vb: Public Function CountTrue(selector As ReadOnlyBitField) As Integer
  overload: MonoTorrent.BitField.CountTrue*
- uid: MonoTorrent.BitField.FirstFalse
  commentId: M:MonoTorrent.BitField.FirstFalse
  id: FirstFalse
  parent: MonoTorrent.BitField
  langs:
  - csharp
  - vb
  name: FirstFalse()
  nameWithType: BitField.FirstFalse()
  fullName: MonoTorrent.BitField.FirstFalse()
  type: Method
  source:
    remote:
      path: MonoTorrent/src/BitField.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: FirstFalse
    path: src/BitField.cs
    startLine: 87
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent
  summary: >-
    Returns the index of the first <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> bit in the bitfield.

    Returns -1 if no <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> bit is found. /&gt;
  example: []
  syntax:
    content: public int FirstFalse()
    return:
      type: System.Int32
      description: ''
    content.vb: Public Function FirstFalse() As Integer
  overload: MonoTorrent.BitField.FirstFalse*
- uid: MonoTorrent.BitField.FirstFalse(System.Int32,System.Int32)
  commentId: M:MonoTorrent.BitField.FirstFalse(System.Int32,System.Int32)
  id: FirstFalse(System.Int32,System.Int32)
  parent: MonoTorrent.BitField
  langs:
  - csharp
  - vb
  name: FirstFalse(int, int)
  nameWithType: BitField.FirstFalse(int, int)
  fullName: MonoTorrent.BitField.FirstFalse(int, int)
  type: Method
  source:
    remote:
      path: MonoTorrent/src/BitField.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: FirstFalse
    path: src/BitField.cs
    startLine: 97
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent
  summary: >-
    Returns the index of the first <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> bit between <code class="paramref">startIndex</code> and <code class="paramref">endIndex</code> (inclusive).

    Returns -1 if no <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> bit is found. /&gt;
  example: []
  syntax:
    content: public int FirstFalse(int startIndex, int endIndex)
    parameters:
    - id: startIndex
      type: System.Int32
      description: The first index to check
    - id: endIndex
      type: System.Int32
      description: The last index to check
    return:
      type: System.Int32
      description: ''
    content.vb: Public Function FirstFalse(startIndex As Integer, endIndex As Integer) As Integer
  overload: MonoTorrent.BitField.FirstFalse*
  nameWithType.vb: BitField.FirstFalse(Integer, Integer)
  fullName.vb: MonoTorrent.BitField.FirstFalse(Integer, Integer)
  name.vb: FirstFalse(Integer, Integer)
- uid: MonoTorrent.BitField.FirstTrue
  commentId: M:MonoTorrent.BitField.FirstTrue
  id: FirstTrue
  parent: MonoTorrent.BitField
  langs:
  - csharp
  - vb
  name: FirstTrue()
  nameWithType: BitField.FirstTrue()
  fullName: MonoTorrent.BitField.FirstTrue()
  type: Method
  source:
    remote:
      path: MonoTorrent/src/BitField.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: FirstTrue
    path: src/BitField.cs
    startLine: 105
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent
  summary: >-
    Returns the index of the first <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> bit in the bitfield.

    Returns -1 if no <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> bit is found. /&gt;
  example: []
  syntax:
    content: public int FirstTrue()
    return:
      type: System.Int32
      description: ''
    content.vb: Public Function FirstTrue() As Integer
  overload: MonoTorrent.BitField.FirstTrue*
- uid: MonoTorrent.BitField.FirstTrue(System.Int32,System.Int32)
  commentId: M:MonoTorrent.BitField.FirstTrue(System.Int32,System.Int32)
  id: FirstTrue(System.Int32,System.Int32)
  parent: MonoTorrent.BitField
  langs:
  - csharp
  - vb
  name: FirstTrue(int, int)
  nameWithType: BitField.FirstTrue(int, int)
  fullName: MonoTorrent.BitField.FirstTrue(int, int)
  type: Method
  source:
    remote:
      path: MonoTorrent/src/BitField.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: FirstTrue
    path: src/BitField.cs
    startLine: 115
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent
  summary: >-
    Returns the index of the first <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> bit between <code class="paramref">startIndex</code> and <code class="paramref">endIndex</code> (inclusive).

    Returns -1 if no <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> bit is found. /&gt;
  example: []
  syntax:
    content: public int FirstTrue(int startIndex, int endIndex)
    parameters:
    - id: startIndex
      type: System.Int32
      description: The first index to check
    - id: endIndex
      type: System.Int32
      description: The last index to check
    return:
      type: System.Int32
      description: ''
    content.vb: Public Function FirstTrue(startIndex As Integer, endIndex As Integer) As Integer
  overload: MonoTorrent.BitField.FirstTrue*
  nameWithType.vb: BitField.FirstTrue(Integer, Integer)
  fullName.vb: MonoTorrent.BitField.FirstTrue(Integer, Integer)
  name.vb: FirstTrue(Integer, Integer)
- uid: MonoTorrent.BitField.TrueIndices
  commentId: P:MonoTorrent.BitField.TrueIndices
  id: TrueIndices
  parent: MonoTorrent.BitField
  langs:
  - csharp
  - vb
  name: TrueIndices
  nameWithType: BitField.TrueIndices
  fullName: MonoTorrent.BitField.TrueIndices
  type: Property
  source:
    remote:
      path: MonoTorrent/src/BitField.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: TrueIndices
    path: src/BitField.cs
    startLine: 118
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent
  syntax:
    content: public BitFieldIndices TrueIndices { get; }
    parameters: []
    return:
      type: MonoTorrent.BitFieldIndices
    content.vb: Public ReadOnly Property TrueIndices As BitFieldIndices
  overload: MonoTorrent.BitField.TrueIndices*
- uid: MonoTorrent.BitField.FalseIndices
  commentId: P:MonoTorrent.BitField.FalseIndices
  id: FalseIndices
  parent: MonoTorrent.BitField
  langs:
  - csharp
  - vb
  name: FalseIndices
  nameWithType: BitField.FalseIndices
  fullName: MonoTorrent.BitField.FalseIndices
  type: Property
  source:
    remote:
      path: MonoTorrent/src/BitField.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: FalseIndices
    path: src/BitField.cs
    startLine: 120
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent
  syntax:
    content: public BitFieldIndices FalseIndices { get; }
    parameters: []
    return:
      type: MonoTorrent.BitFieldIndices
    content.vb: Public ReadOnly Property FalseIndices As BitFieldIndices
  overload: MonoTorrent.BitField.FalseIndices*
- uid: MonoTorrent.BitField.ToBytes
  commentId: M:MonoTorrent.BitField.ToBytes
  id: ToBytes
  parent: MonoTorrent.BitField
  langs:
  - csharp
  - vb
  name: ToBytes()
  nameWithType: BitField.ToBytes()
  fullName: MonoTorrent.BitField.ToBytes()
  type: Method
  source:
    remote:
      path: MonoTorrent/src/BitField.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: ToBytes
    path: src/BitField.cs
    startLine: 122
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent
  syntax:
    content: public byte[] ToBytes()
    return:
      type: System.Byte[]
    content.vb: Public Function ToBytes() As Byte()
  overload: MonoTorrent.BitField.ToBytes*
- uid: MonoTorrent.BitField.ToBytes(System.Span{System.Byte})
  commentId: M:MonoTorrent.BitField.ToBytes(System.Span{System.Byte})
  id: ToBytes(System.Span{System.Byte})
  parent: MonoTorrent.BitField
  langs:
  - csharp
  - vb
  name: ToBytes(Span<byte>)
  nameWithType: BitField.ToBytes(Span<byte>)
  fullName: MonoTorrent.BitField.ToBytes(System.Span<byte>)
  type: Method
  source:
    remote:
      path: MonoTorrent/src/BitField.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: ToBytes
    path: src/BitField.cs
    startLine: 125
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent
  syntax:
    content: public int ToBytes(Span<byte> buffer)
    parameters:
    - id: buffer
      type: System.Span{System.Byte}
    return:
      type: System.Int32
    content.vb: Public Function ToBytes(buffer As Span(Of Byte)) As Integer
  overload: MonoTorrent.BitField.ToBytes*
  nameWithType.vb: BitField.ToBytes(Span(Of Byte))
  fullName.vb: MonoTorrent.BitField.ToBytes(System.Span(Of Byte))
  name.vb: ToBytes(Span(Of Byte))
- uid: MonoTorrent.BitField.And(MonoTorrent.ReadOnlyBitField)
  commentId: M:MonoTorrent.BitField.And(MonoTorrent.ReadOnlyBitField)
  id: And(MonoTorrent.ReadOnlyBitField)
  parent: MonoTorrent.BitField
  langs:
  - csharp
  - vb
  name: And(ReadOnlyBitField)
  nameWithType: BitField.And(ReadOnlyBitField)
  fullName: MonoTorrent.BitField.And(MonoTorrent.ReadOnlyBitField)
  type: Method
  source:
    remote:
      path: MonoTorrent/src/BitField.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: And
    path: src/BitField.cs
    startLine: 128
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent
  syntax:
    content: public BitField And(ReadOnlyBitField value)
    parameters:
    - id: value
      type: MonoTorrent.ReadOnlyBitField
    return:
      type: MonoTorrent.BitField
    content.vb: Public Function [And](value As ReadOnlyBitField) As BitField
  overload: MonoTorrent.BitField.And*
- uid: MonoTorrent.BitField.From(System.ReadOnlySpan{System.Byte})
  commentId: M:MonoTorrent.BitField.From(System.ReadOnlySpan{System.Byte})
  id: From(System.ReadOnlySpan{System.Byte})
  parent: MonoTorrent.BitField
  langs:
  - csharp
  - vb
  name: From(ReadOnlySpan<byte>)
  nameWithType: BitField.From(ReadOnlySpan<byte>)
  fullName: MonoTorrent.BitField.From(System.ReadOnlySpan<byte>)
  type: Method
  source:
    remote:
      path: MonoTorrent/src/BitField.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: From
    path: src/BitField.cs
    startLine: 134
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent
  syntax:
    content: public BitField From(ReadOnlySpan<byte> buffer)
    parameters:
    - id: buffer
      type: System.ReadOnlySpan{System.Byte}
    return:
      type: MonoTorrent.BitField
    content.vb: Public Function From(buffer As ReadOnlySpan(Of Byte)) As BitField
  overload: MonoTorrent.BitField.From*
  nameWithType.vb: BitField.From(ReadOnlySpan(Of Byte))
  fullName.vb: MonoTorrent.BitField.From(System.ReadOnlySpan(Of Byte))
  name.vb: From(ReadOnlySpan(Of Byte))
- uid: MonoTorrent.BitField.From(MonoTorrent.ReadOnlyBitField)
  commentId: M:MonoTorrent.BitField.From(MonoTorrent.ReadOnlyBitField)
  id: From(MonoTorrent.ReadOnlyBitField)
  parent: MonoTorrent.BitField
  langs:
  - csharp
  - vb
  name: From(ReadOnlyBitField)
  nameWithType: BitField.From(ReadOnlyBitField)
  fullName: MonoTorrent.BitField.From(MonoTorrent.ReadOnlyBitField)
  type: Method
  source:
    remote:
      path: MonoTorrent/src/BitField.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: From
    path: src/BitField.cs
    startLine: 140
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent
  syntax:
    content: public BitField From(ReadOnlyBitField value)
    parameters:
    - id: value
      type: MonoTorrent.ReadOnlyBitField
    return:
      type: MonoTorrent.BitField
    content.vb: Public Function From(value As ReadOnlyBitField) As BitField
  overload: MonoTorrent.BitField.From*
- uid: MonoTorrent.BitField.NAnd(MonoTorrent.ReadOnlyBitField)
  commentId: M:MonoTorrent.BitField.NAnd(MonoTorrent.ReadOnlyBitField)
  id: NAnd(MonoTorrent.ReadOnlyBitField)
  parent: MonoTorrent.BitField
  langs:
  - csharp
  - vb
  name: NAnd(ReadOnlyBitField)
  nameWithType: BitField.NAnd(ReadOnlyBitField)
  fullName: MonoTorrent.BitField.NAnd(MonoTorrent.ReadOnlyBitField)
  type: Method
  source:
    remote:
      path: MonoTorrent/src/BitField.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: NAnd
    path: src/BitField.cs
    startLine: 146
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent
  syntax:
    content: public BitField NAnd(ReadOnlyBitField value)
    parameters:
    - id: value
      type: MonoTorrent.ReadOnlyBitField
    return:
      type: MonoTorrent.BitField
    content.vb: Public Function NAnd(value As ReadOnlyBitField) As BitField
  overload: MonoTorrent.BitField.NAnd*
- uid: MonoTorrent.BitField.Not
  commentId: M:MonoTorrent.BitField.Not
  id: Not
  parent: MonoTorrent.BitField
  langs:
  - csharp
  - vb
  name: Not()
  nameWithType: BitField.Not()
  fullName: MonoTorrent.BitField.Not()
  type: Method
  source:
    remote:
      path: MonoTorrent/src/BitField.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: Not
    path: src/BitField.cs
    startLine: 152
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent
  syntax:
    content: public BitField Not()
    return:
      type: MonoTorrent.BitField
    content.vb: Public Function [Not]() As BitField
  overload: MonoTorrent.BitField.Not*
- uid: MonoTorrent.BitField.Or(MonoTorrent.ReadOnlyBitField)
  commentId: M:MonoTorrent.BitField.Or(MonoTorrent.ReadOnlyBitField)
  id: Or(MonoTorrent.ReadOnlyBitField)
  parent: MonoTorrent.BitField
  langs:
  - csharp
  - vb
  name: Or(ReadOnlyBitField)
  nameWithType: BitField.Or(ReadOnlyBitField)
  fullName: MonoTorrent.BitField.Or(MonoTorrent.ReadOnlyBitField)
  type: Method
  source:
    remote:
      path: MonoTorrent/src/BitField.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: Or
    path: src/BitField.cs
    startLine: 158
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent
  syntax:
    content: public BitField Or(ReadOnlyBitField value)
    parameters:
    - id: value
      type: MonoTorrent.ReadOnlyBitField
    return:
      type: MonoTorrent.BitField
    content.vb: Public Function [Or](value As ReadOnlyBitField) As BitField
  overload: MonoTorrent.BitField.Or*
- uid: MonoTorrent.BitField.Xor(MonoTorrent.ReadOnlyBitField)
  commentId: M:MonoTorrent.BitField.Xor(MonoTorrent.ReadOnlyBitField)
  id: Xor(MonoTorrent.ReadOnlyBitField)
  parent: MonoTorrent.BitField
  langs:
  - csharp
  - vb
  name: Xor(ReadOnlyBitField)
  nameWithType: BitField.Xor(ReadOnlyBitField)
  fullName: MonoTorrent.BitField.Xor(MonoTorrent.ReadOnlyBitField)
  type: Method
  source:
    remote:
      path: MonoTorrent/src/BitField.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: Xor
    path: src/BitField.cs
    startLine: 164
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent
  syntax:
    content: public BitField Xor(ReadOnlyBitField value)
    parameters:
    - id: value
      type: MonoTorrent.ReadOnlyBitField
    return:
      type: MonoTorrent.BitField
    content.vb: Public Function [Xor](value As ReadOnlyBitField) As BitField
  overload: MonoTorrent.BitField.Xor*
- uid: MonoTorrent.BitField.Set(System.Int32,System.Boolean)
  commentId: M:MonoTorrent.BitField.Set(System.Int32,System.Boolean)
  id: Set(System.Int32,System.Boolean)
  parent: MonoTorrent.BitField
  langs:
  - csharp
  - vb
  name: Set(int, bool)
  nameWithType: BitField.Set(int, bool)
  fullName: MonoTorrent.BitField.Set(int, bool)
  type: Method
  source:
    remote:
      path: MonoTorrent/src/BitField.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: Set
    path: src/BitField.cs
    startLine: 170
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent
  syntax:
    content: public BitField Set(int index, bool value)
    parameters:
    - id: index
      type: System.Int32
    - id: value
      type: System.Boolean
    return:
      type: MonoTorrent.BitField
    content.vb: Public Function [Set](index As Integer, value As Boolean) As BitField
  overload: MonoTorrent.BitField.Set*
  nameWithType.vb: BitField.Set(Integer, Boolean)
  fullName.vb: MonoTorrent.BitField.Set(Integer, Boolean)
  name.vb: Set(Integer, Boolean)
- uid: MonoTorrent.BitField.SetAll(System.Boolean)
  commentId: M:MonoTorrent.BitField.SetAll(System.Boolean)
  id: SetAll(System.Boolean)
  parent: MonoTorrent.BitField
  langs:
  - csharp
  - vb
  name: SetAll(bool)
  nameWithType: BitField.SetAll(bool)
  fullName: MonoTorrent.BitField.SetAll(bool)
  type: Method
  source:
    remote:
      path: MonoTorrent/src/BitField.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: SetAll
    path: src/BitField.cs
    startLine: 176
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent
  syntax:
    content: public BitField SetAll(bool value)
    parameters:
    - id: value
      type: System.Boolean
    return:
      type: MonoTorrent.BitField
    content.vb: Public Function SetAll(value As Boolean) As BitField
  overload: MonoTorrent.BitField.SetAll*
  nameWithType.vb: BitField.SetAll(Boolean)
  fullName.vb: MonoTorrent.BitField.SetAll(Boolean)
  name.vb: SetAll(Boolean)
- uid: MonoTorrent.BitField.SetFalse(System.Int32[])
  commentId: M:MonoTorrent.BitField.SetFalse(System.Int32[])
  id: SetFalse(System.Int32[])
  parent: MonoTorrent.BitField
  langs:
  - csharp
  - vb
  name: SetFalse(params int[])
  nameWithType: BitField.SetFalse(params int[])
  fullName: MonoTorrent.BitField.SetFalse(params int[])
  type: Method
  source:
    remote:
      path: MonoTorrent/src/BitField.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: SetFalse
    path: src/BitField.cs
    startLine: 182
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent
  syntax:
    content: public BitField SetFalse(params int[] indices)
    parameters:
    - id: indices
      type: System.Int32[]
    return:
      type: MonoTorrent.BitField
    content.vb: Public Function SetFalse(ParamArray indices As Integer()) As BitField
  overload: MonoTorrent.BitField.SetFalse*
  nameWithType.vb: BitField.SetFalse(ParamArray Integer())
  fullName.vb: MonoTorrent.BitField.SetFalse(ParamArray Integer())
  name.vb: SetFalse(ParamArray Integer())
- uid: MonoTorrent.BitField.SetTrue(System.ValueTuple{System.Int32,System.Int32})
  commentId: M:MonoTorrent.BitField.SetTrue(System.ValueTuple{System.Int32,System.Int32})
  id: SetTrue(System.ValueTuple{System.Int32,System.Int32})
  parent: MonoTorrent.BitField
  langs:
  - csharp
  - vb
  name: SetTrue((int startPiece, int endPiece))
  nameWithType: BitField.SetTrue((int startPiece, int endPiece))
  fullName: MonoTorrent.BitField.SetTrue((int startPiece, int endPiece))
  type: Method
  source:
    remote:
      path: MonoTorrent/src/BitField.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: SetTrue
    path: src/BitField.cs
    startLine: 188
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent
  syntax:
    content: public BitField SetTrue((int startPiece, int endPiece) range)
    parameters:
    - id: range
      type: System.ValueTuple{System.Int32,System.Int32}
    return:
      type: MonoTorrent.BitField
    content.vb: Public Function SetTrue(range As (startPiece As Integer, endPiece As Integer)) As BitField
  overload: MonoTorrent.BitField.SetTrue*
  nameWithType.vb: BitField.SetTrue((startPiece As Integer, endPiece As Integer))
  fullName.vb: MonoTorrent.BitField.SetTrue((startPiece As Integer, endPiece As Integer))
  name.vb: SetTrue((startPiece As Integer, endPiece As Integer))
- uid: MonoTorrent.BitField.SetTrue(System.Range)
  commentId: M:MonoTorrent.BitField.SetTrue(System.Range)
  id: SetTrue(System.Range)
  parent: MonoTorrent.BitField
  langs:
  - csharp
  - vb
  name: SetTrue(Range)
  nameWithType: BitField.SetTrue(Range)
  fullName: MonoTorrent.BitField.SetTrue(System.Range)
  type: Method
  source:
    remote:
      path: MonoTorrent/src/BitField.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: SetTrue
    path: src/BitField.cs
    startLine: 195
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent
  syntax:
    content: public BitField SetTrue(Range range)
    parameters:
    - id: range
      type: System.Range
    return:
      type: MonoTorrent.BitField
    content.vb: Public Function SetTrue(range As Range) As BitField
  overload: MonoTorrent.BitField.SetTrue*
- uid: MonoTorrent.BitField.SetTrue(System.Int32[])
  commentId: M:MonoTorrent.BitField.SetTrue(System.Int32[])
  id: SetTrue(System.Int32[])
  parent: MonoTorrent.BitField
  langs:
  - csharp
  - vb
  name: SetTrue(params int[])
  nameWithType: BitField.SetTrue(params int[])
  fullName: MonoTorrent.BitField.SetTrue(params int[])
  type: Method
  source:
    remote:
      path: MonoTorrent/src/BitField.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: SetTrue
    path: src/BitField.cs
    startLine: 204
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent
  syntax:
    content: public BitField SetTrue(params int[] indices)
    parameters:
    - id: indices
      type: System.Int32[]
    return:
      type: MonoTorrent.BitField
    content.vb: Public Function SetTrue(ParamArray indices As Integer()) As BitField
  overload: MonoTorrent.BitField.SetTrue*
  nameWithType.vb: BitField.SetTrue(ParamArray Integer())
  fullName.vb: MonoTorrent.BitField.SetTrue(ParamArray Integer())
  name.vb: SetTrue(ParamArray Integer())
- uid: MonoTorrent.BitField.op_Implicit(MonoTorrent.BitField)~MonoTorrent.ReadOnlyBitField
  commentId: M:MonoTorrent.BitField.op_Implicit(MonoTorrent.BitField)~MonoTorrent.ReadOnlyBitField
  id: op_Implicit(MonoTorrent.BitField)~MonoTorrent.ReadOnlyBitField
  parent: MonoTorrent.BitField
  langs:
  - csharp
  - vb
  name: implicit operator ReadOnlyBitField?(BitField?)
  nameWithType: BitField.implicit operator ReadOnlyBitField?(BitField?)
  fullName: MonoTorrent.BitField.implicit operator MonoTorrent.ReadOnlyBitField?(MonoTorrent.BitField?)
  type: Operator
  source:
    remote:
      path: MonoTorrent/src/BitField.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: op_Implicit
    path: src/BitField.cs
    startLine: 210
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent
  syntax:
    content: public static implicit operator ReadOnlyBitField?(BitField? bitfield)
    parameters:
    - id: bitfield
      type: MonoTorrent.BitField
    return:
      type: MonoTorrent.ReadOnlyBitField
    content.vb: Public Shared Widening Operator CType(bitfield As BitField) As ReadOnlyBitField
  overload: MonoTorrent.BitField.op_Implicit*
  nameWithType.vb: BitField.CType(BitField)
  fullName.vb: MonoTorrent.BitField.CType(MonoTorrent.BitField)
  name.vb: CType(BitField)
references:
- uid: MonoTorrent
  commentId: N:MonoTorrent
  href: MonoTorrent.html
  name: MonoTorrent
  nameWithType: MonoTorrent
  fullName: MonoTorrent
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: MonoTorrent.BitField.AllFalse*
  commentId: Overload:MonoTorrent.BitField.AllFalse
  href: MonoTorrent.BitField.html#MonoTorrent_BitField_AllFalse
  name: AllFalse
  nameWithType: BitField.AllFalse
  fullName: MonoTorrent.BitField.AllFalse
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: MonoTorrent.BitField.AllTrue*
  commentId: Overload:MonoTorrent.BitField.AllTrue
  href: MonoTorrent.BitField.html#MonoTorrent_BitField_AllTrue
  name: AllTrue
  nameWithType: BitField.AllTrue
  fullName: MonoTorrent.BitField.AllTrue
- uid: MonoTorrent.BitField.Length*
  commentId: Overload:MonoTorrent.BitField.Length
  href: MonoTorrent.BitField.html#MonoTorrent_BitField_Length
  name: Length
  nameWithType: BitField.Length
  fullName: MonoTorrent.BitField.Length
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: MonoTorrent.BitField.LengthInBytes*
  commentId: Overload:MonoTorrent.BitField.LengthInBytes
  href: MonoTorrent.BitField.html#MonoTorrent_BitField_LengthInBytes
  name: LengthInBytes
  nameWithType: BitField.LengthInBytes
  fullName: MonoTorrent.BitField.LengthInBytes
- uid: MonoTorrent.BitField.PercentComplete*
  commentId: Overload:MonoTorrent.BitField.PercentComplete
  href: MonoTorrent.BitField.html#MonoTorrent_BitField_PercentComplete
  name: PercentComplete
  nameWithType: BitField.PercentComplete
  fullName: MonoTorrent.BitField.PercentComplete
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double
  nameWithType: double
  fullName: double
  nameWithType.vb: Double
  fullName.vb: Double
  name.vb: Double
- uid: MonoTorrent.BitField.TrueCount*
  commentId: Overload:MonoTorrent.BitField.TrueCount
  href: MonoTorrent.BitField.html#MonoTorrent_BitField_TrueCount
  name: TrueCount
  nameWithType: BitField.TrueCount
  fullName: MonoTorrent.BitField.TrueCount
- uid: MonoTorrent.BitField.Item*
  commentId: Overload:MonoTorrent.BitField.Item
  href: MonoTorrent.BitField.html#MonoTorrent_BitField_Item_System_Int32_
  name: this
  nameWithType: BitField.this
  fullName: MonoTorrent.BitField.this
  nameWithType.vb: BitField.this[]
  fullName.vb: MonoTorrent.BitField.this[]
  name.vb: this[]
- uid: MonoTorrent.BitField.#ctor*
  commentId: Overload:MonoTorrent.BitField.#ctor
  href: MonoTorrent.BitField.html#MonoTorrent_BitField__ctor_MonoTorrent_ReadOnlyBitField_
  name: BitField
  nameWithType: BitField.BitField
  fullName: MonoTorrent.BitField.BitField
  nameWithType.vb: BitField.New
  fullName.vb: MonoTorrent.BitField.New
  name.vb: New
- uid: MonoTorrent.ReadOnlyBitField
  commentId: T:MonoTorrent.ReadOnlyBitField
  parent: MonoTorrent
  href: MonoTorrent.ReadOnlyBitField.html
  name: ReadOnlyBitField
  nameWithType: ReadOnlyBitField
  fullName: MonoTorrent.ReadOnlyBitField
- uid: System.ReadOnlySpan{System.Byte}
  commentId: T:System.ReadOnlySpan{System.Byte}
  parent: System
  definition: System.ReadOnlySpan`1
  href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  name: ReadOnlySpan<byte>
  nameWithType: ReadOnlySpan<byte>
  fullName: System.ReadOnlySpan<byte>
  nameWithType.vb: ReadOnlySpan(Of Byte)
  fullName.vb: System.ReadOnlySpan(Of Byte)
  name.vb: ReadOnlySpan(Of Byte)
  spec.csharp:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: <
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '>'
  spec.vb:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: )
- uid: System.ReadOnlySpan`1
  commentId: T:System.ReadOnlySpan`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  name: ReadOnlySpan<T>
  nameWithType: ReadOnlySpan<T>
  fullName: System.ReadOnlySpan<T>
  nameWithType.vb: ReadOnlySpan(Of T)
  fullName.vb: System.ReadOnlySpan(Of T)
  name.vb: ReadOnlySpan(Of T)
  spec.csharp:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Boolean[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool[]
  nameWithType: bool[]
  fullName: bool[]
  nameWithType.vb: Boolean()
  fullName.vb: Boolean()
  name.vb: Boolean()
  spec.csharp:
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: (
  - name: )
- uid: MonoTorrent.BitField.SequenceEqual*
  commentId: Overload:MonoTorrent.BitField.SequenceEqual
  href: MonoTorrent.BitField.html#MonoTorrent_BitField_SequenceEqual_MonoTorrent_ReadOnlyBitField_
  name: SequenceEqual
  nameWithType: BitField.SequenceEqual
  fullName: MonoTorrent.BitField.SequenceEqual
- uid: MonoTorrent.BitField.CountTrue*
  commentId: Overload:MonoTorrent.BitField.CountTrue
  href: MonoTorrent.BitField.html#MonoTorrent_BitField_CountTrue_MonoTorrent_ReadOnlyBitField_
  name: CountTrue
  nameWithType: BitField.CountTrue
  fullName: MonoTorrent.BitField.CountTrue
- uid: MonoTorrent.BitField.FirstFalse*
  commentId: Overload:MonoTorrent.BitField.FirstFalse
  href: MonoTorrent.BitField.html#MonoTorrent_BitField_FirstFalse
  name: FirstFalse
  nameWithType: BitField.FirstFalse
  fullName: MonoTorrent.BitField.FirstFalse
- uid: MonoTorrent.BitField.FirstTrue*
  commentId: Overload:MonoTorrent.BitField.FirstTrue
  href: MonoTorrent.BitField.html#MonoTorrent_BitField_FirstTrue
  name: FirstTrue
  nameWithType: BitField.FirstTrue
  fullName: MonoTorrent.BitField.FirstTrue
- uid: MonoTorrent.BitField.TrueIndices*
  commentId: Overload:MonoTorrent.BitField.TrueIndices
  href: MonoTorrent.BitField.html#MonoTorrent_BitField_TrueIndices
  name: TrueIndices
  nameWithType: BitField.TrueIndices
  fullName: MonoTorrent.BitField.TrueIndices
- uid: MonoTorrent.BitFieldIndices
  commentId: T:MonoTorrent.BitFieldIndices
  parent: MonoTorrent
  href: MonoTorrent.BitFieldIndices.html
  name: BitFieldIndices
  nameWithType: BitFieldIndices
  fullName: MonoTorrent.BitFieldIndices
- uid: MonoTorrent.BitField.FalseIndices*
  commentId: Overload:MonoTorrent.BitField.FalseIndices
  href: MonoTorrent.BitField.html#MonoTorrent_BitField_FalseIndices
  name: FalseIndices
  nameWithType: BitField.FalseIndices
  fullName: MonoTorrent.BitField.FalseIndices
- uid: MonoTorrent.BitField.ToBytes*
  commentId: Overload:MonoTorrent.BitField.ToBytes
  href: MonoTorrent.BitField.html#MonoTorrent_BitField_ToBytes
  name: ToBytes
  nameWithType: BitField.ToBytes
  fullName: MonoTorrent.BitField.ToBytes
- uid: System.Byte[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.byte
  name: byte[]
  nameWithType: byte[]
  fullName: byte[]
  nameWithType.vb: Byte()
  fullName.vb: Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: (
  - name: )
- uid: System.Span{System.Byte}
  commentId: T:System.Span{System.Byte}
  parent: System
  definition: System.Span`1
  href: https://learn.microsoft.com/dotnet/api/system.span-1
  name: Span<byte>
  nameWithType: Span<byte>
  fullName: System.Span<byte>
  nameWithType.vb: Span(Of Byte)
  fullName.vb: System.Span(Of Byte)
  name.vb: Span(Of Byte)
  spec.csharp:
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: <
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '>'
  spec.vb:
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: )
- uid: System.Span`1
  commentId: T:System.Span`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.span-1
  name: Span<T>
  nameWithType: Span<T>
  fullName: System.Span<T>
  nameWithType.vb: Span(Of T)
  fullName.vb: System.Span(Of T)
  name.vb: Span(Of T)
  spec.csharp:
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Span`1
    name: Span
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.span-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: MonoTorrent.BitField.And*
  commentId: Overload:MonoTorrent.BitField.And
  href: MonoTorrent.BitField.html#MonoTorrent_BitField_And_MonoTorrent_ReadOnlyBitField_
  name: And
  nameWithType: BitField.And
  fullName: MonoTorrent.BitField.And
- uid: MonoTorrent.BitField
  commentId: T:MonoTorrent.BitField
  parent: MonoTorrent
  href: MonoTorrent.BitField.html
  name: BitField
  nameWithType: BitField
  fullName: MonoTorrent.BitField
- uid: MonoTorrent.BitField.From*
  commentId: Overload:MonoTorrent.BitField.From
  href: MonoTorrent.BitField.html#MonoTorrent_BitField_From_System_ReadOnlySpan_System_Byte__
  name: From
  nameWithType: BitField.From
  fullName: MonoTorrent.BitField.From
- uid: MonoTorrent.BitField.NAnd*
  commentId: Overload:MonoTorrent.BitField.NAnd
  href: MonoTorrent.BitField.html#MonoTorrent_BitField_NAnd_MonoTorrent_ReadOnlyBitField_
  name: NAnd
  nameWithType: BitField.NAnd
  fullName: MonoTorrent.BitField.NAnd
- uid: MonoTorrent.BitField.Not*
  commentId: Overload:MonoTorrent.BitField.Not
  href: MonoTorrent.BitField.html#MonoTorrent_BitField_Not
  name: Not
  nameWithType: BitField.Not
  fullName: MonoTorrent.BitField.Not
- uid: MonoTorrent.BitField.Or*
  commentId: Overload:MonoTorrent.BitField.Or
  href: MonoTorrent.BitField.html#MonoTorrent_BitField_Or_MonoTorrent_ReadOnlyBitField_
  name: Or
  nameWithType: BitField.Or
  fullName: MonoTorrent.BitField.Or
- uid: MonoTorrent.BitField.Xor*
  commentId: Overload:MonoTorrent.BitField.Xor
  href: MonoTorrent.BitField.html#MonoTorrent_BitField_Xor_MonoTorrent_ReadOnlyBitField_
  name: Xor
  nameWithType: BitField.Xor
  fullName: MonoTorrent.BitField.Xor
- uid: MonoTorrent.BitField.Set*
  commentId: Overload:MonoTorrent.BitField.Set
  href: MonoTorrent.BitField.html#MonoTorrent_BitField_Set_System_Int32_System_Boolean_
  name: Set
  nameWithType: BitField.Set
  fullName: MonoTorrent.BitField.Set
- uid: MonoTorrent.BitField.SetAll*
  commentId: Overload:MonoTorrent.BitField.SetAll
  href: MonoTorrent.BitField.html#MonoTorrent_BitField_SetAll_System_Boolean_
  name: SetAll
  nameWithType: BitField.SetAll
  fullName: MonoTorrent.BitField.SetAll
- uid: MonoTorrent.BitField.SetFalse*
  commentId: Overload:MonoTorrent.BitField.SetFalse
  href: MonoTorrent.BitField.html#MonoTorrent_BitField_SetFalse_System_Int32___
  name: SetFalse
  nameWithType: BitField.SetFalse
  fullName: MonoTorrent.BitField.SetFalse
- uid: System.Int32[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int[]
  nameWithType: int[]
  fullName: int[]
  nameWithType.vb: Integer()
  fullName.vb: Integer()
  name.vb: Integer()
  spec.csharp:
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: (
  - name: )
- uid: MonoTorrent.BitField.SetTrue*
  commentId: Overload:MonoTorrent.BitField.SetTrue
  href: MonoTorrent.BitField.html#MonoTorrent_BitField_SetTrue_System_ValueTuple_System_Int32_System_Int32__
  name: SetTrue
  nameWithType: BitField.SetTrue
  fullName: MonoTorrent.BitField.SetTrue
- uid: System.ValueTuple{System.Int32,System.Int32}
  commentId: T:System.ValueTuple{System.Int32,System.Int32}
  parent: System
  definition: System.ValueTuple`2
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: (int startPiece, int endPiece)
  nameWithType: (int startPiece, int endPiece)
  fullName: (int startPiece, int endPiece)
  nameWithType.vb: (startPiece As Integer, endPiece As Integer)
  fullName.vb: (startPiece As Integer, endPiece As Integer)
  name.vb: (startPiece As Integer, endPiece As Integer)
  spec.csharp:
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: " "
  - uid: System.ValueTuple{System.Int32,System.Int32}.startPiece
    name: startPiece
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int32,system.int32-.startpiece
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: " "
  - uid: System.ValueTuple{System.Int32,System.Int32}.endPiece
    name: endPiece
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int32,system.int32-.endpiece
  - name: )
  spec.vb:
  - name: (
  - uid: System.ValueTuple{System.Int32,System.Int32}.startPiece
    name: startPiece
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int32,system.int32-.startpiece
  - name: " "
  - name: As
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.Int32,System.Int32}.endPiece
    name: endPiece
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int32,system.int32-.endpiece
  - name: " "
  - name: As
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.ValueTuple`2
  commentId: T:System.ValueTuple`2
  name: (T1, T2)
  nameWithType: (T1, T2)
  fullName: (T1, T2)
  spec.csharp:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
  spec.vb:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
- uid: System.Range
  commentId: T:System.Range
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.range
  name: Range
  nameWithType: Range
  fullName: System.Range
- uid: MonoTorrent.BitField.op_Implicit*
  commentId: Overload:MonoTorrent.BitField.op_Implicit
  name: implicit operator
  nameWithType: BitField.implicit operator
  fullName: MonoTorrent.BitField.implicit operator
  nameWithType.vb: BitField.CType
  fullName.vb: MonoTorrent.BitField.CType
  name.vb: CType
  spec.csharp:
  - name: implicit
  - name: " "
  - name: operator
