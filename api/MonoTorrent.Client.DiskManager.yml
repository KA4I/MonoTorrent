### YamlMime:ManagedReference
items:
- uid: MonoTorrent.Client.DiskManager
  commentId: T:MonoTorrent.Client.DiskManager
  id: DiskManager
  parent: MonoTorrent.Client
  children:
  - MonoTorrent.Client.DiskManager.CacheBytesUsed
  - MonoTorrent.Client.DiskManager.FlushAsync(MonoTorrent.ITorrentManagerInfo)
  - MonoTorrent.Client.DiskManager.FlushAsync(MonoTorrent.ITorrentManagerInfo,System.Int32,System.Int32)
  - MonoTorrent.Client.DiskManager.MaximumOpenFiles
  - MonoTorrent.Client.DiskManager.OpenFiles
  - MonoTorrent.Client.DiskManager.PendingReadBytes
  - MonoTorrent.Client.DiskManager.PendingWriteBytes
  - MonoTorrent.Client.DiskManager.ReadRate
  - MonoTorrent.Client.DiskManager.TotalBytesRead
  - MonoTorrent.Client.DiskManager.TotalBytesWritten
  - MonoTorrent.Client.DiskManager.TotalCacheBytesRead
  - MonoTorrent.Client.DiskManager.WriteRate
  langs:
  - csharp
  - vb
  name: DiskManager
  nameWithType: DiskManager
  fullName: MonoTorrent.Client.DiskManager
  type: Class
  source:
    remote:
      path: MonoTorrent/src/Client/Managers/DiskManager.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: DiskManager
    path: src/Client/Managers/DiskManager.cs
    startLine: 47
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.Client
  syntax:
    content: 'public class DiskManager : IBlockReader, IDisposable'
    content.vb: Public Class DiskManager Implements IBlockReader, IDisposable
  inheritance:
  - System.Object
  implements:
  - MonoTorrent.BlockReader.IBlockReader
  - System.IDisposable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - MonoTorrent.BlockReader.IBlockReader.MonoTorrent.BlockReader.PieceReaderExtensions.ReadAsync(MonoTorrent.ITorrentManagerInfo,MonoTorrent.BlockInfo,System.Memory{System.Byte})
- uid: MonoTorrent.Client.DiskManager.CacheBytesUsed
  commentId: P:MonoTorrent.Client.DiskManager.CacheBytesUsed
  id: CacheBytesUsed
  parent: MonoTorrent.Client.DiskManager
  langs:
  - csharp
  - vb
  name: CacheBytesUsed
  nameWithType: DiskManager.CacheBytesUsed
  fullName: MonoTorrent.Client.DiskManager.CacheBytesUsed
  type: Property
  source:
    remote:
      path: MonoTorrent/src/Client/Managers/DiskManager.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: CacheBytesUsed
    path: src/Client/Managers/DiskManager.cs
    startLine: 200
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.Client
  summary: Size of the memory cache in bytes.
  example: []
  syntax:
    content: public long CacheBytesUsed { get; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public ReadOnly Property CacheBytesUsed As Long
  overload: MonoTorrent.Client.DiskManager.CacheBytesUsed*
- uid: MonoTorrent.Client.DiskManager.OpenFiles
  commentId: P:MonoTorrent.Client.DiskManager.OpenFiles
  id: OpenFiles
  parent: MonoTorrent.Client.DiskManager
  langs:
  - csharp
  - vb
  name: OpenFiles
  nameWithType: DiskManager.OpenFiles
  fullName: MonoTorrent.Client.DiskManager.OpenFiles
  type: Property
  source:
    remote:
      path: MonoTorrent/src/Client/Managers/DiskManager.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: OpenFiles
    path: src/Client/Managers/DiskManager.cs
    startLine: 212
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.Client
  syntax:
    content: public int OpenFiles { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property OpenFiles As Integer
  overload: MonoTorrent.Client.DiskManager.OpenFiles*
- uid: MonoTorrent.Client.DiskManager.MaximumOpenFiles
  commentId: P:MonoTorrent.Client.DiskManager.MaximumOpenFiles
  id: MaximumOpenFiles
  parent: MonoTorrent.Client.DiskManager
  langs:
  - csharp
  - vb
  name: MaximumOpenFiles
  nameWithType: DiskManager.MaximumOpenFiles
  fullName: MonoTorrent.Client.DiskManager.MaximumOpenFiles
  type: Property
  source:
    remote:
      path: MonoTorrent/src/Client/Managers/DiskManager.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: MaximumOpenFiles
    path: src/Client/Managers/DiskManager.cs
    startLine: 213
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.Client
  syntax:
    content: public int MaximumOpenFiles { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property MaximumOpenFiles As Integer
  overload: MonoTorrent.Client.DiskManager.MaximumOpenFiles*
- uid: MonoTorrent.Client.DiskManager.PendingReadBytes
  commentId: P:MonoTorrent.Client.DiskManager.PendingReadBytes
  id: PendingReadBytes
  parent: MonoTorrent.Client.DiskManager
  langs:
  - csharp
  - vb
  name: PendingReadBytes
  nameWithType: DiskManager.PendingReadBytes
  fullName: MonoTorrent.Client.DiskManager.PendingReadBytes
  type: Property
  source:
    remote:
      path: MonoTorrent/src/Client/Managers/DiskManager.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: PendingReadBytes
    path: src/Client/Managers/DiskManager.cs
    startLine: 218
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.Client
  summary: The number of bytes pending being read as the <xref href="MonoTorrent.Client.EngineSettings.MaximumDiskReadRate" data-throw-if-not-resolved="false"></xref> rate limit is being exceeded.
  example: []
  syntax:
    content: public int PendingReadBytes { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property PendingReadBytes As Integer
  overload: MonoTorrent.Client.DiskManager.PendingReadBytes*
- uid: MonoTorrent.Client.DiskManager.PendingWriteBytes
  commentId: P:MonoTorrent.Client.DiskManager.PendingWriteBytes
  id: PendingWriteBytes
  parent: MonoTorrent.Client.DiskManager
  langs:
  - csharp
  - vb
  name: PendingWriteBytes
  nameWithType: DiskManager.PendingWriteBytes
  fullName: MonoTorrent.Client.DiskManager.PendingWriteBytes
  type: Property
  source:
    remote:
      path: MonoTorrent/src/Client/Managers/DiskManager.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: PendingWriteBytes
    path: src/Client/Managers/DiskManager.cs
    startLine: 223
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.Client
  summary: The number of bytes pending being written as the <xref href="MonoTorrent.Client.EngineSettings.MaximumDiskWriteRate" data-throw-if-not-resolved="false"></xref> rate limit is being exceeded.
  example: []
  syntax:
    content: public int PendingWriteBytes { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property PendingWriteBytes As Integer
  overload: MonoTorrent.Client.DiskManager.PendingWriteBytes*
- uid: MonoTorrent.Client.DiskManager.ReadRate
  commentId: P:MonoTorrent.Client.DiskManager.ReadRate
  id: ReadRate
  parent: MonoTorrent.Client.DiskManager
  langs:
  - csharp
  - vb
  name: ReadRate
  nameWithType: DiskManager.ReadRate
  fullName: MonoTorrent.Client.DiskManager.ReadRate
  type: Property
  source:
    remote:
      path: MonoTorrent/src/Client/Managers/DiskManager.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: ReadRate
    path: src/Client/Managers/DiskManager.cs
    startLine: 238
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.Client
  summary: The amount of data, in bytes, being read per second.
  example: []
  syntax:
    content: public long ReadRate { get; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public ReadOnly Property ReadRate As Long
  overload: MonoTorrent.Client.DiskManager.ReadRate*
- uid: MonoTorrent.Client.DiskManager.WriteRate
  commentId: P:MonoTorrent.Client.DiskManager.WriteRate
  id: WriteRate
  parent: MonoTorrent.Client.DiskManager
  langs:
  - csharp
  - vb
  name: WriteRate
  nameWithType: DiskManager.WriteRate
  fullName: MonoTorrent.Client.DiskManager.WriteRate
  type: Property
  source:
    remote:
      path: MonoTorrent/src/Client/Managers/DiskManager.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: WriteRate
    path: src/Client/Managers/DiskManager.cs
    startLine: 258
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.Client
  summary: The amount of data, in bytes, being written per second.
  example: []
  syntax:
    content: public long WriteRate { get; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public ReadOnly Property WriteRate As Long
  overload: MonoTorrent.Client.DiskManager.WriteRate*
- uid: MonoTorrent.Client.DiskManager.TotalCacheBytesRead
  commentId: P:MonoTorrent.Client.DiskManager.TotalCacheBytesRead
  id: TotalCacheBytesRead
  parent: MonoTorrent.Client.DiskManager
  langs:
  - csharp
  - vb
  name: TotalCacheBytesRead
  nameWithType: DiskManager.TotalCacheBytesRead
  fullName: MonoTorrent.Client.DiskManager.TotalCacheBytesRead
  type: Property
  source:
    remote:
      path: MonoTorrent/src/Client/Managers/DiskManager.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: TotalCacheBytesRead
    path: src/Client/Managers/DiskManager.cs
    startLine: 263
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.Client
  summary: Total bytes read from the cache.
  example: []
  syntax:
    content: public long TotalCacheBytesRead { get; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public ReadOnly Property TotalCacheBytesRead As Long
  overload: MonoTorrent.Client.DiskManager.TotalCacheBytesRead*
- uid: MonoTorrent.Client.DiskManager.TotalBytesRead
  commentId: P:MonoTorrent.Client.DiskManager.TotalBytesRead
  id: TotalBytesRead
  parent: MonoTorrent.Client.DiskManager
  langs:
  - csharp
  - vb
  name: TotalBytesRead
  nameWithType: DiskManager.TotalBytesRead
  fullName: MonoTorrent.Client.DiskManager.TotalBytesRead
  type: Property
  source:
    remote:
      path: MonoTorrent/src/Client/Managers/DiskManager.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: TotalBytesRead
    path: src/Client/Managers/DiskManager.cs
    startLine: 268
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.Client
  summary: The total bytes which have been read. Excludes bytes read from the cache.
  example: []
  syntax:
    content: public long TotalBytesRead { get; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public ReadOnly Property TotalBytesRead As Long
  overload: MonoTorrent.Client.DiskManager.TotalBytesRead*
- uid: MonoTorrent.Client.DiskManager.TotalBytesWritten
  commentId: P:MonoTorrent.Client.DiskManager.TotalBytesWritten
  id: TotalBytesWritten
  parent: MonoTorrent.Client.DiskManager
  langs:
  - csharp
  - vb
  name: TotalBytesWritten
  nameWithType: DiskManager.TotalBytesWritten
  fullName: MonoTorrent.Client.DiskManager.TotalBytesWritten
  type: Property
  source:
    remote:
      path: MonoTorrent/src/Client/Managers/DiskManager.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: TotalBytesWritten
    path: src/Client/Managers/DiskManager.cs
    startLine: 273
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.Client
  summary: The total number of bytes which have been written. Excludes bytes written to the cache.
  example: []
  syntax:
    content: public long TotalBytesWritten { get; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public ReadOnly Property TotalBytesWritten As Long
  overload: MonoTorrent.Client.DiskManager.TotalBytesWritten*
- uid: MonoTorrent.Client.DiskManager.FlushAsync(MonoTorrent.ITorrentManagerInfo)
  commentId: M:MonoTorrent.Client.DiskManager.FlushAsync(MonoTorrent.ITorrentManagerInfo)
  id: FlushAsync(MonoTorrent.ITorrentManagerInfo)
  parent: MonoTorrent.Client.DiskManager
  langs:
  - csharp
  - vb
  name: FlushAsync(ITorrentManagerInfo)
  nameWithType: DiskManager.FlushAsync(ITorrentManagerInfo)
  fullName: MonoTorrent.Client.DiskManager.FlushAsync(MonoTorrent.ITorrentManagerInfo)
  type: Method
  source:
    remote:
      path: MonoTorrent/src/Client/Managers/DiskManager.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: FlushAsync
    path: src/Client/Managers/DiskManager.cs
    startLine: 463
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.Client
  summary: >-
    Iterates over every file in this torrent and flushes any pending data to disk. Typically a

    <xref href="MonoTorrent.Client.TorrentManager" data-throw-if-not-resolved="false"></xref> will be passed to this method.
  example: []
  syntax:
    content: public Task FlushAsync(ITorrentManagerInfo manager)
    parameters:
    - id: manager
      type: MonoTorrent.ITorrentManagerInfo
      description: The torrent containing the files to flush
    return:
      type: System.Threading.Tasks.Task
      description: ''
    content.vb: Public Function FlushAsync(manager As ITorrentManagerInfo) As Task
  overload: MonoTorrent.Client.DiskManager.FlushAsync*
- uid: MonoTorrent.Client.DiskManager.FlushAsync(MonoTorrent.ITorrentManagerInfo,System.Int32,System.Int32)
  commentId: M:MonoTorrent.Client.DiskManager.FlushAsync(MonoTorrent.ITorrentManagerInfo,System.Int32,System.Int32)
  id: FlushAsync(MonoTorrent.ITorrentManagerInfo,System.Int32,System.Int32)
  parent: MonoTorrent.Client.DiskManager
  langs:
  - csharp
  - vb
  name: FlushAsync(ITorrentManagerInfo, int, int)
  nameWithType: DiskManager.FlushAsync(ITorrentManagerInfo, int, int)
  fullName: MonoTorrent.Client.DiskManager.FlushAsync(MonoTorrent.ITorrentManagerInfo, int, int)
  type: Method
  source:
    remote:
      path: MonoTorrent/src/Client/Managers/DiskManager.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: FlushAsync
    path: src/Client/Managers/DiskManager.cs
    startLine: 476
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.Client
  summary: >-
    Iterates over every file in this torrent which is contains data from the specified piece and

    flushes that file to disk. Typically a <xref href="MonoTorrent.Client.TorrentManager" data-throw-if-not-resolved="false"></xref> will be passed to this method.
  example: []
  syntax:
    content: public Task FlushAsync(ITorrentManagerInfo manager, int startIndex, int endIndex)
    parameters:
    - id: manager
      type: MonoTorrent.ITorrentManagerInfo
      description: The torrent containing the files to flush
    - id: startIndex
      type: System.Int32
      description: The first index of the piece to flush.
    - id: endIndex
      type: System.Int32
      description: The final index of the piece to flush.
    return:
      type: System.Threading.Tasks.Task
      description: ''
    content.vb: Public Function FlushAsync(manager As ITorrentManagerInfo, startIndex As Integer, endIndex As Integer) As Task
  overload: MonoTorrent.Client.DiskManager.FlushAsync*
  nameWithType.vb: DiskManager.FlushAsync(ITorrentManagerInfo, Integer, Integer)
  fullName.vb: MonoTorrent.Client.DiskManager.FlushAsync(MonoTorrent.ITorrentManagerInfo, Integer, Integer)
  name.vb: FlushAsync(ITorrentManagerInfo, Integer, Integer)
references:
- uid: MonoTorrent.Client
  commentId: N:MonoTorrent.Client
  href: MonoTorrent.html
  name: MonoTorrent.Client
  nameWithType: MonoTorrent.Client
  fullName: MonoTorrent.Client
  spec.csharp:
  - uid: MonoTorrent
    name: MonoTorrent
    href: MonoTorrent.html
  - name: .
  - uid: MonoTorrent.Client
    name: Client
    href: MonoTorrent.Client.html
  spec.vb:
  - uid: MonoTorrent
    name: MonoTorrent
    href: MonoTorrent.html
  - name: .
  - uid: MonoTorrent.Client
    name: Client
    href: MonoTorrent.Client.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: MonoTorrent.BlockReader.IBlockReader
  commentId: T:MonoTorrent.BlockReader.IBlockReader
  parent: MonoTorrent.BlockReader
  href: MonoTorrent.BlockReader.IBlockReader.html
  name: IBlockReader
  nameWithType: IBlockReader
  fullName: MonoTorrent.BlockReader.IBlockReader
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: MonoTorrent.BlockReader.IBlockReader.MonoTorrent.BlockReader.PieceReaderExtensions.ReadAsync(MonoTorrent.ITorrentManagerInfo,MonoTorrent.BlockInfo,System.Memory{System.Byte})
  commentId: M:MonoTorrent.BlockReader.PieceReaderExtensions.ReadAsync(MonoTorrent.BlockReader.IBlockReader,MonoTorrent.ITorrentManagerInfo,MonoTorrent.BlockInfo,System.Memory{System.Byte})
  parent: MonoTorrent.BlockReader.PieceReaderExtensions
  definition: MonoTorrent.BlockReader.PieceReaderExtensions.ReadAsync(MonoTorrent.BlockReader.IBlockReader,MonoTorrent.ITorrentManagerInfo,MonoTorrent.BlockInfo,System.Memory{System.Byte})
  href: MonoTorrent.BlockReader.PieceReaderExtensions.html#MonoTorrent_BlockReader_PieceReaderExtensions_ReadAsync_MonoTorrent_BlockReader_IBlockReader_MonoTorrent_ITorrentManagerInfo_MonoTorrent_BlockInfo_System_Memory_System_Byte__
  name: ReadAsync(IBlockReader, ITorrentManagerInfo, BlockInfo, Memory<byte>)
  nameWithType: PieceReaderExtensions.ReadAsync(IBlockReader, ITorrentManagerInfo, BlockInfo, Memory<byte>)
  fullName: MonoTorrent.BlockReader.PieceReaderExtensions.ReadAsync(MonoTorrent.BlockReader.IBlockReader, MonoTorrent.ITorrentManagerInfo, MonoTorrent.BlockInfo, System.Memory<byte>)
  nameWithType.vb: PieceReaderExtensions.ReadAsync(IBlockReader, ITorrentManagerInfo, BlockInfo, Memory(Of Byte))
  fullName.vb: MonoTorrent.BlockReader.PieceReaderExtensions.ReadAsync(MonoTorrent.BlockReader.IBlockReader, MonoTorrent.ITorrentManagerInfo, MonoTorrent.BlockInfo, System.Memory(Of Byte))
  name.vb: ReadAsync(IBlockReader, ITorrentManagerInfo, BlockInfo, Memory(Of Byte))
  spec.csharp:
  - uid: MonoTorrent.BlockReader.PieceReaderExtensions.ReadAsync(MonoTorrent.BlockReader.IBlockReader,MonoTorrent.ITorrentManagerInfo,MonoTorrent.BlockInfo,System.Memory{System.Byte})
    name: ReadAsync
    href: MonoTorrent.BlockReader.PieceReaderExtensions.html#MonoTorrent_BlockReader_PieceReaderExtensions_ReadAsync_MonoTorrent_BlockReader_IBlockReader_MonoTorrent_ITorrentManagerInfo_MonoTorrent_BlockInfo_System_Memory_System_Byte__
  - name: (
  - uid: MonoTorrent.BlockReader.IBlockReader
    name: IBlockReader
    href: MonoTorrent.BlockReader.IBlockReader.html
  - name: ','
  - name: " "
  - uid: MonoTorrent.ITorrentManagerInfo
    name: ITorrentManagerInfo
    href: MonoTorrent.ITorrentManagerInfo.html
  - name: ','
  - name: " "
  - uid: MonoTorrent.BlockInfo
    name: BlockInfo
    href: MonoTorrent.BlockInfo.html
  - name: ','
  - name: " "
  - uid: System.Memory`1
    name: Memory
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.memory-1
  - name: <
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '>'
  - name: )
  spec.vb:
  - uid: MonoTorrent.BlockReader.PieceReaderExtensions.ReadAsync(MonoTorrent.BlockReader.IBlockReader,MonoTorrent.ITorrentManagerInfo,MonoTorrent.BlockInfo,System.Memory{System.Byte})
    name: ReadAsync
    href: MonoTorrent.BlockReader.PieceReaderExtensions.html#MonoTorrent_BlockReader_PieceReaderExtensions_ReadAsync_MonoTorrent_BlockReader_IBlockReader_MonoTorrent_ITorrentManagerInfo_MonoTorrent_BlockInfo_System_Memory_System_Byte__
  - name: (
  - uid: MonoTorrent.BlockReader.IBlockReader
    name: IBlockReader
    href: MonoTorrent.BlockReader.IBlockReader.html
  - name: ','
  - name: " "
  - uid: MonoTorrent.ITorrentManagerInfo
    name: ITorrentManagerInfo
    href: MonoTorrent.ITorrentManagerInfo.html
  - name: ','
  - name: " "
  - uid: MonoTorrent.BlockInfo
    name: BlockInfo
    href: MonoTorrent.BlockInfo.html
  - name: ','
  - name: " "
  - uid: System.Memory`1
    name: Memory
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.memory-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: )
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: MonoTorrent.BlockReader
  commentId: N:MonoTorrent.BlockReader
  href: MonoTorrent.html
  name: MonoTorrent.BlockReader
  nameWithType: MonoTorrent.BlockReader
  fullName: MonoTorrent.BlockReader
  spec.csharp:
  - uid: MonoTorrent
    name: MonoTorrent
    href: MonoTorrent.html
  - name: .
  - uid: MonoTorrent.BlockReader
    name: BlockReader
    href: MonoTorrent.BlockReader.html
  spec.vb:
  - uid: MonoTorrent
    name: MonoTorrent
    href: MonoTorrent.html
  - name: .
  - uid: MonoTorrent.BlockReader
    name: BlockReader
    href: MonoTorrent.BlockReader.html
- uid: MonoTorrent.BlockReader.PieceReaderExtensions.ReadAsync(MonoTorrent.BlockReader.IBlockReader,MonoTorrent.ITorrentManagerInfo,MonoTorrent.BlockInfo,System.Memory{System.Byte})
  commentId: M:MonoTorrent.BlockReader.PieceReaderExtensions.ReadAsync(MonoTorrent.BlockReader.IBlockReader,MonoTorrent.ITorrentManagerInfo,MonoTorrent.BlockInfo,System.Memory{System.Byte})
  isExternal: true
  href: MonoTorrent.BlockReader.PieceReaderExtensions.html#MonoTorrent_BlockReader_PieceReaderExtensions_ReadAsync_MonoTorrent_BlockReader_IBlockReader_MonoTorrent_ITorrentManagerInfo_MonoTorrent_BlockInfo_System_Memory_System_Byte__
  name: ReadAsync(IBlockReader, ITorrentManagerInfo, BlockInfo, Memory<byte>)
  nameWithType: PieceReaderExtensions.ReadAsync(IBlockReader, ITorrentManagerInfo, BlockInfo, Memory<byte>)
  fullName: MonoTorrent.BlockReader.PieceReaderExtensions.ReadAsync(MonoTorrent.BlockReader.IBlockReader, MonoTorrent.ITorrentManagerInfo, MonoTorrent.BlockInfo, System.Memory<byte>)
  nameWithType.vb: PieceReaderExtensions.ReadAsync(IBlockReader, ITorrentManagerInfo, BlockInfo, Memory(Of Byte))
  fullName.vb: MonoTorrent.BlockReader.PieceReaderExtensions.ReadAsync(MonoTorrent.BlockReader.IBlockReader, MonoTorrent.ITorrentManagerInfo, MonoTorrent.BlockInfo, System.Memory(Of Byte))
  name.vb: ReadAsync(IBlockReader, ITorrentManagerInfo, BlockInfo, Memory(Of Byte))
  spec.csharp:
  - uid: MonoTorrent.BlockReader.PieceReaderExtensions.ReadAsync(MonoTorrent.BlockReader.IBlockReader,MonoTorrent.ITorrentManagerInfo,MonoTorrent.BlockInfo,System.Memory{System.Byte})
    name: ReadAsync
    href: MonoTorrent.BlockReader.PieceReaderExtensions.html#MonoTorrent_BlockReader_PieceReaderExtensions_ReadAsync_MonoTorrent_BlockReader_IBlockReader_MonoTorrent_ITorrentManagerInfo_MonoTorrent_BlockInfo_System_Memory_System_Byte__
  - name: (
  - uid: MonoTorrent.BlockReader.IBlockReader
    name: IBlockReader
    href: MonoTorrent.BlockReader.IBlockReader.html
  - name: ','
  - name: " "
  - uid: MonoTorrent.ITorrentManagerInfo
    name: ITorrentManagerInfo
    href: MonoTorrent.ITorrentManagerInfo.html
  - name: ','
  - name: " "
  - uid: MonoTorrent.BlockInfo
    name: BlockInfo
    href: MonoTorrent.BlockInfo.html
  - name: ','
  - name: " "
  - uid: System.Memory`1
    name: Memory
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.memory-1
  - name: <
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '>'
  - name: )
  spec.vb:
  - uid: MonoTorrent.BlockReader.PieceReaderExtensions.ReadAsync(MonoTorrent.BlockReader.IBlockReader,MonoTorrent.ITorrentManagerInfo,MonoTorrent.BlockInfo,System.Memory{System.Byte})
    name: ReadAsync
    href: MonoTorrent.BlockReader.PieceReaderExtensions.html#MonoTorrent_BlockReader_PieceReaderExtensions_ReadAsync_MonoTorrent_BlockReader_IBlockReader_MonoTorrent_ITorrentManagerInfo_MonoTorrent_BlockInfo_System_Memory_System_Byte__
  - name: (
  - uid: MonoTorrent.BlockReader.IBlockReader
    name: IBlockReader
    href: MonoTorrent.BlockReader.IBlockReader.html
  - name: ','
  - name: " "
  - uid: MonoTorrent.ITorrentManagerInfo
    name: ITorrentManagerInfo
    href: MonoTorrent.ITorrentManagerInfo.html
  - name: ','
  - name: " "
  - uid: MonoTorrent.BlockInfo
    name: BlockInfo
    href: MonoTorrent.BlockInfo.html
  - name: ','
  - name: " "
  - uid: System.Memory`1
    name: Memory
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.memory-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: )
  - name: )
- uid: MonoTorrent.BlockReader.PieceReaderExtensions
  commentId: T:MonoTorrent.BlockReader.PieceReaderExtensions
  parent: MonoTorrent.BlockReader
  href: MonoTorrent.BlockReader.PieceReaderExtensions.html
  name: PieceReaderExtensions
  nameWithType: PieceReaderExtensions
  fullName: MonoTorrent.BlockReader.PieceReaderExtensions
- uid: MonoTorrent.Client.DiskManager.CacheBytesUsed*
  commentId: Overload:MonoTorrent.Client.DiskManager.CacheBytesUsed
  href: MonoTorrent.Client.DiskManager.html#MonoTorrent_Client_DiskManager_CacheBytesUsed
  name: CacheBytesUsed
  nameWithType: DiskManager.CacheBytesUsed
  fullName: MonoTorrent.Client.DiskManager.CacheBytesUsed
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int64
  name: long
  nameWithType: long
  fullName: long
  nameWithType.vb: Long
  fullName.vb: Long
  name.vb: Long
- uid: MonoTorrent.Client.DiskManager.OpenFiles*
  commentId: Overload:MonoTorrent.Client.DiskManager.OpenFiles
  href: MonoTorrent.Client.DiskManager.html#MonoTorrent_Client_DiskManager_OpenFiles
  name: OpenFiles
  nameWithType: DiskManager.OpenFiles
  fullName: MonoTorrent.Client.DiskManager.OpenFiles
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: MonoTorrent.Client.DiskManager.MaximumOpenFiles*
  commentId: Overload:MonoTorrent.Client.DiskManager.MaximumOpenFiles
  href: MonoTorrent.Client.DiskManager.html#MonoTorrent_Client_DiskManager_MaximumOpenFiles
  name: MaximumOpenFiles
  nameWithType: DiskManager.MaximumOpenFiles
  fullName: MonoTorrent.Client.DiskManager.MaximumOpenFiles
- uid: MonoTorrent.Client.EngineSettings.MaximumDiskReadRate
  commentId: P:MonoTorrent.Client.EngineSettings.MaximumDiskReadRate
  href: MonoTorrent.Client.EngineSettings.html#MonoTorrent_Client_EngineSettings_MaximumDiskReadRate
  name: MaximumDiskReadRate
  nameWithType: EngineSettings.MaximumDiskReadRate
  fullName: MonoTorrent.Client.EngineSettings.MaximumDiskReadRate
- uid: MonoTorrent.Client.DiskManager.PendingReadBytes*
  commentId: Overload:MonoTorrent.Client.DiskManager.PendingReadBytes
  href: MonoTorrent.Client.DiskManager.html#MonoTorrent_Client_DiskManager_PendingReadBytes
  name: PendingReadBytes
  nameWithType: DiskManager.PendingReadBytes
  fullName: MonoTorrent.Client.DiskManager.PendingReadBytes
- uid: MonoTorrent.Client.EngineSettings.MaximumDiskWriteRate
  commentId: P:MonoTorrent.Client.EngineSettings.MaximumDiskWriteRate
  href: MonoTorrent.Client.EngineSettings.html#MonoTorrent_Client_EngineSettings_MaximumDiskWriteRate
  name: MaximumDiskWriteRate
  nameWithType: EngineSettings.MaximumDiskWriteRate
  fullName: MonoTorrent.Client.EngineSettings.MaximumDiskWriteRate
- uid: MonoTorrent.Client.DiskManager.PendingWriteBytes*
  commentId: Overload:MonoTorrent.Client.DiskManager.PendingWriteBytes
  href: MonoTorrent.Client.DiskManager.html#MonoTorrent_Client_DiskManager_PendingWriteBytes
  name: PendingWriteBytes
  nameWithType: DiskManager.PendingWriteBytes
  fullName: MonoTorrent.Client.DiskManager.PendingWriteBytes
- uid: MonoTorrent.Client.DiskManager.ReadRate*
  commentId: Overload:MonoTorrent.Client.DiskManager.ReadRate
  href: MonoTorrent.Client.DiskManager.html#MonoTorrent_Client_DiskManager_ReadRate
  name: ReadRate
  nameWithType: DiskManager.ReadRate
  fullName: MonoTorrent.Client.DiskManager.ReadRate
- uid: MonoTorrent.Client.DiskManager.WriteRate*
  commentId: Overload:MonoTorrent.Client.DiskManager.WriteRate
  href: MonoTorrent.Client.DiskManager.html#MonoTorrent_Client_DiskManager_WriteRate
  name: WriteRate
  nameWithType: DiskManager.WriteRate
  fullName: MonoTorrent.Client.DiskManager.WriteRate
- uid: MonoTorrent.Client.DiskManager.TotalCacheBytesRead*
  commentId: Overload:MonoTorrent.Client.DiskManager.TotalCacheBytesRead
  href: MonoTorrent.Client.DiskManager.html#MonoTorrent_Client_DiskManager_TotalCacheBytesRead
  name: TotalCacheBytesRead
  nameWithType: DiskManager.TotalCacheBytesRead
  fullName: MonoTorrent.Client.DiskManager.TotalCacheBytesRead
- uid: MonoTorrent.Client.DiskManager.TotalBytesRead*
  commentId: Overload:MonoTorrent.Client.DiskManager.TotalBytesRead
  href: MonoTorrent.Client.DiskManager.html#MonoTorrent_Client_DiskManager_TotalBytesRead
  name: TotalBytesRead
  nameWithType: DiskManager.TotalBytesRead
  fullName: MonoTorrent.Client.DiskManager.TotalBytesRead
- uid: MonoTorrent.Client.DiskManager.TotalBytesWritten*
  commentId: Overload:MonoTorrent.Client.DiskManager.TotalBytesWritten
  href: MonoTorrent.Client.DiskManager.html#MonoTorrent_Client_DiskManager_TotalBytesWritten
  name: TotalBytesWritten
  nameWithType: DiskManager.TotalBytesWritten
  fullName: MonoTorrent.Client.DiskManager.TotalBytesWritten
- uid: MonoTorrent.Client.TorrentManager
  commentId: T:MonoTorrent.Client.TorrentManager
  parent: MonoTorrent.Client
  href: MonoTorrent.Client.TorrentManager.html
  name: TorrentManager
  nameWithType: TorrentManager
  fullName: MonoTorrent.Client.TorrentManager
- uid: MonoTorrent.Client.DiskManager.FlushAsync*
  commentId: Overload:MonoTorrent.Client.DiskManager.FlushAsync
  href: MonoTorrent.Client.DiskManager.html#MonoTorrent_Client_DiskManager_FlushAsync_MonoTorrent_ITorrentManagerInfo_
  name: FlushAsync
  nameWithType: DiskManager.FlushAsync
  fullName: MonoTorrent.Client.DiskManager.FlushAsync
- uid: MonoTorrent.ITorrentManagerInfo
  commentId: T:MonoTorrent.ITorrentManagerInfo
  parent: MonoTorrent
  href: MonoTorrent.ITorrentManagerInfo.html
  name: ITorrentManagerInfo
  nameWithType: ITorrentManagerInfo
  fullName: MonoTorrent.ITorrentManagerInfo
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: MonoTorrent
  commentId: N:MonoTorrent
  href: MonoTorrent.html
  name: MonoTorrent
  nameWithType: MonoTorrent
  fullName: MonoTorrent
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
