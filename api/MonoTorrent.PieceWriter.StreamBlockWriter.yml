### YamlMime:ManagedReference
items:
- uid: MonoTorrent.PieceWriter.StreamBlockWriter
  commentId: T:MonoTorrent.PieceWriter.StreamBlockWriter
  id: StreamBlockWriter
  parent: MonoTorrent.PieceWriter
  children:
  - MonoTorrent.PieceWriter.StreamBlockWriter.#ctor(System.Func{MonoTorrent.ITorrentManagerInfo,ReusableTasks.ReusableTask{System.IO.Stream}})
  - MonoTorrent.PieceWriter.StreamBlockWriter.FlushAsync(MonoTorrent.ITorrentManagerInfo)
  - MonoTorrent.PieceWriter.StreamBlockWriter.WriteAsync(MonoTorrent.ITorrentManagerInfo,System.Int64,System.ReadOnlyMemory{System.Byte})
  langs:
  - csharp
  - vb
  name: StreamBlockWriter
  nameWithType: StreamBlockWriter
  fullName: MonoTorrent.PieceWriter.StreamBlockWriter
  type: Class
  source:
    remote:
      path: MonoTorrent/src/PieceWriter/StreamBlockWriter.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: StreamBlockWriter
    path: src/PieceWriter/StreamBlockWriter.cs
    startLine: 8
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.PieceWriter
  syntax:
    content: 'public class StreamBlockWriter : IBlockWriter'
    content.vb: Public Class StreamBlockWriter Implements IBlockWriter
  inheritance:
  - System.Object
  implements:
  - MonoTorrent.PieceWriter.IBlockWriter
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: MonoTorrent.PieceWriter.StreamBlockWriter.#ctor(System.Func{MonoTorrent.ITorrentManagerInfo,ReusableTasks.ReusableTask{System.IO.Stream}})
  commentId: M:MonoTorrent.PieceWriter.StreamBlockWriter.#ctor(System.Func{MonoTorrent.ITorrentManagerInfo,ReusableTasks.ReusableTask{System.IO.Stream}})
  id: '#ctor(System.Func{MonoTorrent.ITorrentManagerInfo,ReusableTasks.ReusableTask{System.IO.Stream}})'
  parent: MonoTorrent.PieceWriter.StreamBlockWriter
  langs:
  - csharp
  - vb
  name: StreamBlockWriter(Func<ITorrentManagerInfo, ReusableTask<Stream>>)
  nameWithType: StreamBlockWriter.StreamBlockWriter(Func<ITorrentManagerInfo, ReusableTask<Stream>>)
  fullName: MonoTorrent.PieceWriter.StreamBlockWriter.StreamBlockWriter(System.Func<MonoTorrent.ITorrentManagerInfo, ReusableTasks.ReusableTask<System.IO.Stream>>)
  type: Constructor
  source:
    remote:
      path: MonoTorrent/src/PieceWriter/StreamBlockWriter.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: .ctor
    path: src/PieceWriter/StreamBlockWriter.cs
    startLine: 13
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.PieceWriter
  syntax:
    content: public StreamBlockWriter(Func<ITorrentManagerInfo, ReusableTask<Stream>> streamFactory)
    parameters:
    - id: streamFactory
      type: System.Func{MonoTorrent.ITorrentManagerInfo,ReusableTasks.ReusableTask{System.IO.Stream}}
    content.vb: Public Sub New(streamFactory As Func(Of ITorrentManagerInfo, ReusableTask(Of Stream)))
  overload: MonoTorrent.PieceWriter.StreamBlockWriter.#ctor*
  nameWithType.vb: StreamBlockWriter.New(Func(Of ITorrentManagerInfo, ReusableTask(Of Stream)))
  fullName.vb: MonoTorrent.PieceWriter.StreamBlockWriter.New(System.Func(Of MonoTorrent.ITorrentManagerInfo, ReusableTasks.ReusableTask(Of System.IO.Stream)))
  name.vb: New(Func(Of ITorrentManagerInfo, ReusableTask(Of Stream)))
- uid: MonoTorrent.PieceWriter.StreamBlockWriter.WriteAsync(MonoTorrent.ITorrentManagerInfo,System.Int64,System.ReadOnlyMemory{System.Byte})
  commentId: M:MonoTorrent.PieceWriter.StreamBlockWriter.WriteAsync(MonoTorrent.ITorrentManagerInfo,System.Int64,System.ReadOnlyMemory{System.Byte})
  id: WriteAsync(MonoTorrent.ITorrentManagerInfo,System.Int64,System.ReadOnlyMemory{System.Byte})
  parent: MonoTorrent.PieceWriter.StreamBlockWriter
  langs:
  - csharp
  - vb
  name: WriteAsync(ITorrentManagerInfo, long, ReadOnlyMemory<byte>)
  nameWithType: StreamBlockWriter.WriteAsync(ITorrentManagerInfo, long, ReadOnlyMemory<byte>)
  fullName: MonoTorrent.PieceWriter.StreamBlockWriter.WriteAsync(MonoTorrent.ITorrentManagerInfo, long, System.ReadOnlyMemory<byte>)
  type: Method
  source:
    remote:
      path: MonoTorrent/src/PieceWriter/StreamBlockWriter.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: WriteAsync
    path: src/PieceWriter/StreamBlockWriter.cs
    startLine: 18
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.PieceWriter
  example: []
  syntax:
    content: public virtual ReusableTask WriteAsync(ITorrentManagerInfo torrent, long offset, ReadOnlyMemory<byte> buffer)
    parameters:
    - id: torrent
      type: MonoTorrent.ITorrentManagerInfo
    - id: offset
      type: System.Int64
    - id: buffer
      type: System.ReadOnlyMemory{System.Byte}
    return:
      type: ReusableTasks.ReusableTask
    content.vb: Public Overridable Function WriteAsync(torrent As ITorrentManagerInfo, offset As Long, buffer As ReadOnlyMemory(Of Byte)) As ReusableTask
  overload: MonoTorrent.PieceWriter.StreamBlockWriter.WriteAsync*
  implements:
  - MonoTorrent.PieceWriter.IBlockWriter.WriteAsync(MonoTorrent.ITorrentManagerInfo,System.Int64,System.ReadOnlyMemory{System.Byte})
  nameWithType.vb: StreamBlockWriter.WriteAsync(ITorrentManagerInfo, Long, ReadOnlyMemory(Of Byte))
  fullName.vb: MonoTorrent.PieceWriter.StreamBlockWriter.WriteAsync(MonoTorrent.ITorrentManagerInfo, Long, System.ReadOnlyMemory(Of Byte))
  name.vb: WriteAsync(ITorrentManagerInfo, Long, ReadOnlyMemory(Of Byte))
- uid: MonoTorrent.PieceWriter.StreamBlockWriter.FlushAsync(MonoTorrent.ITorrentManagerInfo)
  commentId: M:MonoTorrent.PieceWriter.StreamBlockWriter.FlushAsync(MonoTorrent.ITorrentManagerInfo)
  id: FlushAsync(MonoTorrent.ITorrentManagerInfo)
  parent: MonoTorrent.PieceWriter.StreamBlockWriter
  langs:
  - csharp
  - vb
  name: FlushAsync(ITorrentManagerInfo)
  nameWithType: StreamBlockWriter.FlushAsync(ITorrentManagerInfo)
  fullName: MonoTorrent.PieceWriter.StreamBlockWriter.FlushAsync(MonoTorrent.ITorrentManagerInfo)
  type: Method
  source:
    remote:
      path: MonoTorrent/src/PieceWriter/StreamBlockWriter.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: FlushAsync
    path: src/PieceWriter/StreamBlockWriter.cs
    startLine: 40
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.PieceWriter
  example: []
  syntax:
    content: public virtual ReusableTask FlushAsync(ITorrentManagerInfo torrent)
    parameters:
    - id: torrent
      type: MonoTorrent.ITorrentManagerInfo
    return:
      type: ReusableTasks.ReusableTask
    content.vb: Public Overridable Function FlushAsync(torrent As ITorrentManagerInfo) As ReusableTask
  overload: MonoTorrent.PieceWriter.StreamBlockWriter.FlushAsync*
  implements:
  - MonoTorrent.PieceWriter.IBlockWriter.FlushAsync(MonoTorrent.ITorrentManagerInfo)
references:
- uid: MonoTorrent.PieceWriter
  commentId: N:MonoTorrent.PieceWriter
  href: MonoTorrent.html
  name: MonoTorrent.PieceWriter
  nameWithType: MonoTorrent.PieceWriter
  fullName: MonoTorrent.PieceWriter
  spec.csharp:
  - uid: MonoTorrent
    name: MonoTorrent
    href: MonoTorrent.html
  - name: .
  - uid: MonoTorrent.PieceWriter
    name: PieceWriter
    href: MonoTorrent.PieceWriter.html
  spec.vb:
  - uid: MonoTorrent
    name: MonoTorrent
    href: MonoTorrent.html
  - name: .
  - uid: MonoTorrent.PieceWriter
    name: PieceWriter
    href: MonoTorrent.PieceWriter.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: MonoTorrent.PieceWriter.IBlockWriter
  commentId: T:MonoTorrent.PieceWriter.IBlockWriter
  parent: MonoTorrent.PieceWriter
  href: MonoTorrent.PieceWriter.IBlockWriter.html
  name: IBlockWriter
  nameWithType: IBlockWriter
  fullName: MonoTorrent.PieceWriter.IBlockWriter
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: MonoTorrent.PieceWriter.StreamBlockWriter.#ctor*
  commentId: Overload:MonoTorrent.PieceWriter.StreamBlockWriter.#ctor
  href: MonoTorrent.PieceWriter.StreamBlockWriter.html#MonoTorrent_PieceWriter_StreamBlockWriter__ctor_System_Func_MonoTorrent_ITorrentManagerInfo_ReusableTasks_ReusableTask_System_IO_Stream___
  name: StreamBlockWriter
  nameWithType: StreamBlockWriter.StreamBlockWriter
  fullName: MonoTorrent.PieceWriter.StreamBlockWriter.StreamBlockWriter
  nameWithType.vb: StreamBlockWriter.New
  fullName.vb: MonoTorrent.PieceWriter.StreamBlockWriter.New
  name.vb: New
- uid: System.Func{MonoTorrent.ITorrentManagerInfo,ReusableTasks.ReusableTask{System.IO.Stream}}
  commentId: T:System.Func{MonoTorrent.ITorrentManagerInfo,ReusableTasks.ReusableTask{System.IO.Stream}}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<ITorrentManagerInfo, ReusableTask<Stream>>
  nameWithType: Func<ITorrentManagerInfo, ReusableTask<Stream>>
  fullName: System.Func<MonoTorrent.ITorrentManagerInfo, ReusableTasks.ReusableTask<System.IO.Stream>>
  nameWithType.vb: Func(Of ITorrentManagerInfo, ReusableTask(Of Stream))
  fullName.vb: System.Func(Of MonoTorrent.ITorrentManagerInfo, ReusableTasks.ReusableTask(Of System.IO.Stream))
  name.vb: Func(Of ITorrentManagerInfo, ReusableTask(Of Stream))
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: MonoTorrent.ITorrentManagerInfo
    name: ITorrentManagerInfo
    href: MonoTorrent.ITorrentManagerInfo.html
  - name: ','
  - name: " "
  - uid: ReusableTasks.ReusableTask`1
    name: ReusableTask
    isExternal: true
  - name: <
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: MonoTorrent.ITorrentManagerInfo
    name: ITorrentManagerInfo
    href: MonoTorrent.ITorrentManagerInfo.html
  - name: ','
  - name: " "
  - uid: ReusableTasks.ReusableTask`1
    name: ReusableTask
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream
  - name: )
  - name: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: MonoTorrent.PieceWriter.StreamBlockWriter.WriteAsync*
  commentId: Overload:MonoTorrent.PieceWriter.StreamBlockWriter.WriteAsync
  href: MonoTorrent.PieceWriter.StreamBlockWriter.html#MonoTorrent_PieceWriter_StreamBlockWriter_WriteAsync_MonoTorrent_ITorrentManagerInfo_System_Int64_System_ReadOnlyMemory_System_Byte__
  name: WriteAsync
  nameWithType: StreamBlockWriter.WriteAsync
  fullName: MonoTorrent.PieceWriter.StreamBlockWriter.WriteAsync
- uid: MonoTorrent.PieceWriter.IBlockWriter.WriteAsync(MonoTorrent.ITorrentManagerInfo,System.Int64,System.ReadOnlyMemory{System.Byte})
  commentId: M:MonoTorrent.PieceWriter.IBlockWriter.WriteAsync(MonoTorrent.ITorrentManagerInfo,System.Int64,System.ReadOnlyMemory{System.Byte})
  parent: MonoTorrent.PieceWriter.IBlockWriter
  isExternal: true
  href: MonoTorrent.PieceWriter.IBlockWriter.html#MonoTorrent_PieceWriter_IBlockWriter_WriteAsync_MonoTorrent_ITorrentManagerInfo_System_Int64_System_ReadOnlyMemory_System_Byte__
  name: WriteAsync(ITorrentManagerInfo, long, ReadOnlyMemory<byte>)
  nameWithType: IBlockWriter.WriteAsync(ITorrentManagerInfo, long, ReadOnlyMemory<byte>)
  fullName: MonoTorrent.PieceWriter.IBlockWriter.WriteAsync(MonoTorrent.ITorrentManagerInfo, long, System.ReadOnlyMemory<byte>)
  nameWithType.vb: IBlockWriter.WriteAsync(ITorrentManagerInfo, Long, ReadOnlyMemory(Of Byte))
  fullName.vb: MonoTorrent.PieceWriter.IBlockWriter.WriteAsync(MonoTorrent.ITorrentManagerInfo, Long, System.ReadOnlyMemory(Of Byte))
  name.vb: WriteAsync(ITorrentManagerInfo, Long, ReadOnlyMemory(Of Byte))
  spec.csharp:
  - uid: MonoTorrent.PieceWriter.IBlockWriter.WriteAsync(MonoTorrent.ITorrentManagerInfo,System.Int64,System.ReadOnlyMemory{System.Byte})
    name: WriteAsync
    href: MonoTorrent.PieceWriter.IBlockWriter.html#MonoTorrent_PieceWriter_IBlockWriter_WriteAsync_MonoTorrent_ITorrentManagerInfo_System_Int64_System_ReadOnlyMemory_System_Byte__
  - name: (
  - uid: MonoTorrent.ITorrentManagerInfo
    name: ITorrentManagerInfo
    href: MonoTorrent.ITorrentManagerInfo.html
  - name: ','
  - name: " "
  - uid: System.Int64
    name: long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: ','
  - name: " "
  - uid: System.ReadOnlyMemory`1
    name: ReadOnlyMemory
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlymemory-1
  - name: <
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '>'
  - name: )
  spec.vb:
  - uid: MonoTorrent.PieceWriter.IBlockWriter.WriteAsync(MonoTorrent.ITorrentManagerInfo,System.Int64,System.ReadOnlyMemory{System.Byte})
    name: WriteAsync
    href: MonoTorrent.PieceWriter.IBlockWriter.html#MonoTorrent_PieceWriter_IBlockWriter_WriteAsync_MonoTorrent_ITorrentManagerInfo_System_Int64_System_ReadOnlyMemory_System_Byte__
  - name: (
  - uid: MonoTorrent.ITorrentManagerInfo
    name: ITorrentManagerInfo
    href: MonoTorrent.ITorrentManagerInfo.html
  - name: ','
  - name: " "
  - uid: System.Int64
    name: Long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: ','
  - name: " "
  - uid: System.ReadOnlyMemory`1
    name: ReadOnlyMemory
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlymemory-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: )
  - name: )
- uid: MonoTorrent.ITorrentManagerInfo
  commentId: T:MonoTorrent.ITorrentManagerInfo
  parent: MonoTorrent
  href: MonoTorrent.ITorrentManagerInfo.html
  name: ITorrentManagerInfo
  nameWithType: ITorrentManagerInfo
  fullName: MonoTorrent.ITorrentManagerInfo
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int64
  name: long
  nameWithType: long
  fullName: long
  nameWithType.vb: Long
  fullName.vb: Long
  name.vb: Long
- uid: System.ReadOnlyMemory{System.Byte}
  commentId: T:System.ReadOnlyMemory{System.Byte}
  parent: System
  definition: System.ReadOnlyMemory`1
  href: https://learn.microsoft.com/dotnet/api/system.readonlymemory-1
  name: ReadOnlyMemory<byte>
  nameWithType: ReadOnlyMemory<byte>
  fullName: System.ReadOnlyMemory<byte>
  nameWithType.vb: ReadOnlyMemory(Of Byte)
  fullName.vb: System.ReadOnlyMemory(Of Byte)
  name.vb: ReadOnlyMemory(Of Byte)
  spec.csharp:
  - uid: System.ReadOnlyMemory`1
    name: ReadOnlyMemory
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlymemory-1
  - name: <
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '>'
  spec.vb:
  - uid: System.ReadOnlyMemory`1
    name: ReadOnlyMemory
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlymemory-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: )
- uid: ReusableTasks.ReusableTask
  commentId: T:ReusableTasks.ReusableTask
  parent: ReusableTasks
  isExternal: true
  name: ReusableTask
  nameWithType: ReusableTask
  fullName: ReusableTasks.ReusableTask
- uid: MonoTorrent
  commentId: N:MonoTorrent
  href: MonoTorrent.html
  name: MonoTorrent
  nameWithType: MonoTorrent
  fullName: MonoTorrent
- uid: System.ReadOnlyMemory`1
  commentId: T:System.ReadOnlyMemory`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.readonlymemory-1
  name: ReadOnlyMemory<T>
  nameWithType: ReadOnlyMemory<T>
  fullName: System.ReadOnlyMemory<T>
  nameWithType.vb: ReadOnlyMemory(Of T)
  fullName.vb: System.ReadOnlyMemory(Of T)
  name.vb: ReadOnlyMemory(Of T)
  spec.csharp:
  - uid: System.ReadOnlyMemory`1
    name: ReadOnlyMemory
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlymemory-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.ReadOnlyMemory`1
    name: ReadOnlyMemory
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlymemory-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: ReusableTasks
  commentId: N:ReusableTasks
  isExternal: true
  name: ReusableTasks
  nameWithType: ReusableTasks
  fullName: ReusableTasks
- uid: MonoTorrent.PieceWriter.StreamBlockWriter.FlushAsync*
  commentId: Overload:MonoTorrent.PieceWriter.StreamBlockWriter.FlushAsync
  href: MonoTorrent.PieceWriter.StreamBlockWriter.html#MonoTorrent_PieceWriter_StreamBlockWriter_FlushAsync_MonoTorrent_ITorrentManagerInfo_
  name: FlushAsync
  nameWithType: StreamBlockWriter.FlushAsync
  fullName: MonoTorrent.PieceWriter.StreamBlockWriter.FlushAsync
- uid: MonoTorrent.PieceWriter.IBlockWriter.FlushAsync(MonoTorrent.ITorrentManagerInfo)
  commentId: M:MonoTorrent.PieceWriter.IBlockWriter.FlushAsync(MonoTorrent.ITorrentManagerInfo)
  parent: MonoTorrent.PieceWriter.IBlockWriter
  href: MonoTorrent.PieceWriter.IBlockWriter.html#MonoTorrent_PieceWriter_IBlockWriter_FlushAsync_MonoTorrent_ITorrentManagerInfo_
  name: FlushAsync(ITorrentManagerInfo)
  nameWithType: IBlockWriter.FlushAsync(ITorrentManagerInfo)
  fullName: MonoTorrent.PieceWriter.IBlockWriter.FlushAsync(MonoTorrent.ITorrentManagerInfo)
  spec.csharp:
  - uid: MonoTorrent.PieceWriter.IBlockWriter.FlushAsync(MonoTorrent.ITorrentManagerInfo)
    name: FlushAsync
    href: MonoTorrent.PieceWriter.IBlockWriter.html#MonoTorrent_PieceWriter_IBlockWriter_FlushAsync_MonoTorrent_ITorrentManagerInfo_
  - name: (
  - uid: MonoTorrent.ITorrentManagerInfo
    name: ITorrentManagerInfo
    href: MonoTorrent.ITorrentManagerInfo.html
  - name: )
  spec.vb:
  - uid: MonoTorrent.PieceWriter.IBlockWriter.FlushAsync(MonoTorrent.ITorrentManagerInfo)
    name: FlushAsync
    href: MonoTorrent.PieceWriter.IBlockWriter.html#MonoTorrent_PieceWriter_IBlockWriter_FlushAsync_MonoTorrent_ITorrentManagerInfo_
  - name: (
  - uid: MonoTorrent.ITorrentManagerInfo
    name: ITorrentManagerInfo
    href: MonoTorrent.ITorrentManagerInfo.html
  - name: )
