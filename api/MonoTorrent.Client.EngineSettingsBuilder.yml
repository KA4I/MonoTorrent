### YamlMime:ManagedReference
items:
- uid: MonoTorrent.Client.EngineSettingsBuilder
  commentId: T:MonoTorrent.Client.EngineSettingsBuilder
  id: EngineSettingsBuilder
  parent: MonoTorrent.Client
  children:
  - MonoTorrent.Client.EngineSettingsBuilder.#ctor
  - MonoTorrent.Client.EngineSettingsBuilder.#ctor(MonoTorrent.Client.EngineSettings)
  - MonoTorrent.Client.EngineSettingsBuilder.AllowHaveSuppression
  - MonoTorrent.Client.EngineSettingsBuilder.AllowLocalPeerDiscovery
  - MonoTorrent.Client.EngineSettingsBuilder.AllowMultipleTorrentInstances
  - MonoTorrent.Client.EngineSettingsBuilder.AllowOutgoingConnections
  - MonoTorrent.Client.EngineSettingsBuilder.AllowPortForwarding
  - MonoTorrent.Client.EngineSettingsBuilder.AllowUploadingOnOutgoingConnections
  - MonoTorrent.Client.EngineSettingsBuilder.AllowedEncryption
  - MonoTorrent.Client.EngineSettingsBuilder.AutoSaveLoadDhtCache
  - MonoTorrent.Client.EngineSettingsBuilder.AutoSaveLoadFastResume
  - MonoTorrent.Client.EngineSettingsBuilder.AutoSaveLoadMagnetLinkMetadata
  - MonoTorrent.Client.EngineSettingsBuilder.CacheDirectory
  - MonoTorrent.Client.EngineSettingsBuilder.ChokeReviewInterval
  - MonoTorrent.Client.EngineSettingsBuilder.ConnectionRetryDelays
  - MonoTorrent.Client.EngineSettingsBuilder.ConnectionTimeout
  - MonoTorrent.Client.EngineSettingsBuilder.DhtEndPoint
  - MonoTorrent.Client.EngineSettingsBuilder.DiskCacheBytes
  - MonoTorrent.Client.EngineSettingsBuilder.DiskCachePolicy
  - MonoTorrent.Client.EngineSettingsBuilder.FastResumeMode
  - MonoTorrent.Client.EngineSettingsBuilder.FileCreationMode
  - MonoTorrent.Client.EngineSettingsBuilder.HttpStreamingPrefix
  - MonoTorrent.Client.EngineSettingsBuilder.ListenEndPoints
  - MonoTorrent.Client.EngineSettingsBuilder.MaximumConnections
  - MonoTorrent.Client.EngineSettingsBuilder.MaximumDiskReadRate
  - MonoTorrent.Client.EngineSettingsBuilder.MaximumDiskWriteRate
  - MonoTorrent.Client.EngineSettingsBuilder.MaximumDownloadRate
  - MonoTorrent.Client.EngineSettingsBuilder.MaximumHalfOpenConnections
  - MonoTorrent.Client.EngineSettingsBuilder.MaximumOpenFiles
  - MonoTorrent.Client.EngineSettingsBuilder.MaximumRepeatedHashFails
  - MonoTorrent.Client.EngineSettingsBuilder.MaximumTotalHashFails
  - MonoTorrent.Client.EngineSettingsBuilder.MaximumUploadRate
  - MonoTorrent.Client.EngineSettingsBuilder.MutableTorrentUpdateInterval
  - MonoTorrent.Client.EngineSettingsBuilder.ReportedListenEndPoints
  - MonoTorrent.Client.EngineSettingsBuilder.StaleRequestTimeout
  - MonoTorrent.Client.EngineSettingsBuilder.ToSettings
  - MonoTorrent.Client.EngineSettingsBuilder.UsePartialFiles
  - MonoTorrent.Client.EngineSettingsBuilder.WebSeedConnectionTimeout
  - MonoTorrent.Client.EngineSettingsBuilder.WebSeedDelay
  - MonoTorrent.Client.EngineSettingsBuilder.WebSeedSpeedTrigger
  langs:
  - csharp
  - vb
  name: EngineSettingsBuilder
  nameWithType: EngineSettingsBuilder
  fullName: MonoTorrent.Client.EngineSettingsBuilder
  type: Class
  source:
    remote:
      path: MonoTorrent/src/Client/Settings/EngineSettingsBuilder.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: EngineSettingsBuilder
    path: src/Client/Settings/EngineSettingsBuilder.cs
    startLine: 44
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.Client
  summary: Represents the Settings which need to be passed to the engine
  example: []
  syntax:
    content: public class EngineSettingsBuilder
    content.vb: Public Class EngineSettingsBuilder
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: MonoTorrent.Client.EngineSettingsBuilder.AllowedEncryption
  commentId: P:MonoTorrent.Client.EngineSettingsBuilder.AllowedEncryption
  id: AllowedEncryption
  parent: MonoTorrent.Client.EngineSettingsBuilder
  langs:
  - csharp
  - vb
  name: AllowedEncryption
  nameWithType: EngineSettingsBuilder.AllowedEncryption
  fullName: MonoTorrent.Client.EngineSettingsBuilder.AllowedEncryption
  type: Property
  source:
    remote:
      path: MonoTorrent/src/Client/Settings/EngineSettingsBuilder.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: AllowedEncryption
    path: src/Client/Settings/EngineSettingsBuilder.cs
    startLine: 69
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.Client
  summary: >-
    A prioritised list of encryption methods, including plain text, which can be used to connect to another peer.

    Connections will be attempted in the same order as they are in the list. Defaults to <xref href="MonoTorrent.Connections.EncryptionType.RC4Header" data-throw-if-not-resolved="false"></xref>,

    <xref href="MonoTorrent.Connections.EncryptionType.RC4Full" data-throw-if-not-resolved="false"></xref> and <xref href="MonoTorrent.Connections.EncryptionType.PlainText" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public List<EncryptionType> AllowedEncryption { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{MonoTorrent.Connections.EncryptionType}
    content.vb: Public Property AllowedEncryption As List(Of EncryptionType)
  overload: MonoTorrent.Client.EngineSettingsBuilder.AllowedEncryption*
- uid: MonoTorrent.Client.EngineSettingsBuilder.AllowHaveSuppression
  commentId: P:MonoTorrent.Client.EngineSettingsBuilder.AllowHaveSuppression
  id: AllowHaveSuppression
  parent: MonoTorrent.Client.EngineSettingsBuilder
  langs:
  - csharp
  - vb
  name: AllowHaveSuppression
  nameWithType: EngineSettingsBuilder.AllowHaveSuppression
  fullName: MonoTorrent.Client.EngineSettingsBuilder.AllowHaveSuppression
  type: Property
  source:
    remote:
      path: MonoTorrent/src/Client/Settings/EngineSettingsBuilder.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: AllowHaveSuppression
    path: src/Client/Settings/EngineSettingsBuilder.cs
    startLine: 76
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.Client
  summary: >-
    Have suppression reduces the number of Have messages being sent by only sending Have messages to peers

    which do not already have that piece. A peer will never request a piece they have already downloaded,

    so informing them that we have that piece is not beneficial. Defaults to <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
  example: []
  syntax:
    content: public bool AllowHaveSuppression { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property AllowHaveSuppression As Boolean
  overload: MonoTorrent.Client.EngineSettingsBuilder.AllowHaveSuppression*
- uid: MonoTorrent.Client.EngineSettingsBuilder.AllowLocalPeerDiscovery
  commentId: P:MonoTorrent.Client.EngineSettingsBuilder.AllowLocalPeerDiscovery
  id: AllowLocalPeerDiscovery
  parent: MonoTorrent.Client.EngineSettingsBuilder
  langs:
  - csharp
  - vb
  name: AllowLocalPeerDiscovery
  nameWithType: EngineSettingsBuilder.AllowLocalPeerDiscovery
  fullName: MonoTorrent.Client.EngineSettingsBuilder.AllowLocalPeerDiscovery
  type: Property
  source:
    remote:
      path: MonoTorrent/src/Client/Settings/EngineSettingsBuilder.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: AllowLocalPeerDiscovery
    path: src/Client/Settings/EngineSettingsBuilder.cs
    startLine: 81
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.Client
  summary: True if the engine should use LocalPeerDiscovery to search for local peers. Defaults to <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a>.
  example: []
  syntax:
    content: public bool AllowLocalPeerDiscovery { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property AllowLocalPeerDiscovery As Boolean
  overload: MonoTorrent.Client.EngineSettingsBuilder.AllowLocalPeerDiscovery*
- uid: MonoTorrent.Client.EngineSettingsBuilder.AllowMultipleTorrentInstances
  commentId: P:MonoTorrent.Client.EngineSettingsBuilder.AllowMultipleTorrentInstances
  id: AllowMultipleTorrentInstances
  parent: MonoTorrent.Client.EngineSettingsBuilder
  langs:
  - csharp
  - vb
  name: AllowMultipleTorrentInstances
  nameWithType: EngineSettingsBuilder.AllowMultipleTorrentInstances
  fullName: MonoTorrent.Client.EngineSettingsBuilder.AllowMultipleTorrentInstances
  type: Property
  source:
    remote:
      path: MonoTorrent/src/Client/Settings/EngineSettingsBuilder.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: AllowMultipleTorrentInstances
    path: src/Client/Settings/EngineSettingsBuilder.cs
    startLine: 86
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.Client
  summary: True if the engine should allow multiple instances of the same torrent to be added to the engine.
  example: []
  syntax:
    content: public bool AllowMultipleTorrentInstances { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property AllowMultipleTorrentInstances As Boolean
  overload: MonoTorrent.Client.EngineSettingsBuilder.AllowMultipleTorrentInstances*
- uid: MonoTorrent.Client.EngineSettingsBuilder.AllowPortForwarding
  commentId: P:MonoTorrent.Client.EngineSettingsBuilder.AllowPortForwarding
  id: AllowPortForwarding
  parent: MonoTorrent.Client.EngineSettingsBuilder
  langs:
  - csharp
  - vb
  name: AllowPortForwarding
  nameWithType: EngineSettingsBuilder.AllowPortForwarding
  fullName: MonoTorrent.Client.EngineSettingsBuilder.AllowPortForwarding
  type: Property
  source:
    remote:
      path: MonoTorrent/src/Client/Settings/EngineSettingsBuilder.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: AllowPortForwarding
    path: src/Client/Settings/EngineSettingsBuilder.cs
    startLine: 92
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.Client
  summary: >-
    True if the engine should automatically forward ports using any compatible UPnP or NAT-PMP device.

    Defaults to <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a>.
  example: []
  syntax:
    content: public bool AllowPortForwarding { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property AllowPortForwarding As Boolean
  overload: MonoTorrent.Client.EngineSettingsBuilder.AllowPortForwarding*
- uid: MonoTorrent.Client.EngineSettingsBuilder.AutoSaveLoadDhtCache
  commentId: P:MonoTorrent.Client.EngineSettingsBuilder.AutoSaveLoadDhtCache
  id: AutoSaveLoadDhtCache
  parent: MonoTorrent.Client.EngineSettingsBuilder
  langs:
  - csharp
  - vb
  name: AutoSaveLoadDhtCache
  nameWithType: EngineSettingsBuilder.AutoSaveLoadDhtCache
  fullName: MonoTorrent.Client.EngineSettingsBuilder.AutoSaveLoadDhtCache
  type: Property
  source:
    remote:
      path: MonoTorrent/src/Client/Settings/EngineSettingsBuilder.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: AutoSaveLoadDhtCache
    path: src/Client/Settings/EngineSettingsBuilder.cs
    startLine: 100
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.Client
  summary: >-
    If set to true dht nodes will be implicitly saved when there are no active <xref href="MonoTorrent.Client.TorrentManager" data-throw-if-not-resolved="false"></xref> instances in the engine.

    Dht nodes will be restored when the first <xref href="MonoTorrent.Client.TorrentManager" data-throw-if-not-resolved="false"></xref> is started. Otherwise dht nodes will not be cached between

    restarts and the <xref href="MonoTorrent.Dht.IDhtEngine" data-throw-if-not-resolved="false"></xref> will have to bootstrap from scratch each time.

    Defaults to <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a>.
  example: []
  syntax:
    content: public bool AutoSaveLoadDhtCache { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property AutoSaveLoadDhtCache As Boolean
  overload: MonoTorrent.Client.EngineSettingsBuilder.AutoSaveLoadDhtCache*
- uid: MonoTorrent.Client.EngineSettingsBuilder.AutoSaveLoadFastResume
  commentId: P:MonoTorrent.Client.EngineSettingsBuilder.AutoSaveLoadFastResume
  id: AutoSaveLoadFastResume
  parent: MonoTorrent.Client.EngineSettingsBuilder
  langs:
  - csharp
  - vb
  name: AutoSaveLoadFastResume
  nameWithType: EngineSettingsBuilder.AutoSaveLoadFastResume
  fullName: MonoTorrent.Client.EngineSettingsBuilder.AutoSaveLoadFastResume
  type: Property
  source:
    remote:
      path: MonoTorrent/src/Client/Settings/EngineSettingsBuilder.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: AutoSaveLoadFastResume
    path: src/Client/Settings/EngineSettingsBuilder.cs
    startLine: 109
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.Client
  summary: >-
    If set to true FastResume data will be implicitly saved after <xref href="MonoTorrent.Client.TorrentManager.StopAsync" data-throw-if-not-resolved="false"></xref> is invoked,

    and will be implicitly loaded before the <xref href="MonoTorrent.Client.TorrentManager" data-throw-if-not-resolved="false"></xref> is returned by <xref href="MonoTorrent.Client.ClientEngine.AddAsync(MonoTorrent.MagnetLink%2cSystem.String)" data-throw-if-not-resolved="false"></xref>

    Otherwise fast resume data will not be saved or restored and <xref href="MonoTorrent.Client.TorrentManager" data-throw-if-not-resolved="false"></xref>

    instances will have to perform a full hash check when they start.

    Defaults to <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a>.
  example: []
  syntax:
    content: public bool AutoSaveLoadFastResume { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property AutoSaveLoadFastResume As Boolean
  overload: MonoTorrent.Client.EngineSettingsBuilder.AutoSaveLoadFastResume*
- uid: MonoTorrent.Client.EngineSettingsBuilder.AutoSaveLoadMagnetLinkMetadata
  commentId: P:MonoTorrent.Client.EngineSettingsBuilder.AutoSaveLoadMagnetLinkMetadata
  id: AutoSaveLoadMagnetLinkMetadata
  parent: MonoTorrent.Client.EngineSettingsBuilder
  langs:
  - csharp
  - vb
  name: AutoSaveLoadMagnetLinkMetadata
  nameWithType: EngineSettingsBuilder.AutoSaveLoadMagnetLinkMetadata
  fullName: MonoTorrent.Client.EngineSettingsBuilder.AutoSaveLoadMagnetLinkMetadata
  type: Property
  source:
    remote:
      path: MonoTorrent/src/Client/Settings/EngineSettingsBuilder.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: AutoSaveLoadMagnetLinkMetadata
    path: src/Client/Settings/EngineSettingsBuilder.cs
    startLine: 118
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.Client
  summary: >-
    This setting affects torrents downloaded using a <xref href="MonoTorrent.MagnetLink" data-throw-if-not-resolved="false"></xref>. When enabled, metadata for the torrent will be loaded

    from <xref href="MonoTorrent.Client.EngineSettings.MetadataCacheDirectory" data-throw-if-not-resolved="false"></xref>, if it exists, when the <xref href="MonoTorrent.MagnetLink" data-throw-if-not-resolved="false"></xref> is added to the engine using

    <xref href="MonoTorrent.Client.ClientEngine.AddAsync(MonoTorrent.MagnetLink%2cSystem.String)" data-throw-if-not-resolved="false"></xref>. Additionally, metadata will be written to this directory if it is successfully retrieved

    from peers so future downloads can start immediately.

    Defaults to <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a>.
  example: []
  syntax:
    content: public bool AutoSaveLoadMagnetLinkMetadata { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property AutoSaveLoadMagnetLinkMetadata As Boolean
  overload: MonoTorrent.Client.EngineSettingsBuilder.AutoSaveLoadMagnetLinkMetadata*
- uid: MonoTorrent.Client.EngineSettingsBuilder.AllowOutgoingConnections
  commentId: P:MonoTorrent.Client.EngineSettingsBuilder.AllowOutgoingConnections
  id: AllowOutgoingConnections
  parent: MonoTorrent.Client.EngineSettingsBuilder
  langs:
  - csharp
  - vb
  name: AllowOutgoingConnections
  nameWithType: EngineSettingsBuilder.AllowOutgoingConnections
  fullName: MonoTorrent.Client.EngineSettingsBuilder.AllowOutgoingConnections
  type: Property
  source:
    remote:
      path: MonoTorrent/src/Client/Settings/EngineSettingsBuilder.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: AllowOutgoingConnections
    path: src/Client/Settings/EngineSettingsBuilder.cs
    startLine: 120
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.Client
  syntax:
    content: public bool AllowOutgoingConnections { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property AllowOutgoingConnections As Boolean
  overload: MonoTorrent.Client.EngineSettingsBuilder.AllowOutgoingConnections*
- uid: MonoTorrent.Client.EngineSettingsBuilder.AllowUploadingOnOutgoingConnections
  commentId: P:MonoTorrent.Client.EngineSettingsBuilder.AllowUploadingOnOutgoingConnections
  id: AllowUploadingOnOutgoingConnections
  parent: MonoTorrent.Client.EngineSettingsBuilder
  langs:
  - csharp
  - vb
  name: AllowUploadingOnOutgoingConnections
  nameWithType: EngineSettingsBuilder.AllowUploadingOnOutgoingConnections
  fullName: MonoTorrent.Client.EngineSettingsBuilder.AllowUploadingOnOutgoingConnections
  type: Property
  source:
    remote:
      path: MonoTorrent/src/Client/Settings/EngineSettingsBuilder.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: AllowUploadingOnOutgoingConnections
    path: src/Client/Settings/EngineSettingsBuilder.cs
    startLine: 126
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.Client
  summary: >-
    If set to <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> then the engine will never share pieces with peers we connected to ourselves.

    Defaults to <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a>.
  example: []
  syntax:
    content: public bool AllowUploadingOnOutgoingConnections { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property AllowUploadingOnOutgoingConnections As Boolean
  overload: MonoTorrent.Client.EngineSettingsBuilder.AllowUploadingOnOutgoingConnections*
- uid: MonoTorrent.Client.EngineSettingsBuilder.CacheDirectory
  commentId: P:MonoTorrent.Client.EngineSettingsBuilder.CacheDirectory
  id: CacheDirectory
  parent: MonoTorrent.Client.EngineSettingsBuilder
  langs:
  - csharp
  - vb
  name: CacheDirectory
  nameWithType: EngineSettingsBuilder.CacheDirectory
  fullName: MonoTorrent.Client.EngineSettingsBuilder.CacheDirectory
  type: Property
  source:
    remote:
      path: MonoTorrent/src/Client/Settings/EngineSettingsBuilder.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: CacheDirectory
    path: src/Client/Settings/EngineSettingsBuilder.cs
    startLine: 136
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.Client
  summary: >-
    The directory used to cache any data needed by the engine. Typically used to store a

    cache of the DHT table to improve bootstrapping speed, any metadata downloaded

    using a magnet link, or fast resume data for individual torrents.

    When <xref href="MonoTorrent.Client.EngineSettingsBuilder.ToSettings" data-throw-if-not-resolved="false"></xref> is invoked the value will be converted to a full path

    if it is not already a full path, or will be replaced with

    <xref href="System.Environment.CurrentDirectory" data-throw-if-not-resolved="false"></xref> if the value is null or empty.
  example: []
  syntax:
    content: public string CacheDirectory { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property CacheDirectory As String
  overload: MonoTorrent.Client.EngineSettingsBuilder.CacheDirectory*
- uid: MonoTorrent.Client.EngineSettingsBuilder.ChokeReviewInterval
  commentId: P:MonoTorrent.Client.EngineSettingsBuilder.ChokeReviewInterval
  id: ChokeReviewInterval
  parent: MonoTorrent.Client.EngineSettingsBuilder
  langs:
  - csharp
  - vb
  name: ChokeReviewInterval
  nameWithType: EngineSettingsBuilder.ChokeReviewInterval
  fullName: MonoTorrent.Client.EngineSettingsBuilder.ChokeReviewInterval
  type: Property
  source:
    remote:
      path: MonoTorrent/src/Client/Settings/EngineSettingsBuilder.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: ChokeReviewInterval
    path: src/Client/Settings/EngineSettingsBuilder.cs
    startLine: 142
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.Client
  summary: The time between choke/unchoke reviews. Defaults to 30 seconds.
  example: []
  syntax:
    content: public TimeSpan ChokeReviewInterval { get; set; }
    parameters: []
    return:
      type: System.TimeSpan
    content.vb: Public Property ChokeReviewInterval As TimeSpan
  overload: MonoTorrent.Client.EngineSettingsBuilder.ChokeReviewInterval*
- uid: MonoTorrent.Client.EngineSettingsBuilder.ConnectionRetryDelays
  commentId: P:MonoTorrent.Client.EngineSettingsBuilder.ConnectionRetryDelays
  id: ConnectionRetryDelays
  parent: MonoTorrent.Client.EngineSettingsBuilder
  langs:
  - csharp
  - vb
  name: ConnectionRetryDelays
  nameWithType: EngineSettingsBuilder.ConnectionRetryDelays
  fullName: MonoTorrent.Client.EngineSettingsBuilder.ConnectionRetryDelays
  type: Property
  source:
    remote:
      path: MonoTorrent/src/Client/Settings/EngineSettingsBuilder.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: ConnectionRetryDelays
    path: src/Client/Settings/EngineSettingsBuilder.cs
    startLine: 153
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.Client
  summary: >-
    The delay between each retry when attempting to establish an outgoing connection attempt to a given peer.

    Typically an array of length 4 specifying a delay of of 10s, 30s, 60s and 120s. This allows 1 initial attempt

    and four retries. If a connection cannot be established after exhausting all retries, the peer's information

    will be discarded.
  example: []
  syntax:
    content: public List<TimeSpan> ConnectionRetryDelays { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{System.TimeSpan}
    content.vb: Public Property ConnectionRetryDelays As List(Of TimeSpan)
  overload: MonoTorrent.Client.EngineSettingsBuilder.ConnectionRetryDelays*
- uid: MonoTorrent.Client.EngineSettingsBuilder.ConnectionTimeout
  commentId: P:MonoTorrent.Client.EngineSettingsBuilder.ConnectionTimeout
  id: ConnectionTimeout
  parent: MonoTorrent.Client.EngineSettingsBuilder
  langs:
  - csharp
  - vb
  name: ConnectionTimeout
  nameWithType: EngineSettingsBuilder.ConnectionTimeout
  fullName: MonoTorrent.Client.EngineSettingsBuilder.ConnectionTimeout
  type: Property
  source:
    remote:
      path: MonoTorrent/src/Client/Settings/EngineSettingsBuilder.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: ConnectionTimeout
    path: src/Client/Settings/EngineSettingsBuilder.cs
    startLine: 160
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.Client
  summary: >-
    If a connection attempt does not complete within the given timeout, it will be cancelled so

    a connection can be attempted with a new peer. Defaults to 10 seconds. It is highly recommended

    to keep this value within a range of 7-15 seconds unless absolutely necessary.
  example: []
  syntax:
    content: public TimeSpan ConnectionTimeout { get; set; }
    parameters: []
    return:
      type: System.TimeSpan
    content.vb: Public Property ConnectionTimeout As TimeSpan
  overload: MonoTorrent.Client.EngineSettingsBuilder.ConnectionTimeout*
- uid: MonoTorrent.Client.EngineSettingsBuilder.DiskCacheBytes
  commentId: P:MonoTorrent.Client.EngineSettingsBuilder.DiskCacheBytes
  id: DiskCacheBytes
  parent: MonoTorrent.Client.EngineSettingsBuilder
  langs:
  - csharp
  - vb
  name: DiskCacheBytes
  nameWithType: EngineSettingsBuilder.DiskCacheBytes
  fullName: MonoTorrent.Client.EngineSettingsBuilder.DiskCacheBytes
  type: Property
  source:
    remote:
      path: MonoTorrent/src/Client/Settings/EngineSettingsBuilder.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: DiskCacheBytes
    path: src/Client/Settings/EngineSettingsBuilder.cs
    startLine: 174
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.Client
  summary: >-
    Creates a cache which buffers data before it's written to the disk, or after it's been read from disk.

    Set to 0 to disable the cache.

    Defaults to 5MB.
  example: []
  syntax:
    content: public int DiskCacheBytes { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property DiskCacheBytes As Integer
  overload: MonoTorrent.Client.EngineSettingsBuilder.DiskCacheBytes*
- uid: MonoTorrent.Client.EngineSettingsBuilder.DiskCachePolicy
  commentId: P:MonoTorrent.Client.EngineSettingsBuilder.DiskCachePolicy
  id: DiskCachePolicy
  parent: MonoTorrent.Client.EngineSettingsBuilder
  langs:
  - csharp
  - vb
  name: DiskCachePolicy
  nameWithType: EngineSettingsBuilder.DiskCachePolicy
  fullName: MonoTorrent.Client.EngineSettingsBuilder.DiskCachePolicy
  type: Property
  source:
    remote:
      path: MonoTorrent/src/Client/Settings/EngineSettingsBuilder.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: DiskCachePolicy
    path: src/Client/Settings/EngineSettingsBuilder.cs
    startLine: 183
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.Client
  summary: Determines if writes should be cached, or if reads and writes should be cached.
  example: []
  syntax:
    content: public CachePolicy DiskCachePolicy { get; set; }
    parameters: []
    return:
      type: MonoTorrent.PieceWriter.CachePolicy
    content.vb: Public Property DiskCachePolicy As CachePolicy
  overload: MonoTorrent.Client.EngineSettingsBuilder.DiskCachePolicy*
- uid: MonoTorrent.Client.EngineSettingsBuilder.DhtEndPoint
  commentId: P:MonoTorrent.Client.EngineSettingsBuilder.DhtEndPoint
  id: DhtEndPoint
  parent: MonoTorrent.Client.EngineSettingsBuilder
  langs:
  - csharp
  - vb
  name: DhtEndPoint
  nameWithType: EngineSettingsBuilder.DhtEndPoint
  fullName: MonoTorrent.Client.EngineSettingsBuilder.DhtEndPoint
  type: Property
  source:
    remote:
      path: MonoTorrent/src/Client/Settings/EngineSettingsBuilder.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: DhtEndPoint
    path: src/Client/Settings/EngineSettingsBuilder.cs
    startLine: 189
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.Client
  summary: >-
    The UDP port used for DHT communications. Use 0 to choose a random available port.

    Choose -1 to disable DHT. Defaults to 0.
  example: []
  syntax:
    content: public IPEndPoint? DhtEndPoint { get; set; }
    parameters: []
    return:
      type: System.Net.IPEndPoint
    content.vb: Public Property DhtEndPoint As IPEndPoint
  overload: MonoTorrent.Client.EngineSettingsBuilder.DhtEndPoint*
- uid: MonoTorrent.Client.EngineSettingsBuilder.FastResumeMode
  commentId: P:MonoTorrent.Client.EngineSettingsBuilder.FastResumeMode
  id: FastResumeMode
  parent: MonoTorrent.Client.EngineSettingsBuilder
  langs:
  - csharp
  - vb
  name: FastResumeMode
  nameWithType: EngineSettingsBuilder.FastResumeMode
  fullName: MonoTorrent.Client.EngineSettingsBuilder.FastResumeMode
  type: Property
  source:
    remote:
      path: MonoTorrent/src/Client/Settings/EngineSettingsBuilder.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: FastResumeMode
    path: src/Client/Settings/EngineSettingsBuilder.cs
    startLine: 200
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.Client
  summary: >-
    When <xref href="MonoTorrent.Client.EngineSettings.AutoSaveLoadFastResume" data-throw-if-not-resolved="false"></xref> is true, this setting is used to control how fast

    resume data is maintained, otherwise it has no effect. You can prioritise accuracy (at the risk of requiring full hash checks if an actively downloading

    torrent does not cleanly enter the <xref href="MonoTorrent.Client.TorrentState.Stopped" data-throw-if-not-resolved="false"></xref> state) by choosing <xref href="MonoTorrent.Client.FastResumeMode.Accurate" data-throw-if-not-resolved="false"></xref>.

    You can prioritise torrent start speed (at the risk of re-downloading a small amount of data) by choosing <xref href="MonoTorrent.Client.FastResumeMode.BestEffort" data-throw-if-not-resolved="false"></xref>,

    in which case a recent, not not 100% accurate, copy of the fast resume data will be loaded whenever it is available. if an actively downloading Torrent does not

    cleanly enter the <xref href="MonoTorrent.Client.TorrentState.Stopped" data-throw-if-not-resolved="false"></xref> state.

    Defaults to <xref href="MonoTorrent.Client.FastResumeMode.BestEffort" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public FastResumeMode FastResumeMode { get; set; }
    parameters: []
    return:
      type: MonoTorrent.Client.FastResumeMode
    content.vb: Public Property FastResumeMode As FastResumeMode
  overload: MonoTorrent.Client.EngineSettingsBuilder.FastResumeMode*
- uid: MonoTorrent.Client.EngineSettingsBuilder.FileCreationMode
  commentId: P:MonoTorrent.Client.EngineSettingsBuilder.FileCreationMode
  id: FileCreationMode
  parent: MonoTorrent.Client.EngineSettingsBuilder
  langs:
  - csharp
  - vb
  name: FileCreationMode
  nameWithType: EngineSettingsBuilder.FileCreationMode
  fullName: MonoTorrent.Client.EngineSettingsBuilder.FileCreationMode
  type: Property
  source:
    remote:
      path: MonoTorrent/src/Client/Settings/EngineSettingsBuilder.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: FileCreationMode
    path: src/Client/Settings/EngineSettingsBuilder.cs
    startLine: 205
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.Client
  summary: Sets the preferred approach to creating new files.
  example: []
  syntax:
    content: public FileCreationOptions FileCreationMode { get; set; }
    parameters: []
    return:
      type: MonoTorrent.PieceWriter.FileCreationOptions
    content.vb: Public Property FileCreationMode As FileCreationOptions
  overload: MonoTorrent.Client.EngineSettingsBuilder.FileCreationMode*
- uid: MonoTorrent.Client.EngineSettingsBuilder.HttpStreamingPrefix
  commentId: P:MonoTorrent.Client.EngineSettingsBuilder.HttpStreamingPrefix
  id: HttpStreamingPrefix
  parent: MonoTorrent.Client.EngineSettingsBuilder
  langs:
  - csharp
  - vb
  name: HttpStreamingPrefix
  nameWithType: EngineSettingsBuilder.HttpStreamingPrefix
  fullName: MonoTorrent.Client.EngineSettingsBuilder.HttpStreamingPrefix
  type: Property
  source:
    remote:
      path: MonoTorrent/src/Client/Settings/EngineSettingsBuilder.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: HttpStreamingPrefix
    path: src/Client/Settings/EngineSettingsBuilder.cs
    startLine: 212
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.Client
  summary: >-
    The HTTP(s) prefix which the engine should bind to when a <xref href="MonoTorrent.Client.TorrentManager" data-throw-if-not-resolved="false"></xref> is set up

    to stream data from the torrent and <xref href="MonoTorrent.Client.TorrentManager.StreamProvider" data-throw-if-not-resolved="false"></xref> is non-null. Should be of

    the form "http://ip-address-or-hostname:port". Defaults to 'http://127.0.0.1:5555'.
  example: []
  syntax:
    content: public string HttpStreamingPrefix { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property HttpStreamingPrefix As String
  overload: MonoTorrent.Client.EngineSettingsBuilder.HttpStreamingPrefix*
- uid: MonoTorrent.Client.EngineSettingsBuilder.ListenEndPoints
  commentId: P:MonoTorrent.Client.EngineSettingsBuilder.ListenEndPoints
  id: ListenEndPoints
  parent: MonoTorrent.Client.EngineSettingsBuilder
  langs:
  - csharp
  - vb
  name: ListenEndPoints
  nameWithType: EngineSettingsBuilder.ListenEndPoints
  fullName: MonoTorrent.Client.EngineSettingsBuilder.ListenEndPoints
  type: Property
  source:
    remote:
      path: MonoTorrent/src/Client/Settings/EngineSettingsBuilder.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: ListenEndPoints
    path: src/Client/Settings/EngineSettingsBuilder.cs
    startLine: 235
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.Client
  summary: >-
    The TCP port the engine should listen on for incoming connections. Use 0 to choose a random

    available port. Choose -1 to disable listening for incoming connections. Defaults to 0.
  example: []
  syntax:
    content: public Dictionary<string, IPEndPoint> ListenEndPoints { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.Net.IPEndPoint}
    content.vb: Public Property ListenEndPoints As Dictionary(Of String, IPEndPoint)
  overload: MonoTorrent.Client.EngineSettingsBuilder.ListenEndPoints*
- uid: MonoTorrent.Client.EngineSettingsBuilder.MaximumConnections
  commentId: P:MonoTorrent.Client.EngineSettingsBuilder.MaximumConnections
  id: MaximumConnections
  parent: MonoTorrent.Client.EngineSettingsBuilder
  langs:
  - csharp
  - vb
  name: MaximumConnections
  nameWithType: EngineSettingsBuilder.MaximumConnections
  fullName: MonoTorrent.Client.EngineSettingsBuilder.MaximumConnections
  type: Property
  source:
    remote:
      path: MonoTorrent/src/Client/Settings/EngineSettingsBuilder.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: MaximumConnections
    path: src/Client/Settings/EngineSettingsBuilder.cs
    startLine: 240
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.Client
  summary: The maximum number of concurrent open connections overall. Defaults to 150.
  example: []
  syntax:
    content: public int MaximumConnections { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property MaximumConnections As Integer
  overload: MonoTorrent.Client.EngineSettingsBuilder.MaximumConnections*
- uid: MonoTorrent.Client.EngineSettingsBuilder.MaximumDownloadRate
  commentId: P:MonoTorrent.Client.EngineSettingsBuilder.MaximumDownloadRate
  id: MaximumDownloadRate
  parent: MonoTorrent.Client.EngineSettingsBuilder
  langs:
  - csharp
  - vb
  name: MaximumDownloadRate
  nameWithType: EngineSettingsBuilder.MaximumDownloadRate
  fullName: MonoTorrent.Client.EngineSettingsBuilder.MaximumDownloadRate
  type: Property
  source:
    remote:
      path: MonoTorrent/src/Client/Settings/EngineSettingsBuilder.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: MaximumDownloadRate
    path: src/Client/Settings/EngineSettingsBuilder.cs
    startLine: 248
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.Client
  summary: The maximum download rate, in bytes per second, overall. A value of 0 means unlimited. Defaults to 0.
  example: []
  syntax:
    content: public int MaximumDownloadRate { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property MaximumDownloadRate As Integer
  overload: MonoTorrent.Client.EngineSettingsBuilder.MaximumDownloadRate*
- uid: MonoTorrent.Client.EngineSettingsBuilder.MaximumHalfOpenConnections
  commentId: P:MonoTorrent.Client.EngineSettingsBuilder.MaximumHalfOpenConnections
  id: MaximumHalfOpenConnections
  parent: MonoTorrent.Client.EngineSettingsBuilder
  langs:
  - csharp
  - vb
  name: MaximumHalfOpenConnections
  nameWithType: EngineSettingsBuilder.MaximumHalfOpenConnections
  fullName: MonoTorrent.Client.EngineSettingsBuilder.MaximumHalfOpenConnections
  type: Property
  source:
    remote:
      path: MonoTorrent/src/Client/Settings/EngineSettingsBuilder.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: MaximumHalfOpenConnections
    path: src/Client/Settings/EngineSettingsBuilder.cs
    startLine: 256
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.Client
  summary: The maximum number of concurrent connection attempts overall. Defaults to 8.
  example: []
  syntax:
    content: public int MaximumHalfOpenConnections { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property MaximumHalfOpenConnections As Integer
  overload: MonoTorrent.Client.EngineSettingsBuilder.MaximumHalfOpenConnections*
- uid: MonoTorrent.Client.EngineSettingsBuilder.MaximumUploadRate
  commentId: P:MonoTorrent.Client.EngineSettingsBuilder.MaximumUploadRate
  id: MaximumUploadRate
  parent: MonoTorrent.Client.EngineSettingsBuilder
  langs:
  - csharp
  - vb
  name: MaximumUploadRate
  nameWithType: EngineSettingsBuilder.MaximumUploadRate
  fullName: MonoTorrent.Client.EngineSettingsBuilder.MaximumUploadRate
  type: Property
  source:
    remote:
      path: MonoTorrent/src/Client/Settings/EngineSettingsBuilder.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: MaximumUploadRate
    path: src/Client/Settings/EngineSettingsBuilder.cs
    startLine: 264
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.Client
  summary: The maximum upload rate, in bytes per second, overall. A value of 0 means unlimited. defaults to 0.
  example: []
  syntax:
    content: public int MaximumUploadRate { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property MaximumUploadRate As Integer
  overload: MonoTorrent.Client.EngineSettingsBuilder.MaximumUploadRate*
- uid: MonoTorrent.Client.EngineSettingsBuilder.MaximumOpenFiles
  commentId: P:MonoTorrent.Client.EngineSettingsBuilder.MaximumOpenFiles
  id: MaximumOpenFiles
  parent: MonoTorrent.Client.EngineSettingsBuilder
  langs:
  - csharp
  - vb
  name: MaximumOpenFiles
  nameWithType: EngineSettingsBuilder.MaximumOpenFiles
  fullName: MonoTorrent.Client.EngineSettingsBuilder.MaximumOpenFiles
  type: Property
  source:
    remote:
      path: MonoTorrent/src/Client/Settings/EngineSettingsBuilder.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: MaximumOpenFiles
    path: src/Client/Settings/EngineSettingsBuilder.cs
    startLine: 274
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.Client
  summary: >-
    The maximum number of files which can be opened concurrently. On platforms which limit the maximum

    filehandles for a process it can be beneficial to limit the number of open files to prevent

    running out of resources. A value of 0 means unlimited, but this is not recommended. Defaults to 20.
  example: []
  syntax:
    content: public int MaximumOpenFiles { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property MaximumOpenFiles As Integer
  overload: MonoTorrent.Client.EngineSettingsBuilder.MaximumOpenFiles*
- uid: MonoTorrent.Client.EngineSettingsBuilder.MaximumDiskReadRate
  commentId: P:MonoTorrent.Client.EngineSettingsBuilder.MaximumDiskReadRate
  id: MaximumDiskReadRate
  parent: MonoTorrent.Client.EngineSettingsBuilder
  langs:
  - csharp
  - vb
  name: MaximumDiskReadRate
  nameWithType: EngineSettingsBuilder.MaximumDiskReadRate
  fullName: MonoTorrent.Client.EngineSettingsBuilder.MaximumDiskReadRate
  type: Property
  source:
    remote:
      path: MonoTorrent/src/Client/Settings/EngineSettingsBuilder.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: MaximumDiskReadRate
    path: src/Client/Settings/EngineSettingsBuilder.cs
    startLine: 284
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.Client
  summary: >-
    The maximum disk read rate, in bytes per second. A value of 0 means unlimited. This is

    typically only useful for non-SSD drives to prevent the hashing process from saturating

    the available drive bandwidth. Defaults to 0.
  example: []
  syntax:
    content: public int MaximumDiskReadRate { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property MaximumDiskReadRate As Integer
  overload: MonoTorrent.Client.EngineSettingsBuilder.MaximumDiskReadRate*
- uid: MonoTorrent.Client.EngineSettingsBuilder.MaximumDiskWriteRate
  commentId: P:MonoTorrent.Client.EngineSettingsBuilder.MaximumDiskWriteRate
  id: MaximumDiskWriteRate
  parent: MonoTorrent.Client.EngineSettingsBuilder
  langs:
  - csharp
  - vb
  name: MaximumDiskWriteRate
  nameWithType: EngineSettingsBuilder.MaximumDiskWriteRate
  fullName: MonoTorrent.Client.EngineSettingsBuilder.MaximumDiskWriteRate
  type: Property
  source:
    remote:
      path: MonoTorrent/src/Client/Settings/EngineSettingsBuilder.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: MaximumDiskWriteRate
    path: src/Client/Settings/EngineSettingsBuilder.cs
    startLine: 295
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.Client
  summary: >-
    The maximum disk write rate, in bytes per second. A value of 0 means unlimited. This is

    typically only useful for non-SSD drives to prevent the downloading process from saturating

    the available drive bandwidth. If the download rate exceeds the max write rate then the

    download will be throttled. Defaults to 0.
  example: []
  syntax:
    content: public int MaximumDiskWriteRate { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property MaximumDiskWriteRate As Integer
  overload: MonoTorrent.Client.EngineSettingsBuilder.MaximumDiskWriteRate*
- uid: MonoTorrent.Client.EngineSettingsBuilder.MaximumRepeatedHashFails
  commentId: P:MonoTorrent.Client.EngineSettingsBuilder.MaximumRepeatedHashFails
  id: MaximumRepeatedHashFails
  parent: MonoTorrent.Client.EngineSettingsBuilder
  langs:
  - csharp
  - vb
  name: MaximumRepeatedHashFails
  nameWithType: EngineSettingsBuilder.MaximumRepeatedHashFails
  fullName: MonoTorrent.Client.EngineSettingsBuilder.MaximumRepeatedHashFails
  type: Property
  source:
    remote:
      path: MonoTorrent/src/Client/Settings/EngineSettingsBuilder.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: MaximumRepeatedHashFails
    path: src/Client/Settings/EngineSettingsBuilder.cs
    startLine: 305
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.Client
  summary: >-
    The maximum number of consecutive pieces that fail a hash check a peer can send us before

    we drop it.
  example: []
  syntax:
    content: public int MaximumRepeatedHashFails { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property MaximumRepeatedHashFails As Integer
  overload: MonoTorrent.Client.EngineSettingsBuilder.MaximumRepeatedHashFails*
- uid: MonoTorrent.Client.EngineSettingsBuilder.MaximumTotalHashFails
  commentId: P:MonoTorrent.Client.EngineSettingsBuilder.MaximumTotalHashFails
  id: MaximumTotalHashFails
  parent: MonoTorrent.Client.EngineSettingsBuilder
  langs:
  - csharp
  - vb
  name: MaximumTotalHashFails
  nameWithType: EngineSettingsBuilder.MaximumTotalHashFails
  fullName: MonoTorrent.Client.EngineSettingsBuilder.MaximumTotalHashFails
  type: Property
  source:
    remote:
      path: MonoTorrent/src/Client/Settings/EngineSettingsBuilder.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: MaximumTotalHashFails
    path: src/Client/Settings/EngineSettingsBuilder.cs
    startLine: 314
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.Client
  summary: The maximum number of pieces that fail a hash check a peer can send us before we drop it.
  example: []
  syntax:
    content: public int MaximumTotalHashFails { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property MaximumTotalHashFails As Integer
  overload: MonoTorrent.Client.EngineSettingsBuilder.MaximumTotalHashFails*
- uid: MonoTorrent.Client.EngineSettingsBuilder.ReportedListenEndPoints
  commentId: P:MonoTorrent.Client.EngineSettingsBuilder.ReportedListenEndPoints
  id: ReportedListenEndPoints
  parent: MonoTorrent.Client.EngineSettingsBuilder
  langs:
  - csharp
  - vb
  name: ReportedListenEndPoints
  nameWithType: EngineSettingsBuilder.ReportedListenEndPoints
  fullName: MonoTorrent.Client.EngineSettingsBuilder.ReportedListenEndPoints
  type: Property
  source:
    remote:
      path: MonoTorrent/src/Client/Settings/EngineSettingsBuilder.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: ReportedListenEndPoints
    path: src/Client/Settings/EngineSettingsBuilder.cs
    startLine: 324
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.Client
  summary: >-
    If the IPAddress incoming peer connections are received on differs from the IPAddress the tracker

    Announce or Scrape requests are sent from, specify it here. Typically this should not be set.

    Defaults to <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>
  example: []
  syntax:
    content: public Dictionary<string, IPEndPoint> ReportedListenEndPoints { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.Net.IPEndPoint}
    content.vb: Public Property ReportedListenEndPoints As Dictionary(Of String, IPEndPoint)
  overload: MonoTorrent.Client.EngineSettingsBuilder.ReportedListenEndPoints*
- uid: MonoTorrent.Client.EngineSettingsBuilder.StaleRequestTimeout
  commentId: P:MonoTorrent.Client.EngineSettingsBuilder.StaleRequestTimeout
  id: StaleRequestTimeout
  parent: MonoTorrent.Client.EngineSettingsBuilder
  langs:
  - csharp
  - vb
  name: StaleRequestTimeout
  nameWithType: EngineSettingsBuilder.StaleRequestTimeout
  fullName: MonoTorrent.Client.EngineSettingsBuilder.StaleRequestTimeout
  type: Property
  source:
    remote:
      path: MonoTorrent/src/Client/Settings/EngineSettingsBuilder.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: StaleRequestTimeout
    path: src/Client/Settings/EngineSettingsBuilder.cs
    startLine: 332
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.Client
  summary: >-
    When blocks have been requested from a peer, the connection to that peer will be closed and the

    requests will be cancelled if it takes longer than this time to receive a 16kB block. This

    value must be higher than <xref href="MonoTorrent.Client.EngineSettingsBuilder.WebSeedConnectionTimeout" data-throw-if-not-resolved="false"></xref> or the web seeds will be

    considered unhealthy before their connection timeout is exceeded. Defaults to 40 seconds.
  example: []
  syntax:
    content: public TimeSpan StaleRequestTimeout { get; set; }
    parameters: []
    return:
      type: System.TimeSpan
    content.vb: Public Property StaleRequestTimeout As TimeSpan
  overload: MonoTorrent.Client.EngineSettingsBuilder.StaleRequestTimeout*
- uid: MonoTorrent.Client.EngineSettingsBuilder.UsePartialFiles
  commentId: P:MonoTorrent.Client.EngineSettingsBuilder.UsePartialFiles
  id: UsePartialFiles
  parent: MonoTorrent.Client.EngineSettingsBuilder
  langs:
  - csharp
  - vb
  name: UsePartialFiles
  nameWithType: EngineSettingsBuilder.UsePartialFiles
  fullName: MonoTorrent.Client.EngineSettingsBuilder.UsePartialFiles
  type: Property
  source:
    remote:
      path: MonoTorrent/src/Client/Settings/EngineSettingsBuilder.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: UsePartialFiles
    path: src/Client/Settings/EngineSettingsBuilder.cs
    startLine: 341
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.Client
  summary: >-
    If set to <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> then partially downloaded files will have ".!mt" appended to their filename. When the file is fully downloaded, the ".!mt" suffix will be removed.

    Defaults to <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a> as this is a pre-release feature.
  example: []
  syntax:
    content: public bool UsePartialFiles { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property UsePartialFiles As Boolean
  overload: MonoTorrent.Client.EngineSettingsBuilder.UsePartialFiles*
- uid: MonoTorrent.Client.EngineSettingsBuilder.WebSeedConnectionTimeout
  commentId: P:MonoTorrent.Client.EngineSettingsBuilder.WebSeedConnectionTimeout
  id: WebSeedConnectionTimeout
  parent: MonoTorrent.Client.EngineSettingsBuilder
  langs:
  - csharp
  - vb
  name: WebSeedConnectionTimeout
  nameWithType: EngineSettingsBuilder.WebSeedConnectionTimeout
  fullName: MonoTorrent.Client.EngineSettingsBuilder.WebSeedConnectionTimeout
  type: Property
  source:
    remote:
      path: MonoTorrent/src/Client/Settings/EngineSettingsBuilder.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: WebSeedConnectionTimeout
    path: src/Client/Settings/EngineSettingsBuilder.cs
    startLine: 346
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.Client
  summary: The timeout used when connecting to a WebSeed's HTTP endpoint.
  example: []
  syntax:
    content: public TimeSpan WebSeedConnectionTimeout { get; set; }
    parameters: []
    return:
      type: System.TimeSpan
    content.vb: Public Property WebSeedConnectionTimeout As TimeSpan
  overload: MonoTorrent.Client.EngineSettingsBuilder.WebSeedConnectionTimeout*
- uid: MonoTorrent.Client.EngineSettingsBuilder.WebSeedDelay
  commentId: P:MonoTorrent.Client.EngineSettingsBuilder.WebSeedDelay
  id: WebSeedDelay
  parent: MonoTorrent.Client.EngineSettingsBuilder
  langs:
  - csharp
  - vb
  name: WebSeedDelay
  nameWithType: EngineSettingsBuilder.WebSeedDelay
  fullName: MonoTorrent.Client.EngineSettingsBuilder.WebSeedDelay
  type: Property
  source:
    remote:
      path: MonoTorrent/src/Client/Settings/EngineSettingsBuilder.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: WebSeedDelay
    path: src/Client/Settings/EngineSettingsBuilder.cs
    startLine: 355
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.Client
  summary: >-
    The delay before a torrent will start using web seeds. A value of zero

    means 'immediately'. Using webseeds by default is not recommended
  example: []
  syntax:
    content: public TimeSpan WebSeedDelay { get; set; }
    parameters: []
    return:
      type: System.TimeSpan
    content.vb: Public Property WebSeedDelay As TimeSpan
  overload: MonoTorrent.Client.EngineSettingsBuilder.WebSeedDelay*
- uid: MonoTorrent.Client.EngineSettingsBuilder.WebSeedSpeedTrigger
  commentId: P:MonoTorrent.Client.EngineSettingsBuilder.WebSeedSpeedTrigger
  id: WebSeedSpeedTrigger
  parent: MonoTorrent.Client.EngineSettingsBuilder
  langs:
  - csharp
  - vb
  name: WebSeedSpeedTrigger
  nameWithType: EngineSettingsBuilder.WebSeedSpeedTrigger
  fullName: MonoTorrent.Client.EngineSettingsBuilder.WebSeedSpeedTrigger
  type: Property
  source:
    remote:
      path: MonoTorrent/src/Client/Settings/EngineSettingsBuilder.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: WebSeedSpeedTrigger
    path: src/Client/Settings/EngineSettingsBuilder.cs
    startLine: 364
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.Client
  summary: >-
    The download speed under which a torrent will start using web seeds. A value of

    0 means webseeds will be added regardless of how fast the torrent is downloading.
  example: []
  syntax:
    content: public int WebSeedSpeedTrigger { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property WebSeedSpeedTrigger As Integer
  overload: MonoTorrent.Client.EngineSettingsBuilder.WebSeedSpeedTrigger*
- uid: MonoTorrent.Client.EngineSettingsBuilder.MutableTorrentUpdateInterval
  commentId: P:MonoTorrent.Client.EngineSettingsBuilder.MutableTorrentUpdateInterval
  id: MutableTorrentUpdateInterval
  parent: MonoTorrent.Client.EngineSettingsBuilder
  langs:
  - csharp
  - vb
  name: MutableTorrentUpdateInterval
  nameWithType: EngineSettingsBuilder.MutableTorrentUpdateInterval
  fullName: MonoTorrent.Client.EngineSettingsBuilder.MutableTorrentUpdateInterval
  type: Property
  source:
    remote:
      path: MonoTorrent/src/Client/Settings/EngineSettingsBuilder.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: MutableTorrentUpdateInterval
    path: src/Client/Settings/EngineSettingsBuilder.cs
    startLine: 373
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.Client
  summary: >-
    The time interval between checking for updates for torrents loaded via a BEP46 magnet link.

    Defaults to 15 minutes.
  example: []
  syntax:
    content: public TimeSpan MutableTorrentUpdateInterval { get; set; }
    parameters: []
    return:
      type: System.TimeSpan
    content.vb: Public Property MutableTorrentUpdateInterval As TimeSpan
  overload: MonoTorrent.Client.EngineSettingsBuilder.MutableTorrentUpdateInterval*
- uid: MonoTorrent.Client.EngineSettingsBuilder.#ctor
  commentId: M:MonoTorrent.Client.EngineSettingsBuilder.#ctor
  id: '#ctor'
  parent: MonoTorrent.Client.EngineSettingsBuilder
  langs:
  - csharp
  - vb
  name: EngineSettingsBuilder()
  nameWithType: EngineSettingsBuilder.EngineSettingsBuilder()
  fullName: MonoTorrent.Client.EngineSettingsBuilder.EngineSettingsBuilder()
  type: Constructor
  source:
    remote:
      path: MonoTorrent/src/Client/Settings/EngineSettingsBuilder.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: .ctor
    path: src/Client/Settings/EngineSettingsBuilder.cs
    startLine: 379
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.Client
  syntax:
    content: public EngineSettingsBuilder()
    content.vb: Public Sub New()
  overload: MonoTorrent.Client.EngineSettingsBuilder.#ctor*
  nameWithType.vb: EngineSettingsBuilder.New()
  fullName.vb: MonoTorrent.Client.EngineSettingsBuilder.New()
  name.vb: New()
- uid: MonoTorrent.Client.EngineSettingsBuilder.#ctor(MonoTorrent.Client.EngineSettings)
  commentId: M:MonoTorrent.Client.EngineSettingsBuilder.#ctor(MonoTorrent.Client.EngineSettings)
  id: '#ctor(MonoTorrent.Client.EngineSettings)'
  parent: MonoTorrent.Client.EngineSettingsBuilder
  langs:
  - csharp
  - vb
  name: EngineSettingsBuilder(EngineSettings)
  nameWithType: EngineSettingsBuilder.EngineSettingsBuilder(EngineSettings)
  fullName: MonoTorrent.Client.EngineSettingsBuilder.EngineSettingsBuilder(MonoTorrent.Client.EngineSettings)
  type: Constructor
  source:
    remote:
      path: MonoTorrent/src/Client/Settings/EngineSettingsBuilder.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: .ctor
    path: src/Client/Settings/EngineSettingsBuilder.cs
    startLine: 385
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.Client
  syntax:
    content: public EngineSettingsBuilder(EngineSettings settings)
    parameters:
    - id: settings
      type: MonoTorrent.Client.EngineSettings
    content.vb: Public Sub New(settings As EngineSettings)
  overload: MonoTorrent.Client.EngineSettingsBuilder.#ctor*
  nameWithType.vb: EngineSettingsBuilder.New(EngineSettings)
  fullName.vb: MonoTorrent.Client.EngineSettingsBuilder.New(MonoTorrent.Client.EngineSettings)
  name.vb: New(EngineSettings)
- uid: MonoTorrent.Client.EngineSettingsBuilder.ToSettings
  commentId: M:MonoTorrent.Client.EngineSettingsBuilder.ToSettings
  id: ToSettings
  parent: MonoTorrent.Client.EngineSettingsBuilder
  langs:
  - csharp
  - vb
  name: ToSettings()
  nameWithType: EngineSettingsBuilder.ToSettings()
  fullName: MonoTorrent.Client.EngineSettingsBuilder.ToSettings()
  type: Method
  source:
    remote:
      path: MonoTorrent/src/Client/Settings/EngineSettingsBuilder.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: ToSettings
    path: src/Client/Settings/EngineSettingsBuilder.cs
    startLine: 427
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.Client
  syntax:
    content: public EngineSettings ToSettings()
    return:
      type: MonoTorrent.Client.EngineSettings
    content.vb: Public Function ToSettings() As EngineSettings
  overload: MonoTorrent.Client.EngineSettingsBuilder.ToSettings*
references:
- uid: MonoTorrent.Client
  commentId: N:MonoTorrent.Client
  href: MonoTorrent.html
  name: MonoTorrent.Client
  nameWithType: MonoTorrent.Client
  fullName: MonoTorrent.Client
  spec.csharp:
  - uid: MonoTorrent
    name: MonoTorrent
    href: MonoTorrent.html
  - name: .
  - uid: MonoTorrent.Client
    name: Client
    href: MonoTorrent.Client.html
  spec.vb:
  - uid: MonoTorrent
    name: MonoTorrent
    href: MonoTorrent.html
  - name: .
  - uid: MonoTorrent.Client
    name: Client
    href: MonoTorrent.Client.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: MonoTorrent.Connections.EncryptionType.RC4Header
  commentId: F:MonoTorrent.Connections.EncryptionType.RC4Header
  href: MonoTorrent.Connections.EncryptionType.html#MonoTorrent_Connections_EncryptionType_RC4Header
  name: RC4Header
  nameWithType: EncryptionType.RC4Header
  fullName: MonoTorrent.Connections.EncryptionType.RC4Header
- uid: MonoTorrent.Connections.EncryptionType.RC4Full
  commentId: F:MonoTorrent.Connections.EncryptionType.RC4Full
  href: MonoTorrent.Connections.EncryptionType.html#MonoTorrent_Connections_EncryptionType_RC4Full
  name: RC4Full
  nameWithType: EncryptionType.RC4Full
  fullName: MonoTorrent.Connections.EncryptionType.RC4Full
- uid: MonoTorrent.Connections.EncryptionType.PlainText
  commentId: F:MonoTorrent.Connections.EncryptionType.PlainText
  href: MonoTorrent.Connections.EncryptionType.html#MonoTorrent_Connections_EncryptionType_PlainText
  name: PlainText
  nameWithType: EncryptionType.PlainText
  fullName: MonoTorrent.Connections.EncryptionType.PlainText
- uid: MonoTorrent.Client.EngineSettingsBuilder.AllowedEncryption*
  commentId: Overload:MonoTorrent.Client.EngineSettingsBuilder.AllowedEncryption
  href: MonoTorrent.Client.EngineSettingsBuilder.html#MonoTorrent_Client_EngineSettingsBuilder_AllowedEncryption
  name: AllowedEncryption
  nameWithType: EngineSettingsBuilder.AllowedEncryption
  fullName: MonoTorrent.Client.EngineSettingsBuilder.AllowedEncryption
- uid: System.Collections.Generic.List{MonoTorrent.Connections.EncryptionType}
  commentId: T:System.Collections.Generic.List{MonoTorrent.Connections.EncryptionType}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<EncryptionType>
  nameWithType: List<EncryptionType>
  fullName: System.Collections.Generic.List<MonoTorrent.Connections.EncryptionType>
  nameWithType.vb: List(Of EncryptionType)
  fullName.vb: System.Collections.Generic.List(Of MonoTorrent.Connections.EncryptionType)
  name.vb: List(Of EncryptionType)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: MonoTorrent.Connections.EncryptionType
    name: EncryptionType
    href: MonoTorrent.Connections.EncryptionType.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: MonoTorrent.Connections.EncryptionType
    name: EncryptionType
    href: MonoTorrent.Connections.EncryptionType.html
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: MonoTorrent.Client.EngineSettingsBuilder.AllowHaveSuppression*
  commentId: Overload:MonoTorrent.Client.EngineSettingsBuilder.AllowHaveSuppression
  href: MonoTorrent.Client.EngineSettingsBuilder.html#MonoTorrent_Client_EngineSettingsBuilder_AllowHaveSuppression
  name: AllowHaveSuppression
  nameWithType: EngineSettingsBuilder.AllowHaveSuppression
  fullName: MonoTorrent.Client.EngineSettingsBuilder.AllowHaveSuppression
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: MonoTorrent.Client.EngineSettingsBuilder.AllowLocalPeerDiscovery*
  commentId: Overload:MonoTorrent.Client.EngineSettingsBuilder.AllowLocalPeerDiscovery
  href: MonoTorrent.Client.EngineSettingsBuilder.html#MonoTorrent_Client_EngineSettingsBuilder_AllowLocalPeerDiscovery
  name: AllowLocalPeerDiscovery
  nameWithType: EngineSettingsBuilder.AllowLocalPeerDiscovery
  fullName: MonoTorrent.Client.EngineSettingsBuilder.AllowLocalPeerDiscovery
- uid: MonoTorrent.Client.EngineSettingsBuilder.AllowMultipleTorrentInstances*
  commentId: Overload:MonoTorrent.Client.EngineSettingsBuilder.AllowMultipleTorrentInstances
  href: MonoTorrent.Client.EngineSettingsBuilder.html#MonoTorrent_Client_EngineSettingsBuilder_AllowMultipleTorrentInstances
  name: AllowMultipleTorrentInstances
  nameWithType: EngineSettingsBuilder.AllowMultipleTorrentInstances
  fullName: MonoTorrent.Client.EngineSettingsBuilder.AllowMultipleTorrentInstances
- uid: MonoTorrent.Client.EngineSettingsBuilder.AllowPortForwarding*
  commentId: Overload:MonoTorrent.Client.EngineSettingsBuilder.AllowPortForwarding
  href: MonoTorrent.Client.EngineSettingsBuilder.html#MonoTorrent_Client_EngineSettingsBuilder_AllowPortForwarding
  name: AllowPortForwarding
  nameWithType: EngineSettingsBuilder.AllowPortForwarding
  fullName: MonoTorrent.Client.EngineSettingsBuilder.AllowPortForwarding
- uid: MonoTorrent.Client.TorrentManager
  commentId: T:MonoTorrent.Client.TorrentManager
  parent: MonoTorrent.Client
  href: MonoTorrent.Client.TorrentManager.html
  name: TorrentManager
  nameWithType: TorrentManager
  fullName: MonoTorrent.Client.TorrentManager
- uid: MonoTorrent.Dht.IDhtEngine
  commentId: T:MonoTorrent.Dht.IDhtEngine
  parent: MonoTorrent.Dht
  href: MonoTorrent.Dht.IDhtEngine.html
  name: IDhtEngine
  nameWithType: IDhtEngine
  fullName: MonoTorrent.Dht.IDhtEngine
- uid: MonoTorrent.Client.EngineSettingsBuilder.AutoSaveLoadDhtCache*
  commentId: Overload:MonoTorrent.Client.EngineSettingsBuilder.AutoSaveLoadDhtCache
  href: MonoTorrent.Client.EngineSettingsBuilder.html#MonoTorrent_Client_EngineSettingsBuilder_AutoSaveLoadDhtCache
  name: AutoSaveLoadDhtCache
  nameWithType: EngineSettingsBuilder.AutoSaveLoadDhtCache
  fullName: MonoTorrent.Client.EngineSettingsBuilder.AutoSaveLoadDhtCache
- uid: MonoTorrent.Dht
  commentId: N:MonoTorrent.Dht
  href: MonoTorrent.html
  name: MonoTorrent.Dht
  nameWithType: MonoTorrent.Dht
  fullName: MonoTorrent.Dht
  spec.csharp:
  - uid: MonoTorrent
    name: MonoTorrent
    href: MonoTorrent.html
  - name: .
  - uid: MonoTorrent.Dht
    name: Dht
    href: MonoTorrent.Dht.html
  spec.vb:
  - uid: MonoTorrent
    name: MonoTorrent
    href: MonoTorrent.html
  - name: .
  - uid: MonoTorrent.Dht
    name: Dht
    href: MonoTorrent.Dht.html
- uid: MonoTorrent.Client.TorrentManager.StopAsync
  commentId: M:MonoTorrent.Client.TorrentManager.StopAsync
  href: MonoTorrent.Client.TorrentManager.html#MonoTorrent_Client_TorrentManager_StopAsync
  name: StopAsync()
  nameWithType: TorrentManager.StopAsync()
  fullName: MonoTorrent.Client.TorrentManager.StopAsync()
  spec.csharp:
  - uid: MonoTorrent.Client.TorrentManager.StopAsync
    name: StopAsync
    href: MonoTorrent.Client.TorrentManager.html#MonoTorrent_Client_TorrentManager_StopAsync
  - name: (
  - name: )
  spec.vb:
  - uid: MonoTorrent.Client.TorrentManager.StopAsync
    name: StopAsync
    href: MonoTorrent.Client.TorrentManager.html#MonoTorrent_Client_TorrentManager_StopAsync
  - name: (
  - name: )
- uid: MonoTorrent.Client.ClientEngine.AddAsync(MonoTorrent.MagnetLink,System.String)
  commentId: M:MonoTorrent.Client.ClientEngine.AddAsync(MonoTorrent.MagnetLink,System.String)
  isExternal: true
  href: MonoTorrent.Client.ClientEngine.html#MonoTorrent_Client_ClientEngine_AddAsync_MonoTorrent_MagnetLink_System_String_
  name: AddAsync(MagnetLink, string)
  nameWithType: ClientEngine.AddAsync(MagnetLink, string)
  fullName: MonoTorrent.Client.ClientEngine.AddAsync(MonoTorrent.MagnetLink, string)
  nameWithType.vb: ClientEngine.AddAsync(MagnetLink, String)
  fullName.vb: MonoTorrent.Client.ClientEngine.AddAsync(MonoTorrent.MagnetLink, String)
  name.vb: AddAsync(MagnetLink, String)
  spec.csharp:
  - uid: MonoTorrent.Client.ClientEngine.AddAsync(MonoTorrent.MagnetLink,System.String)
    name: AddAsync
    href: MonoTorrent.Client.ClientEngine.html#MonoTorrent_Client_ClientEngine_AddAsync_MonoTorrent_MagnetLink_System_String_
  - name: (
  - uid: MonoTorrent.MagnetLink
    name: MagnetLink
    href: MonoTorrent.MagnetLink.html
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: MonoTorrent.Client.ClientEngine.AddAsync(MonoTorrent.MagnetLink,System.String)
    name: AddAsync
    href: MonoTorrent.Client.ClientEngine.html#MonoTorrent_Client_ClientEngine_AddAsync_MonoTorrent_MagnetLink_System_String_
  - name: (
  - uid: MonoTorrent.MagnetLink
    name: MagnetLink
    href: MonoTorrent.MagnetLink.html
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: MonoTorrent.Client.EngineSettingsBuilder.AutoSaveLoadFastResume*
  commentId: Overload:MonoTorrent.Client.EngineSettingsBuilder.AutoSaveLoadFastResume
  href: MonoTorrent.Client.EngineSettingsBuilder.html#MonoTorrent_Client_EngineSettingsBuilder_AutoSaveLoadFastResume
  name: AutoSaveLoadFastResume
  nameWithType: EngineSettingsBuilder.AutoSaveLoadFastResume
  fullName: MonoTorrent.Client.EngineSettingsBuilder.AutoSaveLoadFastResume
- uid: MonoTorrent.MagnetLink
  commentId: T:MonoTorrent.MagnetLink
  parent: MonoTorrent
  href: MonoTorrent.MagnetLink.html
  name: MagnetLink
  nameWithType: MagnetLink
  fullName: MonoTorrent.MagnetLink
- uid: MonoTorrent.Client.EngineSettings.MetadataCacheDirectory
  commentId: P:MonoTorrent.Client.EngineSettings.MetadataCacheDirectory
  href: MonoTorrent.Client.EngineSettings.html#MonoTorrent_Client_EngineSettings_MetadataCacheDirectory
  name: MetadataCacheDirectory
  nameWithType: EngineSettings.MetadataCacheDirectory
  fullName: MonoTorrent.Client.EngineSettings.MetadataCacheDirectory
- uid: MonoTorrent.Client.EngineSettingsBuilder.AutoSaveLoadMagnetLinkMetadata*
  commentId: Overload:MonoTorrent.Client.EngineSettingsBuilder.AutoSaveLoadMagnetLinkMetadata
  href: MonoTorrent.Client.EngineSettingsBuilder.html#MonoTorrent_Client_EngineSettingsBuilder_AutoSaveLoadMagnetLinkMetadata
  name: AutoSaveLoadMagnetLinkMetadata
  nameWithType: EngineSettingsBuilder.AutoSaveLoadMagnetLinkMetadata
  fullName: MonoTorrent.Client.EngineSettingsBuilder.AutoSaveLoadMagnetLinkMetadata
- uid: MonoTorrent
  commentId: N:MonoTorrent
  href: MonoTorrent.html
  name: MonoTorrent
  nameWithType: MonoTorrent
  fullName: MonoTorrent
- uid: MonoTorrent.Client.EngineSettingsBuilder.AllowOutgoingConnections*
  commentId: Overload:MonoTorrent.Client.EngineSettingsBuilder.AllowOutgoingConnections
  href: MonoTorrent.Client.EngineSettingsBuilder.html#MonoTorrent_Client_EngineSettingsBuilder_AllowOutgoingConnections
  name: AllowOutgoingConnections
  nameWithType: EngineSettingsBuilder.AllowOutgoingConnections
  fullName: MonoTorrent.Client.EngineSettingsBuilder.AllowOutgoingConnections
- uid: MonoTorrent.Client.EngineSettingsBuilder.AllowUploadingOnOutgoingConnections*
  commentId: Overload:MonoTorrent.Client.EngineSettingsBuilder.AllowUploadingOnOutgoingConnections
  href: MonoTorrent.Client.EngineSettingsBuilder.html#MonoTorrent_Client_EngineSettingsBuilder_AllowUploadingOnOutgoingConnections
  name: AllowUploadingOnOutgoingConnections
  nameWithType: EngineSettingsBuilder.AllowUploadingOnOutgoingConnections
  fullName: MonoTorrent.Client.EngineSettingsBuilder.AllowUploadingOnOutgoingConnections
- uid: MonoTorrent.Client.EngineSettingsBuilder.ToSettings
  commentId: M:MonoTorrent.Client.EngineSettingsBuilder.ToSettings
  href: MonoTorrent.Client.EngineSettingsBuilder.html#MonoTorrent_Client_EngineSettingsBuilder_ToSettings
  name: ToSettings()
  nameWithType: EngineSettingsBuilder.ToSettings()
  fullName: MonoTorrent.Client.EngineSettingsBuilder.ToSettings()
  spec.csharp:
  - uid: MonoTorrent.Client.EngineSettingsBuilder.ToSettings
    name: ToSettings
    href: MonoTorrent.Client.EngineSettingsBuilder.html#MonoTorrent_Client_EngineSettingsBuilder_ToSettings
  - name: (
  - name: )
  spec.vb:
  - uid: MonoTorrent.Client.EngineSettingsBuilder.ToSettings
    name: ToSettings
    href: MonoTorrent.Client.EngineSettingsBuilder.html#MonoTorrent_Client_EngineSettingsBuilder_ToSettings
  - name: (
  - name: )
- uid: System.Environment.CurrentDirectory
  commentId: P:System.Environment.CurrentDirectory
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.environment.currentdirectory
  name: CurrentDirectory
  nameWithType: Environment.CurrentDirectory
  fullName: System.Environment.CurrentDirectory
- uid: MonoTorrent.Client.EngineSettingsBuilder.CacheDirectory*
  commentId: Overload:MonoTorrent.Client.EngineSettingsBuilder.CacheDirectory
  href: MonoTorrent.Client.EngineSettingsBuilder.html#MonoTorrent_Client_EngineSettingsBuilder_CacheDirectory
  name: CacheDirectory
  nameWithType: EngineSettingsBuilder.CacheDirectory
  fullName: MonoTorrent.Client.EngineSettingsBuilder.CacheDirectory
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: MonoTorrent.Client.EngineSettingsBuilder.ChokeReviewInterval*
  commentId: Overload:MonoTorrent.Client.EngineSettingsBuilder.ChokeReviewInterval
  href: MonoTorrent.Client.EngineSettingsBuilder.html#MonoTorrent_Client_EngineSettingsBuilder_ChokeReviewInterval
  name: ChokeReviewInterval
  nameWithType: EngineSettingsBuilder.ChokeReviewInterval
  fullName: MonoTorrent.Client.EngineSettingsBuilder.ChokeReviewInterval
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.timespan
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: MonoTorrent.Client.EngineSettingsBuilder.ConnectionRetryDelays*
  commentId: Overload:MonoTorrent.Client.EngineSettingsBuilder.ConnectionRetryDelays
  href: MonoTorrent.Client.EngineSettingsBuilder.html#MonoTorrent_Client_EngineSettingsBuilder_ConnectionRetryDelays
  name: ConnectionRetryDelays
  nameWithType: EngineSettingsBuilder.ConnectionRetryDelays
  fullName: MonoTorrent.Client.EngineSettingsBuilder.ConnectionRetryDelays
- uid: System.Collections.Generic.List{System.TimeSpan}
  commentId: T:System.Collections.Generic.List{System.TimeSpan}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<TimeSpan>
  nameWithType: List<TimeSpan>
  fullName: System.Collections.Generic.List<System.TimeSpan>
  nameWithType.vb: List(Of TimeSpan)
  fullName.vb: System.Collections.Generic.List(Of System.TimeSpan)
  name.vb: List(Of TimeSpan)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: System.TimeSpan
    name: TimeSpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.timespan
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.TimeSpan
    name: TimeSpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.timespan
  - name: )
- uid: MonoTorrent.Client.EngineSettingsBuilder.ConnectionTimeout*
  commentId: Overload:MonoTorrent.Client.EngineSettingsBuilder.ConnectionTimeout
  href: MonoTorrent.Client.EngineSettingsBuilder.html#MonoTorrent_Client_EngineSettingsBuilder_ConnectionTimeout
  name: ConnectionTimeout
  nameWithType: EngineSettingsBuilder.ConnectionTimeout
  fullName: MonoTorrent.Client.EngineSettingsBuilder.ConnectionTimeout
- uid: MonoTorrent.Client.EngineSettingsBuilder.DiskCacheBytes*
  commentId: Overload:MonoTorrent.Client.EngineSettingsBuilder.DiskCacheBytes
  href: MonoTorrent.Client.EngineSettingsBuilder.html#MonoTorrent_Client_EngineSettingsBuilder_DiskCacheBytes
  name: DiskCacheBytes
  nameWithType: EngineSettingsBuilder.DiskCacheBytes
  fullName: MonoTorrent.Client.EngineSettingsBuilder.DiskCacheBytes
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: MonoTorrent.Client.EngineSettingsBuilder.DiskCachePolicy*
  commentId: Overload:MonoTorrent.Client.EngineSettingsBuilder.DiskCachePolicy
  href: MonoTorrent.Client.EngineSettingsBuilder.html#MonoTorrent_Client_EngineSettingsBuilder_DiskCachePolicy
  name: DiskCachePolicy
  nameWithType: EngineSettingsBuilder.DiskCachePolicy
  fullName: MonoTorrent.Client.EngineSettingsBuilder.DiskCachePolicy
- uid: MonoTorrent.PieceWriter.CachePolicy
  commentId: T:MonoTorrent.PieceWriter.CachePolicy
  parent: MonoTorrent.PieceWriter
  href: MonoTorrent.PieceWriter.CachePolicy.html
  name: CachePolicy
  nameWithType: CachePolicy
  fullName: MonoTorrent.PieceWriter.CachePolicy
- uid: MonoTorrent.PieceWriter
  commentId: N:MonoTorrent.PieceWriter
  href: MonoTorrent.html
  name: MonoTorrent.PieceWriter
  nameWithType: MonoTorrent.PieceWriter
  fullName: MonoTorrent.PieceWriter
  spec.csharp:
  - uid: MonoTorrent
    name: MonoTorrent
    href: MonoTorrent.html
  - name: .
  - uid: MonoTorrent.PieceWriter
    name: PieceWriter
    href: MonoTorrent.PieceWriter.html
  spec.vb:
  - uid: MonoTorrent
    name: MonoTorrent
    href: MonoTorrent.html
  - name: .
  - uid: MonoTorrent.PieceWriter
    name: PieceWriter
    href: MonoTorrent.PieceWriter.html
- uid: MonoTorrent.Client.EngineSettingsBuilder.DhtEndPoint*
  commentId: Overload:MonoTorrent.Client.EngineSettingsBuilder.DhtEndPoint
  href: MonoTorrent.Client.EngineSettingsBuilder.html#MonoTorrent_Client_EngineSettingsBuilder_DhtEndPoint
  name: DhtEndPoint
  nameWithType: EngineSettingsBuilder.DhtEndPoint
  fullName: MonoTorrent.Client.EngineSettingsBuilder.DhtEndPoint
- uid: System.Net.IPEndPoint
  commentId: T:System.Net.IPEndPoint
  parent: System.Net
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.net.ipendpoint
  name: IPEndPoint
  nameWithType: IPEndPoint
  fullName: System.Net.IPEndPoint
- uid: System.Net
  commentId: N:System.Net
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Net
  nameWithType: System.Net
  fullName: System.Net
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Net
    name: Net
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.net
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Net
    name: Net
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.net
- uid: MonoTorrent.Client.EngineSettings.AutoSaveLoadFastResume
  commentId: P:MonoTorrent.Client.EngineSettings.AutoSaveLoadFastResume
  href: MonoTorrent.Client.EngineSettings.html#MonoTorrent_Client_EngineSettings_AutoSaveLoadFastResume
  name: AutoSaveLoadFastResume
  nameWithType: EngineSettings.AutoSaveLoadFastResume
  fullName: MonoTorrent.Client.EngineSettings.AutoSaveLoadFastResume
- uid: MonoTorrent.Client.TorrentState.Stopped
  commentId: F:MonoTorrent.Client.TorrentState.Stopped
  href: MonoTorrent.Client.TorrentState.html#MonoTorrent_Client_TorrentState_Stopped
  name: Stopped
  nameWithType: TorrentState.Stopped
  fullName: MonoTorrent.Client.TorrentState.Stopped
- uid: MonoTorrent.Client.FastResumeMode.Accurate
  commentId: F:MonoTorrent.Client.FastResumeMode.Accurate
  href: MonoTorrent.Client.FastResumeMode.html#MonoTorrent_Client_FastResumeMode_Accurate
  name: Accurate
  nameWithType: FastResumeMode.Accurate
  fullName: MonoTorrent.Client.FastResumeMode.Accurate
- uid: MonoTorrent.Client.FastResumeMode.BestEffort
  commentId: F:MonoTorrent.Client.FastResumeMode.BestEffort
  href: MonoTorrent.Client.FastResumeMode.html#MonoTorrent_Client_FastResumeMode_BestEffort
  name: BestEffort
  nameWithType: FastResumeMode.BestEffort
  fullName: MonoTorrent.Client.FastResumeMode.BestEffort
- uid: MonoTorrent.Client.EngineSettingsBuilder.FastResumeMode*
  commentId: Overload:MonoTorrent.Client.EngineSettingsBuilder.FastResumeMode
  href: MonoTorrent.Client.EngineSettingsBuilder.html#MonoTorrent_Client_EngineSettingsBuilder_FastResumeMode
  name: FastResumeMode
  nameWithType: EngineSettingsBuilder.FastResumeMode
  fullName: MonoTorrent.Client.EngineSettingsBuilder.FastResumeMode
- uid: MonoTorrent.Client.FastResumeMode
  commentId: T:MonoTorrent.Client.FastResumeMode
  parent: MonoTorrent.Client
  href: MonoTorrent.Client.FastResumeMode.html
  name: FastResumeMode
  nameWithType: FastResumeMode
  fullName: MonoTorrent.Client.FastResumeMode
- uid: MonoTorrent.Client.EngineSettingsBuilder.FileCreationMode*
  commentId: Overload:MonoTorrent.Client.EngineSettingsBuilder.FileCreationMode
  href: MonoTorrent.Client.EngineSettingsBuilder.html#MonoTorrent_Client_EngineSettingsBuilder_FileCreationMode
  name: FileCreationMode
  nameWithType: EngineSettingsBuilder.FileCreationMode
  fullName: MonoTorrent.Client.EngineSettingsBuilder.FileCreationMode
- uid: MonoTorrent.PieceWriter.FileCreationOptions
  commentId: T:MonoTorrent.PieceWriter.FileCreationOptions
  parent: MonoTorrent.PieceWriter
  href: MonoTorrent.PieceWriter.FileCreationOptions.html
  name: FileCreationOptions
  nameWithType: FileCreationOptions
  fullName: MonoTorrent.PieceWriter.FileCreationOptions
- uid: MonoTorrent.Client.TorrentManager.StreamProvider
  commentId: P:MonoTorrent.Client.TorrentManager.StreamProvider
  href: MonoTorrent.Client.TorrentManager.html#MonoTorrent_Client_TorrentManager_StreamProvider
  name: StreamProvider
  nameWithType: TorrentManager.StreamProvider
  fullName: MonoTorrent.Client.TorrentManager.StreamProvider
- uid: MonoTorrent.Client.EngineSettingsBuilder.HttpStreamingPrefix*
  commentId: Overload:MonoTorrent.Client.EngineSettingsBuilder.HttpStreamingPrefix
  href: MonoTorrent.Client.EngineSettingsBuilder.html#MonoTorrent_Client_EngineSettingsBuilder_HttpStreamingPrefix
  name: HttpStreamingPrefix
  nameWithType: EngineSettingsBuilder.HttpStreamingPrefix
  fullName: MonoTorrent.Client.EngineSettingsBuilder.HttpStreamingPrefix
- uid: MonoTorrent.Client.EngineSettingsBuilder.ListenEndPoints*
  commentId: Overload:MonoTorrent.Client.EngineSettingsBuilder.ListenEndPoints
  href: MonoTorrent.Client.EngineSettingsBuilder.html#MonoTorrent_Client_EngineSettingsBuilder_ListenEndPoints
  name: ListenEndPoints
  nameWithType: EngineSettingsBuilder.ListenEndPoints
  fullName: MonoTorrent.Client.EngineSettingsBuilder.ListenEndPoints
- uid: System.Collections.Generic.Dictionary{System.String,System.Net.IPEndPoint}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.Net.IPEndPoint}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<string, IPEndPoint>
  nameWithType: Dictionary<string, IPEndPoint>
  fullName: System.Collections.Generic.Dictionary<string, System.Net.IPEndPoint>
  nameWithType.vb: Dictionary(Of String, IPEndPoint)
  fullName.vb: System.Collections.Generic.Dictionary(Of String, System.Net.IPEndPoint)
  name.vb: Dictionary(Of String, IPEndPoint)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Net.IPEndPoint
    name: IPEndPoint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.net.ipendpoint
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Net.IPEndPoint
    name: IPEndPoint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.net.ipendpoint
  - name: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: MonoTorrent.Client.EngineSettingsBuilder.MaximumConnections*
  commentId: Overload:MonoTorrent.Client.EngineSettingsBuilder.MaximumConnections
  href: MonoTorrent.Client.EngineSettingsBuilder.html#MonoTorrent_Client_EngineSettingsBuilder_MaximumConnections
  name: MaximumConnections
  nameWithType: EngineSettingsBuilder.MaximumConnections
  fullName: MonoTorrent.Client.EngineSettingsBuilder.MaximumConnections
- uid: MonoTorrent.Client.EngineSettingsBuilder.MaximumDownloadRate*
  commentId: Overload:MonoTorrent.Client.EngineSettingsBuilder.MaximumDownloadRate
  href: MonoTorrent.Client.EngineSettingsBuilder.html#MonoTorrent_Client_EngineSettingsBuilder_MaximumDownloadRate
  name: MaximumDownloadRate
  nameWithType: EngineSettingsBuilder.MaximumDownloadRate
  fullName: MonoTorrent.Client.EngineSettingsBuilder.MaximumDownloadRate
- uid: MonoTorrent.Client.EngineSettingsBuilder.MaximumHalfOpenConnections*
  commentId: Overload:MonoTorrent.Client.EngineSettingsBuilder.MaximumHalfOpenConnections
  href: MonoTorrent.Client.EngineSettingsBuilder.html#MonoTorrent_Client_EngineSettingsBuilder_MaximumHalfOpenConnections
  name: MaximumHalfOpenConnections
  nameWithType: EngineSettingsBuilder.MaximumHalfOpenConnections
  fullName: MonoTorrent.Client.EngineSettingsBuilder.MaximumHalfOpenConnections
- uid: MonoTorrent.Client.EngineSettingsBuilder.MaximumUploadRate*
  commentId: Overload:MonoTorrent.Client.EngineSettingsBuilder.MaximumUploadRate
  href: MonoTorrent.Client.EngineSettingsBuilder.html#MonoTorrent_Client_EngineSettingsBuilder_MaximumUploadRate
  name: MaximumUploadRate
  nameWithType: EngineSettingsBuilder.MaximumUploadRate
  fullName: MonoTorrent.Client.EngineSettingsBuilder.MaximumUploadRate
- uid: MonoTorrent.Client.EngineSettingsBuilder.MaximumOpenFiles*
  commentId: Overload:MonoTorrent.Client.EngineSettingsBuilder.MaximumOpenFiles
  href: MonoTorrent.Client.EngineSettingsBuilder.html#MonoTorrent_Client_EngineSettingsBuilder_MaximumOpenFiles
  name: MaximumOpenFiles
  nameWithType: EngineSettingsBuilder.MaximumOpenFiles
  fullName: MonoTorrent.Client.EngineSettingsBuilder.MaximumOpenFiles
- uid: MonoTorrent.Client.EngineSettingsBuilder.MaximumDiskReadRate*
  commentId: Overload:MonoTorrent.Client.EngineSettingsBuilder.MaximumDiskReadRate
  href: MonoTorrent.Client.EngineSettingsBuilder.html#MonoTorrent_Client_EngineSettingsBuilder_MaximumDiskReadRate
  name: MaximumDiskReadRate
  nameWithType: EngineSettingsBuilder.MaximumDiskReadRate
  fullName: MonoTorrent.Client.EngineSettingsBuilder.MaximumDiskReadRate
- uid: MonoTorrent.Client.EngineSettingsBuilder.MaximumDiskWriteRate*
  commentId: Overload:MonoTorrent.Client.EngineSettingsBuilder.MaximumDiskWriteRate
  href: MonoTorrent.Client.EngineSettingsBuilder.html#MonoTorrent_Client_EngineSettingsBuilder_MaximumDiskWriteRate
  name: MaximumDiskWriteRate
  nameWithType: EngineSettingsBuilder.MaximumDiskWriteRate
  fullName: MonoTorrent.Client.EngineSettingsBuilder.MaximumDiskWriteRate
- uid: MonoTorrent.Client.EngineSettingsBuilder.MaximumRepeatedHashFails*
  commentId: Overload:MonoTorrent.Client.EngineSettingsBuilder.MaximumRepeatedHashFails
  href: MonoTorrent.Client.EngineSettingsBuilder.html#MonoTorrent_Client_EngineSettingsBuilder_MaximumRepeatedHashFails
  name: MaximumRepeatedHashFails
  nameWithType: EngineSettingsBuilder.MaximumRepeatedHashFails
  fullName: MonoTorrent.Client.EngineSettingsBuilder.MaximumRepeatedHashFails
- uid: MonoTorrent.Client.EngineSettingsBuilder.MaximumTotalHashFails*
  commentId: Overload:MonoTorrent.Client.EngineSettingsBuilder.MaximumTotalHashFails
  href: MonoTorrent.Client.EngineSettingsBuilder.html#MonoTorrent_Client_EngineSettingsBuilder_MaximumTotalHashFails
  name: MaximumTotalHashFails
  nameWithType: EngineSettingsBuilder.MaximumTotalHashFails
  fullName: MonoTorrent.Client.EngineSettingsBuilder.MaximumTotalHashFails
- uid: MonoTorrent.Client.EngineSettingsBuilder.ReportedListenEndPoints*
  commentId: Overload:MonoTorrent.Client.EngineSettingsBuilder.ReportedListenEndPoints
  href: MonoTorrent.Client.EngineSettingsBuilder.html#MonoTorrent_Client_EngineSettingsBuilder_ReportedListenEndPoints
  name: ReportedListenEndPoints
  nameWithType: EngineSettingsBuilder.ReportedListenEndPoints
  fullName: MonoTorrent.Client.EngineSettingsBuilder.ReportedListenEndPoints
- uid: MonoTorrent.Client.EngineSettingsBuilder.WebSeedConnectionTimeout
  commentId: P:MonoTorrent.Client.EngineSettingsBuilder.WebSeedConnectionTimeout
  href: MonoTorrent.Client.EngineSettingsBuilder.html#MonoTorrent_Client_EngineSettingsBuilder_WebSeedConnectionTimeout
  name: WebSeedConnectionTimeout
  nameWithType: EngineSettingsBuilder.WebSeedConnectionTimeout
  fullName: MonoTorrent.Client.EngineSettingsBuilder.WebSeedConnectionTimeout
- uid: MonoTorrent.Client.EngineSettingsBuilder.StaleRequestTimeout*
  commentId: Overload:MonoTorrent.Client.EngineSettingsBuilder.StaleRequestTimeout
  href: MonoTorrent.Client.EngineSettingsBuilder.html#MonoTorrent_Client_EngineSettingsBuilder_StaleRequestTimeout
  name: StaleRequestTimeout
  nameWithType: EngineSettingsBuilder.StaleRequestTimeout
  fullName: MonoTorrent.Client.EngineSettingsBuilder.StaleRequestTimeout
- uid: MonoTorrent.Client.EngineSettingsBuilder.UsePartialFiles*
  commentId: Overload:MonoTorrent.Client.EngineSettingsBuilder.UsePartialFiles
  href: MonoTorrent.Client.EngineSettingsBuilder.html#MonoTorrent_Client_EngineSettingsBuilder_UsePartialFiles
  name: UsePartialFiles
  nameWithType: EngineSettingsBuilder.UsePartialFiles
  fullName: MonoTorrent.Client.EngineSettingsBuilder.UsePartialFiles
- uid: MonoTorrent.Client.EngineSettingsBuilder.WebSeedConnectionTimeout*
  commentId: Overload:MonoTorrent.Client.EngineSettingsBuilder.WebSeedConnectionTimeout
  href: MonoTorrent.Client.EngineSettingsBuilder.html#MonoTorrent_Client_EngineSettingsBuilder_WebSeedConnectionTimeout
  name: WebSeedConnectionTimeout
  nameWithType: EngineSettingsBuilder.WebSeedConnectionTimeout
  fullName: MonoTorrent.Client.EngineSettingsBuilder.WebSeedConnectionTimeout
- uid: MonoTorrent.Client.EngineSettingsBuilder.WebSeedDelay*
  commentId: Overload:MonoTorrent.Client.EngineSettingsBuilder.WebSeedDelay
  href: MonoTorrent.Client.EngineSettingsBuilder.html#MonoTorrent_Client_EngineSettingsBuilder_WebSeedDelay
  name: WebSeedDelay
  nameWithType: EngineSettingsBuilder.WebSeedDelay
  fullName: MonoTorrent.Client.EngineSettingsBuilder.WebSeedDelay
- uid: MonoTorrent.Client.EngineSettingsBuilder.WebSeedSpeedTrigger*
  commentId: Overload:MonoTorrent.Client.EngineSettingsBuilder.WebSeedSpeedTrigger
  href: MonoTorrent.Client.EngineSettingsBuilder.html#MonoTorrent_Client_EngineSettingsBuilder_WebSeedSpeedTrigger
  name: WebSeedSpeedTrigger
  nameWithType: EngineSettingsBuilder.WebSeedSpeedTrigger
  fullName: MonoTorrent.Client.EngineSettingsBuilder.WebSeedSpeedTrigger
- uid: MonoTorrent.Client.EngineSettingsBuilder.MutableTorrentUpdateInterval*
  commentId: Overload:MonoTorrent.Client.EngineSettingsBuilder.MutableTorrentUpdateInterval
  href: MonoTorrent.Client.EngineSettingsBuilder.html#MonoTorrent_Client_EngineSettingsBuilder_MutableTorrentUpdateInterval
  name: MutableTorrentUpdateInterval
  nameWithType: EngineSettingsBuilder.MutableTorrentUpdateInterval
  fullName: MonoTorrent.Client.EngineSettingsBuilder.MutableTorrentUpdateInterval
- uid: MonoTorrent.Client.EngineSettingsBuilder.#ctor*
  commentId: Overload:MonoTorrent.Client.EngineSettingsBuilder.#ctor
  href: MonoTorrent.Client.EngineSettingsBuilder.html#MonoTorrent_Client_EngineSettingsBuilder__ctor
  name: EngineSettingsBuilder
  nameWithType: EngineSettingsBuilder.EngineSettingsBuilder
  fullName: MonoTorrent.Client.EngineSettingsBuilder.EngineSettingsBuilder
  nameWithType.vb: EngineSettingsBuilder.New
  fullName.vb: MonoTorrent.Client.EngineSettingsBuilder.New
  name.vb: New
- uid: MonoTorrent.Client.EngineSettings
  commentId: T:MonoTorrent.Client.EngineSettings
  parent: MonoTorrent.Client
  href: MonoTorrent.Client.EngineSettings.html
  name: EngineSettings
  nameWithType: EngineSettings
  fullName: MonoTorrent.Client.EngineSettings
- uid: MonoTorrent.Client.EngineSettingsBuilder.ToSettings*
  commentId: Overload:MonoTorrent.Client.EngineSettingsBuilder.ToSettings
  href: MonoTorrent.Client.EngineSettingsBuilder.html#MonoTorrent_Client_EngineSettingsBuilder_ToSettings
  name: ToSettings
  nameWithType: EngineSettingsBuilder.ToSettings
  fullName: MonoTorrent.Client.EngineSettingsBuilder.ToSettings
