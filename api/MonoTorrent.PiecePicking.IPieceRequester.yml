### YamlMime:ManagedReference
items:
- uid: MonoTorrent.PiecePicking.IPieceRequester
  commentId: T:MonoTorrent.PiecePicking.IPieceRequester
  id: IPieceRequester
  parent: MonoTorrent.PiecePicking
  children:
  - MonoTorrent.PiecePicking.IPieceRequester.AddRequests(MonoTorrent.PiecePicking.IRequester,MonoTorrent.ReadOnlyBitField,System.ReadOnlySpan{MonoTorrent.ReadOnlyBitField})
  - MonoTorrent.PiecePicking.IPieceRequester.AddRequests(System.ReadOnlySpan{System.ValueTuple{MonoTorrent.PiecePicking.IRequester,MonoTorrent.ReadOnlyBitField}})
  - MonoTorrent.PiecePicking.IPieceRequester.CancelRequests(MonoTorrent.PiecePicking.IRequester,System.Int32,System.Int32)
  - MonoTorrent.PiecePicking.IPieceRequester.CurrentRequestCount
  - MonoTorrent.PiecePicking.IPieceRequester.InEndgameMode
  - MonoTorrent.PiecePicking.IPieceRequester.Initialise(MonoTorrent.PiecePicking.IPieceRequesterData,MonoTorrent.PiecePicking.IMessageEnqueuer,System.ReadOnlySpan{MonoTorrent.ReadOnlyBitField})
  - MonoTorrent.PiecePicking.IPieceRequester.IsInteresting(MonoTorrent.PiecePicking.IRequester,MonoTorrent.ReadOnlyBitField)
  - MonoTorrent.PiecePicking.IPieceRequester.RequestRejected(MonoTorrent.PiecePicking.IRequester,MonoTorrent.PiecePicking.PieceSegment)
  - MonoTorrent.PiecePicking.IPieceRequester.ValidatePiece(MonoTorrent.PiecePicking.IRequester,MonoTorrent.PiecePicking.PieceSegment,System.Boolean@,System.Collections.Generic.HashSet{MonoTorrent.PiecePicking.IRequester})
  langs:
  - csharp
  - vb
  name: IPieceRequester
  nameWithType: IPieceRequester
  fullName: MonoTorrent.PiecePicking.IPieceRequester
  type: Interface
  source:
    remote:
      path: MonoTorrent/src/PiecePicking/IPieceRequester.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: IPieceRequester
    path: src/PiecePicking/IPieceRequester.cs
    startLine: 57
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.PiecePicking
  summary: >-
    Allows an IPiecePicker implementation to create piece requests for

    specific peers and then add them to the peers message queue. If the

    limits on maximum concurrent piece requests are ignored
  example: []
  syntax:
    content: public interface IPieceRequester
    content.vb: Public Interface IPieceRequester
- uid: MonoTorrent.PiecePicking.IPieceRequester.InEndgameMode
  commentId: P:MonoTorrent.PiecePicking.IPieceRequester.InEndgameMode
  id: InEndgameMode
  parent: MonoTorrent.PiecePicking.IPieceRequester
  langs:
  - csharp
  - vb
  name: InEndgameMode
  nameWithType: IPieceRequester.InEndgameMode
  fullName: MonoTorrent.PiecePicking.IPieceRequester.InEndgameMode
  type: Property
  source:
    remote:
      path: MonoTorrent/src/PiecePicking/IPieceRequester.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: InEndgameMode
    path: src/PiecePicking/IPieceRequester.cs
    startLine: 63
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.PiecePicking
  summary: >-
    Should return <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the underlying piece picking algorithm

    has entered 'endgame mode' as defined by the bittorrent specification.
  example: []
  syntax:
    content: bool InEndgameMode { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property InEndgameMode As Boolean
  overload: MonoTorrent.PiecePicking.IPieceRequester.InEndgameMode*
- uid: MonoTorrent.PiecePicking.IPieceRequester.AddRequests(System.ReadOnlySpan{System.ValueTuple{MonoTorrent.PiecePicking.IRequester,MonoTorrent.ReadOnlyBitField}})
  commentId: M:MonoTorrent.PiecePicking.IPieceRequester.AddRequests(System.ReadOnlySpan{System.ValueTuple{MonoTorrent.PiecePicking.IRequester,MonoTorrent.ReadOnlyBitField}})
  id: AddRequests(System.ReadOnlySpan{System.ValueTuple{MonoTorrent.PiecePicking.IRequester,MonoTorrent.ReadOnlyBitField}})
  parent: MonoTorrent.PiecePicking.IPieceRequester
  langs:
  - csharp
  - vb
  name: AddRequests(ReadOnlySpan<(IRequester Peer, ReadOnlyBitField Available)>)
  nameWithType: IPieceRequester.AddRequests(ReadOnlySpan<(IRequester Peer, ReadOnlyBitField Available)>)
  fullName: MonoTorrent.PiecePicking.IPieceRequester.AddRequests(System.ReadOnlySpan<(MonoTorrent.PiecePicking.IRequester Peer, MonoTorrent.ReadOnlyBitField Available)>)
  type: Method
  source:
    remote:
      path: MonoTorrent/src/PiecePicking/IPieceRequester.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: AddRequests
    path: src/PiecePicking/IPieceRequester.cs
    startLine: 69
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.PiecePicking
  summary: Should enqueue piece requests for any peer who is has capacity.
  example: []
  syntax:
    content: void AddRequests(ReadOnlySpan<(IRequester Peer, ReadOnlyBitField Available)> peers)
    parameters:
    - id: peers
      type: System.ReadOnlySpan{System.ValueTuple{MonoTorrent.PiecePicking.IRequester,MonoTorrent.ReadOnlyBitField}}
      description: ''
    content.vb: Sub AddRequests(peers As ReadOnlySpan(Of (Peer As IRequester, Available As ReadOnlyBitField)))
  overload: MonoTorrent.PiecePicking.IPieceRequester.AddRequests*
  nameWithType.vb: IPieceRequester.AddRequests(ReadOnlySpan(Of (Peer As IRequester, Available As ReadOnlyBitField)))
  fullName.vb: MonoTorrent.PiecePicking.IPieceRequester.AddRequests(System.ReadOnlySpan(Of (Peer As MonoTorrent.PiecePicking.IRequester, Available As MonoTorrent.ReadOnlyBitField)))
  name.vb: AddRequests(ReadOnlySpan(Of (Peer As IRequester, Available As ReadOnlyBitField)))
- uid: MonoTorrent.PiecePicking.IPieceRequester.AddRequests(MonoTorrent.PiecePicking.IRequester,MonoTorrent.ReadOnlyBitField,System.ReadOnlySpan{MonoTorrent.ReadOnlyBitField})
  commentId: M:MonoTorrent.PiecePicking.IPieceRequester.AddRequests(MonoTorrent.PiecePicking.IRequester,MonoTorrent.ReadOnlyBitField,System.ReadOnlySpan{MonoTorrent.ReadOnlyBitField})
  id: AddRequests(MonoTorrent.PiecePicking.IRequester,MonoTorrent.ReadOnlyBitField,System.ReadOnlySpan{MonoTorrent.ReadOnlyBitField})
  parent: MonoTorrent.PiecePicking.IPieceRequester
  langs:
  - csharp
  - vb
  name: AddRequests(IRequester, ReadOnlyBitField, ReadOnlySpan<ReadOnlyBitField>)
  nameWithType: IPieceRequester.AddRequests(IRequester, ReadOnlyBitField, ReadOnlySpan<ReadOnlyBitField>)
  fullName: MonoTorrent.PiecePicking.IPieceRequester.AddRequests(MonoTorrent.PiecePicking.IRequester, MonoTorrent.ReadOnlyBitField, System.ReadOnlySpan<MonoTorrent.ReadOnlyBitField>)
  type: Method
  source:
    remote:
      path: MonoTorrent/src/PiecePicking/IPieceRequester.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: AddRequests
    path: src/PiecePicking/IPieceRequester.cs
    startLine: 77
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.PiecePicking
  summary: Attempts to enqueue more requests for the specified peer.
  example: []
  syntax:
    content: void AddRequests(IRequester peer, ReadOnlyBitField available, ReadOnlySpan<ReadOnlyBitField> peers)
    parameters:
    - id: peer
      type: MonoTorrent.PiecePicking.IRequester
      description: ''
    - id: available
      type: MonoTorrent.ReadOnlyBitField
      description: ''
    - id: peers
      type: System.ReadOnlySpan{MonoTorrent.ReadOnlyBitField}
      description: ''
    content.vb: Sub AddRequests(peer As IRequester, available As ReadOnlyBitField, peers As ReadOnlySpan(Of ReadOnlyBitField))
  overload: MonoTorrent.PiecePicking.IPieceRequester.AddRequests*
  nameWithType.vb: IPieceRequester.AddRequests(IRequester, ReadOnlyBitField, ReadOnlySpan(Of ReadOnlyBitField))
  fullName.vb: MonoTorrent.PiecePicking.IPieceRequester.AddRequests(MonoTorrent.PiecePicking.IRequester, MonoTorrent.ReadOnlyBitField, System.ReadOnlySpan(Of MonoTorrent.ReadOnlyBitField))
  name.vb: AddRequests(IRequester, ReadOnlyBitField, ReadOnlySpan(Of ReadOnlyBitField))
- uid: MonoTorrent.PiecePicking.IPieceRequester.ValidatePiece(MonoTorrent.PiecePicking.IRequester,MonoTorrent.PiecePicking.PieceSegment,System.Boolean@,System.Collections.Generic.HashSet{MonoTorrent.PiecePicking.IRequester})
  commentId: M:MonoTorrent.PiecePicking.IPieceRequester.ValidatePiece(MonoTorrent.PiecePicking.IRequester,MonoTorrent.PiecePicking.PieceSegment,System.Boolean@,System.Collections.Generic.HashSet{MonoTorrent.PiecePicking.IRequester})
  id: ValidatePiece(MonoTorrent.PiecePicking.IRequester,MonoTorrent.PiecePicking.PieceSegment,System.Boolean@,System.Collections.Generic.HashSet{MonoTorrent.PiecePicking.IRequester})
  parent: MonoTorrent.PiecePicking.IPieceRequester
  langs:
  - csharp
  - vb
  name: ValidatePiece(IRequester, PieceSegment, out bool, HashSet<IRequester>)
  nameWithType: IPieceRequester.ValidatePiece(IRequester, PieceSegment, out bool, HashSet<IRequester>)
  fullName: MonoTorrent.PiecePicking.IPieceRequester.ValidatePiece(MonoTorrent.PiecePicking.IRequester, MonoTorrent.PiecePicking.PieceSegment, out bool, System.Collections.Generic.HashSet<MonoTorrent.PiecePicking.IRequester>)
  type: Method
  source:
    remote:
      path: MonoTorrent/src/PiecePicking/IPieceRequester.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: ValidatePiece
    path: src/PiecePicking/IPieceRequester.cs
    startLine: 87
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.PiecePicking
  summary: ''
  example: []
  syntax:
    content: bool ValidatePiece(IRequester peer, PieceSegment pieceSegment, out bool pieceComplete, HashSet<IRequester> peersInvolved)
    parameters:
    - id: peer
      type: MonoTorrent.PiecePicking.IRequester
      description: ''
    - id: pieceSegment
      type: MonoTorrent.PiecePicking.PieceSegment
      description: ''
    - id: pieceComplete
      type: System.Boolean
      description: ''
    - id: peersInvolved
      type: System.Collections.Generic.HashSet{MonoTorrent.PiecePicking.IRequester}
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: Function ValidatePiece(peer As IRequester, pieceSegment As PieceSegment, pieceComplete As Boolean, peersInvolved As HashSet(Of IRequester)) As Boolean
  overload: MonoTorrent.PiecePicking.IPieceRequester.ValidatePiece*
  nameWithType.vb: IPieceRequester.ValidatePiece(IRequester, PieceSegment, Boolean, HashSet(Of IRequester))
  fullName.vb: MonoTorrent.PiecePicking.IPieceRequester.ValidatePiece(MonoTorrent.PiecePicking.IRequester, MonoTorrent.PiecePicking.PieceSegment, Boolean, System.Collections.Generic.HashSet(Of MonoTorrent.PiecePicking.IRequester))
  name.vb: ValidatePiece(IRequester, PieceSegment, Boolean, HashSet(Of IRequester))
- uid: MonoTorrent.PiecePicking.IPieceRequester.IsInteresting(MonoTorrent.PiecePicking.IRequester,MonoTorrent.ReadOnlyBitField)
  commentId: M:MonoTorrent.PiecePicking.IPieceRequester.IsInteresting(MonoTorrent.PiecePicking.IRequester,MonoTorrent.ReadOnlyBitField)
  id: IsInteresting(MonoTorrent.PiecePicking.IRequester,MonoTorrent.ReadOnlyBitField)
  parent: MonoTorrent.PiecePicking.IPieceRequester
  langs:
  - csharp
  - vb
  name: IsInteresting(IRequester, ReadOnlyBitField)
  nameWithType: IPieceRequester.IsInteresting(IRequester, ReadOnlyBitField)
  fullName: MonoTorrent.PiecePicking.IPieceRequester.IsInteresting(MonoTorrent.PiecePicking.IRequester, MonoTorrent.ReadOnlyBitField)
  type: Method
  source:
    remote:
      path: MonoTorrent/src/PiecePicking/IPieceRequester.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: IsInteresting
    path: src/PiecePicking/IPieceRequester.cs
    startLine: 95
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.PiecePicking
  summary: ''
  example: []
  syntax:
    content: bool IsInteresting(IRequester peer, ReadOnlyBitField bitField)
    parameters:
    - id: peer
      type: MonoTorrent.PiecePicking.IRequester
      description: ''
    - id: bitField
      type: MonoTorrent.ReadOnlyBitField
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: Function IsInteresting(peer As IRequester, bitField As ReadOnlyBitField) As Boolean
  overload: MonoTorrent.PiecePicking.IPieceRequester.IsInteresting*
- uid: MonoTorrent.PiecePicking.IPieceRequester.Initialise(MonoTorrent.PiecePicking.IPieceRequesterData,MonoTorrent.PiecePicking.IMessageEnqueuer,System.ReadOnlySpan{MonoTorrent.ReadOnlyBitField})
  commentId: M:MonoTorrent.PiecePicking.IPieceRequester.Initialise(MonoTorrent.PiecePicking.IPieceRequesterData,MonoTorrent.PiecePicking.IMessageEnqueuer,System.ReadOnlySpan{MonoTorrent.ReadOnlyBitField})
  id: Initialise(MonoTorrent.PiecePicking.IPieceRequesterData,MonoTorrent.PiecePicking.IMessageEnqueuer,System.ReadOnlySpan{MonoTorrent.ReadOnlyBitField})
  parent: MonoTorrent.PiecePicking.IPieceRequester
  langs:
  - csharp
  - vb
  name: Initialise(IPieceRequesterData, IMessageEnqueuer, ReadOnlySpan<ReadOnlyBitField>)
  nameWithType: IPieceRequester.Initialise(IPieceRequesterData, IMessageEnqueuer, ReadOnlySpan<ReadOnlyBitField>)
  fullName: MonoTorrent.PiecePicking.IPieceRequester.Initialise(MonoTorrent.PiecePicking.IPieceRequesterData, MonoTorrent.PiecePicking.IMessageEnqueuer, System.ReadOnlySpan<MonoTorrent.ReadOnlyBitField>)
  type: Method
  source:
    remote:
      path: MonoTorrent/src/PiecePicking/IPieceRequester.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: Initialise
    path: src/PiecePicking/IPieceRequester.cs
    startLine: 106
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.PiecePicking
  summary: ''
  example: []
  syntax:
    content: void Initialise(IPieceRequesterData torrentData, IMessageEnqueuer enqueuer, ReadOnlySpan<ReadOnlyBitField> ignorableBitfields)
    parameters:
    - id: torrentData
      type: MonoTorrent.PiecePicking.IPieceRequesterData
      description: The files, size and piecelength for the torrent.
    - id: enqueuer
      type: MonoTorrent.PiecePicking.IMessageEnqueuer
      description: Enqueues request, or cancellation, messages with the peer
    - id: ignorableBitfields
      type: System.ReadOnlySpan{MonoTorrent.ReadOnlyBitField}
      description: >-
        These bitfields represent pieces which have successfully
           downloaded and passed a hash check, pieces which have successfully downloaded but have not hash checked yet or
           pieces which have not yet been hash checked by the library and so it is not known whether they should be requested or not.
    content.vb: Sub Initialise(torrentData As IPieceRequesterData, enqueuer As IMessageEnqueuer, ignorableBitfields As ReadOnlySpan(Of ReadOnlyBitField))
  overload: MonoTorrent.PiecePicking.IPieceRequester.Initialise*
  nameWithType.vb: IPieceRequester.Initialise(IPieceRequesterData, IMessageEnqueuer, ReadOnlySpan(Of ReadOnlyBitField))
  fullName.vb: MonoTorrent.PiecePicking.IPieceRequester.Initialise(MonoTorrent.PiecePicking.IPieceRequesterData, MonoTorrent.PiecePicking.IMessageEnqueuer, System.ReadOnlySpan(Of MonoTorrent.ReadOnlyBitField))
  name.vb: Initialise(IPieceRequesterData, IMessageEnqueuer, ReadOnlySpan(Of ReadOnlyBitField))
- uid: MonoTorrent.PiecePicking.IPieceRequester.CancelRequests(MonoTorrent.PiecePicking.IRequester,System.Int32,System.Int32)
  commentId: M:MonoTorrent.PiecePicking.IPieceRequester.CancelRequests(MonoTorrent.PiecePicking.IRequester,System.Int32,System.Int32)
  id: CancelRequests(MonoTorrent.PiecePicking.IRequester,System.Int32,System.Int32)
  parent: MonoTorrent.PiecePicking.IPieceRequester
  langs:
  - csharp
  - vb
  name: CancelRequests(IRequester, int, int)
  nameWithType: IPieceRequester.CancelRequests(IRequester, int, int)
  fullName: MonoTorrent.PiecePicking.IPieceRequester.CancelRequests(MonoTorrent.PiecePicking.IRequester, int, int)
  type: Method
  source:
    remote:
      path: MonoTorrent/src/PiecePicking/IPieceRequester.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: CancelRequests
    path: src/PiecePicking/IPieceRequester.cs
    startLine: 108
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.PiecePicking
  syntax:
    content: void CancelRequests(IRequester peer, int startIndex, int endIndex)
    parameters:
    - id: peer
      type: MonoTorrent.PiecePicking.IRequester
    - id: startIndex
      type: System.Int32
    - id: endIndex
      type: System.Int32
    content.vb: Sub CancelRequests(peer As IRequester, startIndex As Integer, endIndex As Integer)
  overload: MonoTorrent.PiecePicking.IPieceRequester.CancelRequests*
  nameWithType.vb: IPieceRequester.CancelRequests(IRequester, Integer, Integer)
  fullName.vb: MonoTorrent.PiecePicking.IPieceRequester.CancelRequests(MonoTorrent.PiecePicking.IRequester, Integer, Integer)
  name.vb: CancelRequests(IRequester, Integer, Integer)
- uid: MonoTorrent.PiecePicking.IPieceRequester.RequestRejected(MonoTorrent.PiecePicking.IRequester,MonoTorrent.PiecePicking.PieceSegment)
  commentId: M:MonoTorrent.PiecePicking.IPieceRequester.RequestRejected(MonoTorrent.PiecePicking.IRequester,MonoTorrent.PiecePicking.PieceSegment)
  id: RequestRejected(MonoTorrent.PiecePicking.IRequester,MonoTorrent.PiecePicking.PieceSegment)
  parent: MonoTorrent.PiecePicking.IPieceRequester
  langs:
  - csharp
  - vb
  name: RequestRejected(IRequester, PieceSegment)
  nameWithType: IPieceRequester.RequestRejected(IRequester, PieceSegment)
  fullName: MonoTorrent.PiecePicking.IPieceRequester.RequestRejected(MonoTorrent.PiecePicking.IRequester, MonoTorrent.PiecePicking.PieceSegment)
  type: Method
  source:
    remote:
      path: MonoTorrent/src/PiecePicking/IPieceRequester.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: RequestRejected
    path: src/PiecePicking/IPieceRequester.cs
    startLine: 110
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.PiecePicking
  syntax:
    content: void RequestRejected(IRequester peer, PieceSegment pieceRequest)
    parameters:
    - id: peer
      type: MonoTorrent.PiecePicking.IRequester
    - id: pieceRequest
      type: MonoTorrent.PiecePicking.PieceSegment
    content.vb: Sub RequestRejected(peer As IRequester, pieceRequest As PieceSegment)
  overload: MonoTorrent.PiecePicking.IPieceRequester.RequestRejected*
- uid: MonoTorrent.PiecePicking.IPieceRequester.CurrentRequestCount
  commentId: M:MonoTorrent.PiecePicking.IPieceRequester.CurrentRequestCount
  id: CurrentRequestCount
  parent: MonoTorrent.PiecePicking.IPieceRequester
  langs:
  - csharp
  - vb
  name: CurrentRequestCount()
  nameWithType: IPieceRequester.CurrentRequestCount()
  fullName: MonoTorrent.PiecePicking.IPieceRequester.CurrentRequestCount()
  type: Method
  source:
    remote:
      path: MonoTorrent/src/PiecePicking/IPieceRequester.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: CurrentRequestCount
    path: src/PiecePicking/IPieceRequester.cs
    startLine: 112
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.PiecePicking
  syntax:
    content: int CurrentRequestCount()
    return:
      type: System.Int32
    content.vb: Function CurrentRequestCount() As Integer
  overload: MonoTorrent.PiecePicking.IPieceRequester.CurrentRequestCount*
references:
- uid: MonoTorrent.PiecePicking
  commentId: N:MonoTorrent.PiecePicking
  href: MonoTorrent.html
  name: MonoTorrent.PiecePicking
  nameWithType: MonoTorrent.PiecePicking
  fullName: MonoTorrent.PiecePicking
  spec.csharp:
  - uid: MonoTorrent
    name: MonoTorrent
    href: MonoTorrent.html
  - name: .
  - uid: MonoTorrent.PiecePicking
    name: PiecePicking
    href: MonoTorrent.PiecePicking.html
  spec.vb:
  - uid: MonoTorrent
    name: MonoTorrent
    href: MonoTorrent.html
  - name: .
  - uid: MonoTorrent.PiecePicking
    name: PiecePicking
    href: MonoTorrent.PiecePicking.html
- uid: MonoTorrent.PiecePicking.IPieceRequester.InEndgameMode*
  commentId: Overload:MonoTorrent.PiecePicking.IPieceRequester.InEndgameMode
  href: MonoTorrent.PiecePicking.IPieceRequester.html#MonoTorrent_PiecePicking_IPieceRequester_InEndgameMode
  name: InEndgameMode
  nameWithType: IPieceRequester.InEndgameMode
  fullName: MonoTorrent.PiecePicking.IPieceRequester.InEndgameMode
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: MonoTorrent.PiecePicking.IPieceRequester.AddRequests*
  commentId: Overload:MonoTorrent.PiecePicking.IPieceRequester.AddRequests
  href: MonoTorrent.PiecePicking.IPieceRequester.html#MonoTorrent_PiecePicking_IPieceRequester_AddRequests_System_ReadOnlySpan_System_ValueTuple_MonoTorrent_PiecePicking_IRequester_MonoTorrent_ReadOnlyBitField___
  name: AddRequests
  nameWithType: IPieceRequester.AddRequests
  fullName: MonoTorrent.PiecePicking.IPieceRequester.AddRequests
- uid: System.ReadOnlySpan{System.ValueTuple{MonoTorrent.PiecePicking.IRequester,MonoTorrent.ReadOnlyBitField}}
  commentId: T:System.ReadOnlySpan{System.ValueTuple{MonoTorrent.PiecePicking.IRequester,MonoTorrent.ReadOnlyBitField}}
  parent: System
  definition: System.ReadOnlySpan`1
  href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  name: ReadOnlySpan<(IRequester Peer, ReadOnlyBitField Available)>
  nameWithType: ReadOnlySpan<(IRequester Peer, ReadOnlyBitField Available)>
  fullName: System.ReadOnlySpan<(MonoTorrent.PiecePicking.IRequester Peer, MonoTorrent.ReadOnlyBitField Available)>
  nameWithType.vb: ReadOnlySpan(Of (Peer As IRequester, Available As ReadOnlyBitField))
  fullName.vb: System.ReadOnlySpan(Of (Peer As MonoTorrent.PiecePicking.IRequester, Available As MonoTorrent.ReadOnlyBitField))
  name.vb: ReadOnlySpan(Of (Peer As IRequester, Available As ReadOnlyBitField))
  spec.csharp:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: <
  - name: (
  - uid: MonoTorrent.PiecePicking.IRequester
    name: IRequester
    href: MonoTorrent.PiecePicking.IRequester.html
  - name: " "
  - uid: System.ValueTuple{MonoTorrent.PiecePicking.IRequester,MonoTorrent.ReadOnlyBitField}.Peer
    name: Peer
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-monotorrent.piecepicking.irequester,monotorrent.readonlybitfield-.peer
  - name: ','
  - name: " "
  - uid: MonoTorrent.ReadOnlyBitField
    name: ReadOnlyBitField
    href: MonoTorrent.ReadOnlyBitField.html
  - name: " "
  - uid: System.ValueTuple{MonoTorrent.PiecePicking.IRequester,MonoTorrent.ReadOnlyBitField}.Available
    name: Available
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-monotorrent.piecepicking.irequester,monotorrent.readonlybitfield-.available
  - name: )
  - name: '>'
  spec.vb:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: (
  - name: Of
  - name: " "
  - name: (
  - uid: System.ValueTuple{MonoTorrent.PiecePicking.IRequester,MonoTorrent.ReadOnlyBitField}.Peer
    name: Peer
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-monotorrent.piecepicking.irequester,monotorrent.readonlybitfield-.peer
  - name: " "
  - name: As
  - name: " "
  - uid: MonoTorrent.PiecePicking.IRequester
    name: IRequester
    href: MonoTorrent.PiecePicking.IRequester.html
  - name: ','
  - name: " "
  - uid: System.ValueTuple{MonoTorrent.PiecePicking.IRequester,MonoTorrent.ReadOnlyBitField}.Available
    name: Available
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-monotorrent.piecepicking.irequester,monotorrent.readonlybitfield-.available
  - name: " "
  - name: As
  - name: " "
  - uid: MonoTorrent.ReadOnlyBitField
    name: ReadOnlyBitField
    href: MonoTorrent.ReadOnlyBitField.html
  - name: )
  - name: )
- uid: System.ReadOnlySpan`1
  commentId: T:System.ReadOnlySpan`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  name: ReadOnlySpan<T>
  nameWithType: ReadOnlySpan<T>
  fullName: System.ReadOnlySpan<T>
  nameWithType.vb: ReadOnlySpan(Of T)
  fullName.vb: System.ReadOnlySpan(Of T)
  name.vb: ReadOnlySpan(Of T)
  spec.csharp:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: MonoTorrent.PiecePicking.IRequester
  commentId: T:MonoTorrent.PiecePicking.IRequester
  parent: MonoTorrent.PiecePicking
  href: MonoTorrent.PiecePicking.IRequester.html
  name: IRequester
  nameWithType: IRequester
  fullName: MonoTorrent.PiecePicking.IRequester
- uid: MonoTorrent.ReadOnlyBitField
  commentId: T:MonoTorrent.ReadOnlyBitField
  parent: MonoTorrent
  href: MonoTorrent.ReadOnlyBitField.html
  name: ReadOnlyBitField
  nameWithType: ReadOnlyBitField
  fullName: MonoTorrent.ReadOnlyBitField
- uid: System.ReadOnlySpan{MonoTorrent.ReadOnlyBitField}
  commentId: T:System.ReadOnlySpan{MonoTorrent.ReadOnlyBitField}
  parent: System
  definition: System.ReadOnlySpan`1
  href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  name: ReadOnlySpan<ReadOnlyBitField>
  nameWithType: ReadOnlySpan<ReadOnlyBitField>
  fullName: System.ReadOnlySpan<MonoTorrent.ReadOnlyBitField>
  nameWithType.vb: ReadOnlySpan(Of ReadOnlyBitField)
  fullName.vb: System.ReadOnlySpan(Of MonoTorrent.ReadOnlyBitField)
  name.vb: ReadOnlySpan(Of ReadOnlyBitField)
  spec.csharp:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: <
  - uid: MonoTorrent.ReadOnlyBitField
    name: ReadOnlyBitField
    href: MonoTorrent.ReadOnlyBitField.html
  - name: '>'
  spec.vb:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: (
  - name: Of
  - name: " "
  - uid: MonoTorrent.ReadOnlyBitField
    name: ReadOnlyBitField
    href: MonoTorrent.ReadOnlyBitField.html
  - name: )
- uid: MonoTorrent
  commentId: N:MonoTorrent
  href: MonoTorrent.html
  name: MonoTorrent
  nameWithType: MonoTorrent
  fullName: MonoTorrent
- uid: MonoTorrent.PiecePicking.IPieceRequester.ValidatePiece*
  commentId: Overload:MonoTorrent.PiecePicking.IPieceRequester.ValidatePiece
  href: MonoTorrent.PiecePicking.IPieceRequester.html#MonoTorrent_PiecePicking_IPieceRequester_ValidatePiece_MonoTorrent_PiecePicking_IRequester_MonoTorrent_PiecePicking_PieceSegment_System_Boolean__System_Collections_Generic_HashSet_MonoTorrent_PiecePicking_IRequester__
  name: ValidatePiece
  nameWithType: IPieceRequester.ValidatePiece
  fullName: MonoTorrent.PiecePicking.IPieceRequester.ValidatePiece
- uid: MonoTorrent.PiecePicking.PieceSegment
  commentId: T:MonoTorrent.PiecePicking.PieceSegment
  parent: MonoTorrent.PiecePicking
  href: MonoTorrent.PiecePicking.PieceSegment.html
  name: PieceSegment
  nameWithType: PieceSegment
  fullName: MonoTorrent.PiecePicking.PieceSegment
- uid: System.Collections.Generic.HashSet{MonoTorrent.PiecePicking.IRequester}
  commentId: T:System.Collections.Generic.HashSet{MonoTorrent.PiecePicking.IRequester}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.HashSet`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  name: HashSet<IRequester>
  nameWithType: HashSet<IRequester>
  fullName: System.Collections.Generic.HashSet<MonoTorrent.PiecePicking.IRequester>
  nameWithType.vb: HashSet(Of IRequester)
  fullName.vb: System.Collections.Generic.HashSet(Of MonoTorrent.PiecePicking.IRequester)
  name.vb: HashSet(Of IRequester)
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: <
  - uid: MonoTorrent.PiecePicking.IRequester
    name: IRequester
    href: MonoTorrent.PiecePicking.IRequester.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: (
  - name: Of
  - name: " "
  - uid: MonoTorrent.PiecePicking.IRequester
    name: IRequester
    href: MonoTorrent.PiecePicking.IRequester.html
  - name: )
- uid: System.Collections.Generic.HashSet`1
  commentId: T:System.Collections.Generic.HashSet`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  name: HashSet<T>
  nameWithType: HashSet<T>
  fullName: System.Collections.Generic.HashSet<T>
  nameWithType.vb: HashSet(Of T)
  fullName.vb: System.Collections.Generic.HashSet(Of T)
  name.vb: HashSet(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: MonoTorrent.PiecePicking.IPieceRequester.IsInteresting*
  commentId: Overload:MonoTorrent.PiecePicking.IPieceRequester.IsInteresting
  href: MonoTorrent.PiecePicking.IPieceRequester.html#MonoTorrent_PiecePicking_IPieceRequester_IsInteresting_MonoTorrent_PiecePicking_IRequester_MonoTorrent_ReadOnlyBitField_
  name: IsInteresting
  nameWithType: IPieceRequester.IsInteresting
  fullName: MonoTorrent.PiecePicking.IPieceRequester.IsInteresting
- uid: MonoTorrent.PiecePicking.IPieceRequester.Initialise*
  commentId: Overload:MonoTorrent.PiecePicking.IPieceRequester.Initialise
  href: MonoTorrent.PiecePicking.IPieceRequester.html#MonoTorrent_PiecePicking_IPieceRequester_Initialise_MonoTorrent_PiecePicking_IPieceRequesterData_MonoTorrent_PiecePicking_IMessageEnqueuer_System_ReadOnlySpan_MonoTorrent_ReadOnlyBitField__
  name: Initialise
  nameWithType: IPieceRequester.Initialise
  fullName: MonoTorrent.PiecePicking.IPieceRequester.Initialise
- uid: MonoTorrent.PiecePicking.IPieceRequesterData
  commentId: T:MonoTorrent.PiecePicking.IPieceRequesterData
  parent: MonoTorrent.PiecePicking
  href: MonoTorrent.PiecePicking.IPieceRequesterData.html
  name: IPieceRequesterData
  nameWithType: IPieceRequesterData
  fullName: MonoTorrent.PiecePicking.IPieceRequesterData
- uid: MonoTorrent.PiecePicking.IMessageEnqueuer
  commentId: T:MonoTorrent.PiecePicking.IMessageEnqueuer
  parent: MonoTorrent.PiecePicking
  href: MonoTorrent.PiecePicking.IMessageEnqueuer.html
  name: IMessageEnqueuer
  nameWithType: IMessageEnqueuer
  fullName: MonoTorrent.PiecePicking.IMessageEnqueuer
- uid: MonoTorrent.PiecePicking.IPieceRequester.CancelRequests*
  commentId: Overload:MonoTorrent.PiecePicking.IPieceRequester.CancelRequests
  href: MonoTorrent.PiecePicking.IPieceRequester.html#MonoTorrent_PiecePicking_IPieceRequester_CancelRequests_MonoTorrent_PiecePicking_IRequester_System_Int32_System_Int32_
  name: CancelRequests
  nameWithType: IPieceRequester.CancelRequests
  fullName: MonoTorrent.PiecePicking.IPieceRequester.CancelRequests
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: MonoTorrent.PiecePicking.IPieceRequester.RequestRejected*
  commentId: Overload:MonoTorrent.PiecePicking.IPieceRequester.RequestRejected
  href: MonoTorrent.PiecePicking.IPieceRequester.html#MonoTorrent_PiecePicking_IPieceRequester_RequestRejected_MonoTorrent_PiecePicking_IRequester_MonoTorrent_PiecePicking_PieceSegment_
  name: RequestRejected
  nameWithType: IPieceRequester.RequestRejected
  fullName: MonoTorrent.PiecePicking.IPieceRequester.RequestRejected
- uid: MonoTorrent.PiecePicking.IPieceRequester.CurrentRequestCount*
  commentId: Overload:MonoTorrent.PiecePicking.IPieceRequester.CurrentRequestCount
  href: MonoTorrent.PiecePicking.IPieceRequester.html#MonoTorrent_PiecePicking_IPieceRequester_CurrentRequestCount
  name: CurrentRequestCount
  nameWithType: IPieceRequester.CurrentRequestCount
  fullName: MonoTorrent.PiecePicking.IPieceRequester.CurrentRequestCount
