### YamlMime:ManagedReference
items:
- uid: MonoTorrent.Connections.ISocketConnector
  commentId: T:MonoTorrent.Connections.ISocketConnector
  id: ISocketConnector
  parent: MonoTorrent.Connections
  children:
  - MonoTorrent.Connections.ISocketConnector.ConnectAsync(System.Uri,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: ISocketConnector
  nameWithType: ISocketConnector
  fullName: MonoTorrent.Connections.ISocketConnector
  type: Interface
  source:
    remote:
      path: MonoTorrent/src/Connections/ISocketConnector.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: ISocketConnector
    path: src/Connections/ISocketConnector.cs
    startLine: 8
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.Connections
  syntax:
    content: public interface ISocketConnector
    content.vb: Public Interface ISocketConnector
- uid: MonoTorrent.Connections.ISocketConnector.ConnectAsync(System.Uri,System.Threading.CancellationToken)
  commentId: M:MonoTorrent.Connections.ISocketConnector.ConnectAsync(System.Uri,System.Threading.CancellationToken)
  id: ConnectAsync(System.Uri,System.Threading.CancellationToken)
  parent: MonoTorrent.Connections.ISocketConnector
  langs:
  - csharp
  - vb
  name: ConnectAsync(Uri, CancellationToken)
  nameWithType: ISocketConnector.ConnectAsync(Uri, CancellationToken)
  fullName: MonoTorrent.Connections.ISocketConnector.ConnectAsync(System.Uri, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: MonoTorrent/src/Connections/ISocketConnector.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: ConnectAsync
    path: src/Connections/ISocketConnector.cs
    startLine: 10
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent.Connections
  syntax:
    content: ReusableTask<Socket> ConnectAsync(Uri uri, CancellationToken token)
    parameters:
    - id: uri
      type: System.Uri
    - id: token
      type: System.Threading.CancellationToken
    return:
      type: ReusableTasks.ReusableTask{System.Net.Sockets.Socket}
    content.vb: Function ConnectAsync(uri As Uri, token As CancellationToken) As ReusableTask(Of Socket)
  overload: MonoTorrent.Connections.ISocketConnector.ConnectAsync*
references:
- uid: MonoTorrent.Connections
  commentId: N:MonoTorrent.Connections
  href: MonoTorrent.html
  name: MonoTorrent.Connections
  nameWithType: MonoTorrent.Connections
  fullName: MonoTorrent.Connections
  spec.csharp:
  - uid: MonoTorrent
    name: MonoTorrent
    href: MonoTorrent.html
  - name: .
  - uid: MonoTorrent.Connections
    name: Connections
    href: MonoTorrent.Connections.html
  spec.vb:
  - uid: MonoTorrent
    name: MonoTorrent
    href: MonoTorrent.html
  - name: .
  - uid: MonoTorrent.Connections
    name: Connections
    href: MonoTorrent.Connections.html
- uid: MonoTorrent.Connections.ISocketConnector.ConnectAsync*
  commentId: Overload:MonoTorrent.Connections.ISocketConnector.ConnectAsync
  href: MonoTorrent.Connections.ISocketConnector.html#MonoTorrent_Connections_ISocketConnector_ConnectAsync_System_Uri_System_Threading_CancellationToken_
  name: ConnectAsync
  nameWithType: ISocketConnector.ConnectAsync
  fullName: MonoTorrent.Connections.ISocketConnector.ConnectAsync
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uri
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: ReusableTasks.ReusableTask{System.Net.Sockets.Socket}
  commentId: T:ReusableTasks.ReusableTask{System.Net.Sockets.Socket}
  parent: ReusableTasks
  definition: ReusableTasks.ReusableTask`1
  href: https://learn.microsoft.com/dotnet/api/system.net.sockets.socket
  name: ReusableTask<Socket>
  nameWithType: ReusableTask<Socket>
  fullName: ReusableTasks.ReusableTask<System.Net.Sockets.Socket>
  nameWithType.vb: ReusableTask(Of Socket)
  fullName.vb: ReusableTasks.ReusableTask(Of System.Net.Sockets.Socket)
  name.vb: ReusableTask(Of Socket)
  spec.csharp:
  - uid: ReusableTasks.ReusableTask`1
    name: ReusableTask
    isExternal: true
  - name: <
  - uid: System.Net.Sockets.Socket
    name: Socket
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.net.sockets.socket
  - name: '>'
  spec.vb:
  - uid: ReusableTasks.ReusableTask`1
    name: ReusableTask
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Net.Sockets.Socket
    name: Socket
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.net.sockets.socket
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: ReusableTasks.ReusableTask`1
  commentId: T:ReusableTasks.ReusableTask`1
  isExternal: true
  name: ReusableTask<T>
  nameWithType: ReusableTask<T>
  fullName: ReusableTasks.ReusableTask<T>
  nameWithType.vb: ReusableTask(Of T)
  fullName.vb: ReusableTasks.ReusableTask(Of T)
  name.vb: ReusableTask(Of T)
  spec.csharp:
  - uid: ReusableTasks.ReusableTask`1
    name: ReusableTask
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: ReusableTasks.ReusableTask`1
    name: ReusableTask
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: ReusableTasks
  commentId: N:ReusableTasks
  isExternal: true
  name: ReusableTasks
  nameWithType: ReusableTasks
  fullName: ReusableTasks
