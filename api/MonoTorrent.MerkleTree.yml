### YamlMime:ManagedReference
items:
- uid: MonoTorrent.MerkleTree
  commentId: T:MonoTorrent.MerkleTree
  id: MerkleTree
  parent: MonoTorrent
  children:
  - MonoTorrent.MerkleTree.#ctor(MonoTorrent.MerkleRoot,System.Int32,System.Int32)
  - MonoTorrent.MerkleTree.PieceLayerHashCount
  - MonoTorrent.MerkleTree.PieceLayerIndex
  - MonoTorrent.MerkleTree.TryAppend(System.Int32,System.Int32,System.Int32,System.ReadOnlySpan{System.Byte})
  - MonoTorrent.MerkleTree.TryVerify(MonoTorrent.ReadOnlyMerkleTree@)
  langs:
  - csharp
  - vb
  name: MerkleTree
  nameWithType: MerkleTree
  fullName: MonoTorrent.MerkleTree
  type: Class
  source:
    remote:
      path: MonoTorrent/src/MerkleTree.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: MerkleTree
    path: src/MerkleTree.cs
    startLine: 38
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent
  syntax:
    content: public class MerkleTree
    content.vb: Public Class MerkleTree
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: MonoTorrent.MerkleTree.PieceLayerIndex
  commentId: P:MonoTorrent.MerkleTree.PieceLayerIndex
  id: PieceLayerIndex
  parent: MonoTorrent.MerkleTree
  langs:
  - csharp
  - vb
  name: PieceLayerIndex
  nameWithType: MerkleTree.PieceLayerIndex
  fullName: MonoTorrent.MerkleTree.PieceLayerIndex
  type: Property
  source:
    remote:
      path: MonoTorrent/src/MerkleTree.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: PieceLayerIndex
    path: src/MerkleTree.cs
    startLine: 46
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent
  syntax:
    content: public int PieceLayerIndex { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property PieceLayerIndex As Integer
  overload: MonoTorrent.MerkleTree.PieceLayerIndex*
- uid: MonoTorrent.MerkleTree.PieceLayerHashCount
  commentId: P:MonoTorrent.MerkleTree.PieceLayerHashCount
  id: PieceLayerHashCount
  parent: MonoTorrent.MerkleTree
  langs:
  - csharp
  - vb
  name: PieceLayerHashCount
  nameWithType: MerkleTree.PieceLayerHashCount
  fullName: MonoTorrent.MerkleTree.PieceLayerHashCount
  type: Property
  source:
    remote:
      path: MonoTorrent/src/MerkleTree.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: PieceLayerHashCount
    path: src/MerkleTree.cs
    startLine: 48
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent
  syntax:
    content: public int PieceLayerHashCount { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property PieceLayerHashCount As Integer
  overload: MonoTorrent.MerkleTree.PieceLayerHashCount*
- uid: MonoTorrent.MerkleTree.#ctor(MonoTorrent.MerkleRoot,System.Int32,System.Int32)
  commentId: M:MonoTorrent.MerkleTree.#ctor(MonoTorrent.MerkleRoot,System.Int32,System.Int32)
  id: '#ctor(MonoTorrent.MerkleRoot,System.Int32,System.Int32)'
  parent: MonoTorrent.MerkleTree
  langs:
  - csharp
  - vb
  name: MerkleTree(MerkleRoot, int, int)
  nameWithType: MerkleTree.MerkleTree(MerkleRoot, int, int)
  fullName: MonoTorrent.MerkleTree.MerkleTree(MonoTorrent.MerkleRoot, int, int)
  type: Constructor
  source:
    remote:
      path: MonoTorrent/src/MerkleTree.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: .ctor
    path: src/MerkleTree.cs
    startLine: 50
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent
  syntax:
    content: public MerkleTree(MerkleRoot expectedRoot, int pieceLength, int pieceLayerHashCount)
    parameters:
    - id: expectedRoot
      type: MonoTorrent.MerkleRoot
    - id: pieceLength
      type: System.Int32
    - id: pieceLayerHashCount
      type: System.Int32
    content.vb: Public Sub New(expectedRoot As MerkleRoot, pieceLength As Integer, pieceLayerHashCount As Integer)
  overload: MonoTorrent.MerkleTree.#ctor*
  nameWithType.vb: MerkleTree.New(MerkleRoot, Integer, Integer)
  fullName.vb: MonoTorrent.MerkleTree.New(MonoTorrent.MerkleRoot, Integer, Integer)
  name.vb: New(MerkleRoot, Integer, Integer)
- uid: MonoTorrent.MerkleTree.TryAppend(System.Int32,System.Int32,System.Int32,System.ReadOnlySpan{System.Byte})
  commentId: M:MonoTorrent.MerkleTree.TryAppend(System.Int32,System.Int32,System.Int32,System.ReadOnlySpan{System.Byte})
  id: TryAppend(System.Int32,System.Int32,System.Int32,System.ReadOnlySpan{System.Byte})
  parent: MonoTorrent.MerkleTree
  langs:
  - csharp
  - vb
  name: TryAppend(int, int, int, ReadOnlySpan<byte>)
  nameWithType: MerkleTree.TryAppend(int, int, int, ReadOnlySpan<byte>)
  fullName: MonoTorrent.MerkleTree.TryAppend(int, int, int, System.ReadOnlySpan<byte>)
  type: Method
  source:
    remote:
      path: MonoTorrent/src/MerkleTree.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: TryAppend
    path: src/MerkleTree.cs
    startLine: 73
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent
  syntax:
    content: public bool TryAppend(int baseLayer, int index, int length, ReadOnlySpan<byte> hashesAndProofs)
    parameters:
    - id: baseLayer
      type: System.Int32
    - id: index
      type: System.Int32
    - id: length
      type: System.Int32
    - id: hashesAndProofs
      type: System.ReadOnlySpan{System.Byte}
    return:
      type: System.Boolean
    content.vb: Public Function TryAppend(baseLayer As Integer, index As Integer, length As Integer, hashesAndProofs As ReadOnlySpan(Of Byte)) As Boolean
  overload: MonoTorrent.MerkleTree.TryAppend*
  nameWithType.vb: MerkleTree.TryAppend(Integer, Integer, Integer, ReadOnlySpan(Of Byte))
  fullName.vb: MonoTorrent.MerkleTree.TryAppend(Integer, Integer, Integer, System.ReadOnlySpan(Of Byte))
  name.vb: TryAppend(Integer, Integer, Integer, ReadOnlySpan(Of Byte))
- uid: MonoTorrent.MerkleTree.TryVerify(MonoTorrent.ReadOnlyMerkleTree@)
  commentId: M:MonoTorrent.MerkleTree.TryVerify(MonoTorrent.ReadOnlyMerkleTree@)
  id: TryVerify(MonoTorrent.ReadOnlyMerkleTree@)
  parent: MonoTorrent.MerkleTree
  langs:
  - csharp
  - vb
  name: TryVerify(out ReadOnlyMerkleTree?)
  nameWithType: MerkleTree.TryVerify(out ReadOnlyMerkleTree?)
  fullName: MonoTorrent.MerkleTree.TryVerify(out MonoTorrent.ReadOnlyMerkleTree?)
  type: Method
  source:
    remote:
      path: MonoTorrent/src/MerkleTree.cs
      branch: dev
      repo: https://github.com/KA4I/TorrentCycle.git
    id: TryVerify
    path: src/MerkleTree.cs
    startLine: 109
  assemblies:
  - MonoTorrent
  namespace: MonoTorrent
  syntax:
    content: public bool TryVerify(out ReadOnlyMerkleTree? verifiedMerkleTree)
    parameters:
    - id: verifiedMerkleTree
      type: MonoTorrent.ReadOnlyMerkleTree
    return:
      type: System.Boolean
    content.vb: Public Function TryVerify(verifiedMerkleTree As ReadOnlyMerkleTree) As Boolean
  overload: MonoTorrent.MerkleTree.TryVerify*
  nameWithType.vb: MerkleTree.TryVerify(ReadOnlyMerkleTree)
  fullName.vb: MonoTorrent.MerkleTree.TryVerify(MonoTorrent.ReadOnlyMerkleTree)
  name.vb: TryVerify(ReadOnlyMerkleTree)
references:
- uid: MonoTorrent
  commentId: N:MonoTorrent
  href: MonoTorrent.html
  name: MonoTorrent
  nameWithType: MonoTorrent
  fullName: MonoTorrent
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: MonoTorrent.MerkleTree.PieceLayerIndex*
  commentId: Overload:MonoTorrent.MerkleTree.PieceLayerIndex
  href: MonoTorrent.MerkleTree.html#MonoTorrent_MerkleTree_PieceLayerIndex
  name: PieceLayerIndex
  nameWithType: MerkleTree.PieceLayerIndex
  fullName: MonoTorrent.MerkleTree.PieceLayerIndex
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: MonoTorrent.MerkleTree.PieceLayerHashCount*
  commentId: Overload:MonoTorrent.MerkleTree.PieceLayerHashCount
  href: MonoTorrent.MerkleTree.html#MonoTorrent_MerkleTree_PieceLayerHashCount
  name: PieceLayerHashCount
  nameWithType: MerkleTree.PieceLayerHashCount
  fullName: MonoTorrent.MerkleTree.PieceLayerHashCount
- uid: MonoTorrent.MerkleTree.#ctor*
  commentId: Overload:MonoTorrent.MerkleTree.#ctor
  href: MonoTorrent.MerkleTree.html#MonoTorrent_MerkleTree__ctor_MonoTorrent_MerkleRoot_System_Int32_System_Int32_
  name: MerkleTree
  nameWithType: MerkleTree.MerkleTree
  fullName: MonoTorrent.MerkleTree.MerkleTree
  nameWithType.vb: MerkleTree.New
  fullName.vb: MonoTorrent.MerkleTree.New
  name.vb: New
- uid: MonoTorrent.MerkleRoot
  commentId: T:MonoTorrent.MerkleRoot
  parent: MonoTorrent
  href: MonoTorrent.MerkleRoot.html
  name: MerkleRoot
  nameWithType: MerkleRoot
  fullName: MonoTorrent.MerkleRoot
- uid: MonoTorrent.MerkleTree.TryAppend*
  commentId: Overload:MonoTorrent.MerkleTree.TryAppend
  href: MonoTorrent.MerkleTree.html#MonoTorrent_MerkleTree_TryAppend_System_Int32_System_Int32_System_Int32_System_ReadOnlySpan_System_Byte__
  name: TryAppend
  nameWithType: MerkleTree.TryAppend
  fullName: MonoTorrent.MerkleTree.TryAppend
- uid: System.ReadOnlySpan{System.Byte}
  commentId: T:System.ReadOnlySpan{System.Byte}
  parent: System
  definition: System.ReadOnlySpan`1
  href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  name: ReadOnlySpan<byte>
  nameWithType: ReadOnlySpan<byte>
  fullName: System.ReadOnlySpan<byte>
  nameWithType.vb: ReadOnlySpan(Of Byte)
  fullName.vb: System.ReadOnlySpan(Of Byte)
  name.vb: ReadOnlySpan(Of Byte)
  spec.csharp:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: <
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '>'
  spec.vb:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.ReadOnlySpan`1
  commentId: T:System.ReadOnlySpan`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  name: ReadOnlySpan<T>
  nameWithType: ReadOnlySpan<T>
  fullName: System.ReadOnlySpan<T>
  nameWithType.vb: ReadOnlySpan(Of T)
  fullName.vb: System.ReadOnlySpan(Of T)
  name.vb: ReadOnlySpan(Of T)
  spec.csharp:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: MonoTorrent.MerkleTree.TryVerify*
  commentId: Overload:MonoTorrent.MerkleTree.TryVerify
  href: MonoTorrent.MerkleTree.html#MonoTorrent_MerkleTree_TryVerify_MonoTorrent_ReadOnlyMerkleTree__
  name: TryVerify
  nameWithType: MerkleTree.TryVerify
  fullName: MonoTorrent.MerkleTree.TryVerify
- uid: MonoTorrent.ReadOnlyMerkleTree
  commentId: T:MonoTorrent.ReadOnlyMerkleTree
  parent: MonoTorrent
  href: MonoTorrent.ReadOnlyMerkleTree.html
  name: ReadOnlyMerkleTree
  nameWithType: ReadOnlyMerkleTree
  fullName: MonoTorrent.ReadOnlyMerkleTree
